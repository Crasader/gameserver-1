// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BseHallRoomList.proto

package com.xinqihd.sns.gameserver.proto;

public final class XinqiBseHallRoomList {
  private XinqiBseHallRoomList() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface BseHallRoomListOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // repeated int32 roomId = 1;
    java.util.List<java.lang.Integer> getRoomIdList();
    int getRoomIdCount();
    int getRoomId(int index);
    
    // repeated string roomName = 2;
    java.util.List<String> getRoomNameList();
    int getRoomNameCount();
    String getRoomName(int index);
    
    // repeated int32 roomType = 3;
    java.util.List<java.lang.Integer> getRoomTypeList();
    int getRoomTypeCount();
    int getRoomType(int index);
    
    // repeated int32 difficulty = 4;
    java.util.List<java.lang.Integer> getDifficultyList();
    int getDifficultyCount();
    int getDifficulty(int index);
    
    // repeated int32 userCount = 5;
    java.util.List<java.lang.Integer> getUserCountList();
    int getUserCountCount();
    int getUserCount(int index);
    
    // repeated string roomKey = 6;
    java.util.List<String> getRoomKeyList();
    int getRoomKeyCount();
    String getRoomKey(int index);
    
    // repeated int32 battleState = 7;
    java.util.List<java.lang.Integer> getBattleStateList();
    int getBattleStateCount();
    int getBattleState(int index);
    
    // required int32 roomCount = 8;
    boolean hasRoomCount();
    int getRoomCount();
    
    // repeated int32 seatCount = 9;
    java.util.List<java.lang.Integer> getSeatCountList();
    int getSeatCountCount();
    int getSeatCount(int index);
    
    // optional int32 page = 10 [default = 0];
    boolean hasPage();
    int getPage();
  }
  public static final class BseHallRoomList extends
      com.google.protobuf.GeneratedMessage
      implements BseHallRoomListOrBuilder {
    // Use BseHallRoomList.newBuilder() to construct.
    private BseHallRoomList(Builder builder) {
      super(builder);
    }
    private BseHallRoomList(boolean noInit) {}
    
    private static final BseHallRoomList defaultInstance;
    public static BseHallRoomList getDefaultInstance() {
      return defaultInstance;
    }
    
    public BseHallRoomList getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.xinqihd.sns.gameserver.proto.XinqiBseHallRoomList.internal_static_com_xinqihd_sns_gameserver_proto_BseHallRoomList_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.xinqihd.sns.gameserver.proto.XinqiBseHallRoomList.internal_static_com_xinqihd_sns_gameserver_proto_BseHallRoomList_fieldAccessorTable;
    }
    
    private int bitField0_;
    // repeated int32 roomId = 1;
    public static final int ROOMID_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> roomId_;
    public java.util.List<java.lang.Integer>
        getRoomIdList() {
      return roomId_;
    }
    public int getRoomIdCount() {
      return roomId_.size();
    }
    public int getRoomId(int index) {
      return roomId_.get(index);
    }
    
    // repeated string roomName = 2;
    public static final int ROOMNAME_FIELD_NUMBER = 2;
    private com.google.protobuf.LazyStringList roomName_;
    public java.util.List<String>
        getRoomNameList() {
      return roomName_;
    }
    public int getRoomNameCount() {
      return roomName_.size();
    }
    public String getRoomName(int index) {
      return roomName_.get(index);
    }
    
    // repeated int32 roomType = 3;
    public static final int ROOMTYPE_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> roomType_;
    public java.util.List<java.lang.Integer>
        getRoomTypeList() {
      return roomType_;
    }
    public int getRoomTypeCount() {
      return roomType_.size();
    }
    public int getRoomType(int index) {
      return roomType_.get(index);
    }
    
    // repeated int32 difficulty = 4;
    public static final int DIFFICULTY_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> difficulty_;
    public java.util.List<java.lang.Integer>
        getDifficultyList() {
      return difficulty_;
    }
    public int getDifficultyCount() {
      return difficulty_.size();
    }
    public int getDifficulty(int index) {
      return difficulty_.get(index);
    }
    
    // repeated int32 userCount = 5;
    public static final int USERCOUNT_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> userCount_;
    public java.util.List<java.lang.Integer>
        getUserCountList() {
      return userCount_;
    }
    public int getUserCountCount() {
      return userCount_.size();
    }
    public int getUserCount(int index) {
      return userCount_.get(index);
    }
    
    // repeated string roomKey = 6;
    public static final int ROOMKEY_FIELD_NUMBER = 6;
    private com.google.protobuf.LazyStringList roomKey_;
    public java.util.List<String>
        getRoomKeyList() {
      return roomKey_;
    }
    public int getRoomKeyCount() {
      return roomKey_.size();
    }
    public String getRoomKey(int index) {
      return roomKey_.get(index);
    }
    
    // repeated int32 battleState = 7;
    public static final int BATTLESTATE_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> battleState_;
    public java.util.List<java.lang.Integer>
        getBattleStateList() {
      return battleState_;
    }
    public int getBattleStateCount() {
      return battleState_.size();
    }
    public int getBattleState(int index) {
      return battleState_.get(index);
    }
    
    // required int32 roomCount = 8;
    public static final int ROOMCOUNT_FIELD_NUMBER = 8;
    private int roomCount_;
    public boolean hasRoomCount() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getRoomCount() {
      return roomCount_;
    }
    
    // repeated int32 seatCount = 9;
    public static final int SEATCOUNT_FIELD_NUMBER = 9;
    private java.util.List<java.lang.Integer> seatCount_;
    public java.util.List<java.lang.Integer>
        getSeatCountList() {
      return seatCount_;
    }
    public int getSeatCountCount() {
      return seatCount_.size();
    }
    public int getSeatCount(int index) {
      return seatCount_.get(index);
    }
    
    // optional int32 page = 10 [default = 0];
    public static final int PAGE_FIELD_NUMBER = 10;
    private int page_;
    public boolean hasPage() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getPage() {
      return page_;
    }
    
    private void initFields() {
      roomId_ = java.util.Collections.emptyList();;
      roomName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      roomType_ = java.util.Collections.emptyList();;
      difficulty_ = java.util.Collections.emptyList();;
      userCount_ = java.util.Collections.emptyList();;
      roomKey_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      battleState_ = java.util.Collections.emptyList();;
      roomCount_ = 0;
      seatCount_ = java.util.Collections.emptyList();;
      page_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasRoomCount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < roomId_.size(); i++) {
        output.writeInt32(1, roomId_.get(i));
      }
      for (int i = 0; i < roomName_.size(); i++) {
        output.writeBytes(2, roomName_.getByteString(i));
      }
      for (int i = 0; i < roomType_.size(); i++) {
        output.writeInt32(3, roomType_.get(i));
      }
      for (int i = 0; i < difficulty_.size(); i++) {
        output.writeInt32(4, difficulty_.get(i));
      }
      for (int i = 0; i < userCount_.size(); i++) {
        output.writeInt32(5, userCount_.get(i));
      }
      for (int i = 0; i < roomKey_.size(); i++) {
        output.writeBytes(6, roomKey_.getByteString(i));
      }
      for (int i = 0; i < battleState_.size(); i++) {
        output.writeInt32(7, battleState_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(8, roomCount_);
      }
      for (int i = 0; i < seatCount_.size(); i++) {
        output.writeInt32(9, seatCount_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(10, page_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < roomId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(roomId_.get(i));
        }
        size += dataSize;
        size += 1 * getRoomIdList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < roomName_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(roomName_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getRoomNameList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < roomType_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(roomType_.get(i));
        }
        size += dataSize;
        size += 1 * getRoomTypeList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < difficulty_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(difficulty_.get(i));
        }
        size += dataSize;
        size += 1 * getDifficultyList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < userCount_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(userCount_.get(i));
        }
        size += dataSize;
        size += 1 * getUserCountList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < roomKey_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(roomKey_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getRoomKeyList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < battleState_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(battleState_.get(i));
        }
        size += dataSize;
        size += 1 * getBattleStateList().size();
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, roomCount_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < seatCount_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(seatCount_.get(i));
        }
        size += dataSize;
        size += 1 * getSeatCountList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, page_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.xinqihd.sns.gameserver.proto.XinqiBseHallRoomList.BseHallRoomList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiBseHallRoomList.BseHallRoomList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiBseHallRoomList.BseHallRoomList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiBseHallRoomList.BseHallRoomList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiBseHallRoomList.BseHallRoomList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiBseHallRoomList.BseHallRoomList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiBseHallRoomList.BseHallRoomList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiBseHallRoomList.BseHallRoomList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiBseHallRoomList.BseHallRoomList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiBseHallRoomList.BseHallRoomList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.xinqihd.sns.gameserver.proto.XinqiBseHallRoomList.BseHallRoomList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.xinqihd.sns.gameserver.proto.XinqiBseHallRoomList.BseHallRoomListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.xinqihd.sns.gameserver.proto.XinqiBseHallRoomList.internal_static_com_xinqihd_sns_gameserver_proto_BseHallRoomList_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.xinqihd.sns.gameserver.proto.XinqiBseHallRoomList.internal_static_com_xinqihd_sns_gameserver_proto_BseHallRoomList_fieldAccessorTable;
      }
      
      // Construct using com.xinqihd.sns.gameserver.proto.XinqiBseHallRoomList.BseHallRoomList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        roomId_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000001);
        roomName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        roomType_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000004);
        difficulty_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000008);
        userCount_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000010);
        roomKey_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000020);
        battleState_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000040);
        roomCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        seatCount_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000100);
        page_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.xinqihd.sns.gameserver.proto.XinqiBseHallRoomList.BseHallRoomList.getDescriptor();
      }
      
      public com.xinqihd.sns.gameserver.proto.XinqiBseHallRoomList.BseHallRoomList getDefaultInstanceForType() {
        return com.xinqihd.sns.gameserver.proto.XinqiBseHallRoomList.BseHallRoomList.getDefaultInstance();
      }
      
      public com.xinqihd.sns.gameserver.proto.XinqiBseHallRoomList.BseHallRoomList build() {
        com.xinqihd.sns.gameserver.proto.XinqiBseHallRoomList.BseHallRoomList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.xinqihd.sns.gameserver.proto.XinqiBseHallRoomList.BseHallRoomList buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.xinqihd.sns.gameserver.proto.XinqiBseHallRoomList.BseHallRoomList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.xinqihd.sns.gameserver.proto.XinqiBseHallRoomList.BseHallRoomList buildPartial() {
        com.xinqihd.sns.gameserver.proto.XinqiBseHallRoomList.BseHallRoomList result = new com.xinqihd.sns.gameserver.proto.XinqiBseHallRoomList.BseHallRoomList(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          roomId_ = java.util.Collections.unmodifiableList(roomId_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.roomId_ = roomId_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          roomName_ = new com.google.protobuf.UnmodifiableLazyStringList(
              roomName_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.roomName_ = roomName_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          roomType_ = java.util.Collections.unmodifiableList(roomType_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.roomType_ = roomType_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          difficulty_ = java.util.Collections.unmodifiableList(difficulty_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.difficulty_ = difficulty_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          userCount_ = java.util.Collections.unmodifiableList(userCount_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.userCount_ = userCount_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          roomKey_ = new com.google.protobuf.UnmodifiableLazyStringList(
              roomKey_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.roomKey_ = roomKey_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          battleState_ = java.util.Collections.unmodifiableList(battleState_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.battleState_ = battleState_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000001;
        }
        result.roomCount_ = roomCount_;
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          seatCount_ = java.util.Collections.unmodifiableList(seatCount_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.seatCount_ = seatCount_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000002;
        }
        result.page_ = page_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.xinqihd.sns.gameserver.proto.XinqiBseHallRoomList.BseHallRoomList) {
          return mergeFrom((com.xinqihd.sns.gameserver.proto.XinqiBseHallRoomList.BseHallRoomList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.xinqihd.sns.gameserver.proto.XinqiBseHallRoomList.BseHallRoomList other) {
        if (other == com.xinqihd.sns.gameserver.proto.XinqiBseHallRoomList.BseHallRoomList.getDefaultInstance()) return this;
        if (!other.roomId_.isEmpty()) {
          if (roomId_.isEmpty()) {
            roomId_ = other.roomId_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureRoomIdIsMutable();
            roomId_.addAll(other.roomId_);
          }
          onChanged();
        }
        if (!other.roomName_.isEmpty()) {
          if (roomName_.isEmpty()) {
            roomName_ = other.roomName_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureRoomNameIsMutable();
            roomName_.addAll(other.roomName_);
          }
          onChanged();
        }
        if (!other.roomType_.isEmpty()) {
          if (roomType_.isEmpty()) {
            roomType_ = other.roomType_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureRoomTypeIsMutable();
            roomType_.addAll(other.roomType_);
          }
          onChanged();
        }
        if (!other.difficulty_.isEmpty()) {
          if (difficulty_.isEmpty()) {
            difficulty_ = other.difficulty_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureDifficultyIsMutable();
            difficulty_.addAll(other.difficulty_);
          }
          onChanged();
        }
        if (!other.userCount_.isEmpty()) {
          if (userCount_.isEmpty()) {
            userCount_ = other.userCount_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureUserCountIsMutable();
            userCount_.addAll(other.userCount_);
          }
          onChanged();
        }
        if (!other.roomKey_.isEmpty()) {
          if (roomKey_.isEmpty()) {
            roomKey_ = other.roomKey_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureRoomKeyIsMutable();
            roomKey_.addAll(other.roomKey_);
          }
          onChanged();
        }
        if (!other.battleState_.isEmpty()) {
          if (battleState_.isEmpty()) {
            battleState_ = other.battleState_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureBattleStateIsMutable();
            battleState_.addAll(other.battleState_);
          }
          onChanged();
        }
        if (other.hasRoomCount()) {
          setRoomCount(other.getRoomCount());
        }
        if (!other.seatCount_.isEmpty()) {
          if (seatCount_.isEmpty()) {
            seatCount_ = other.seatCount_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureSeatCountIsMutable();
            seatCount_.addAll(other.seatCount_);
          }
          onChanged();
        }
        if (other.hasPage()) {
          setPage(other.getPage());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasRoomCount()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              ensureRoomIdIsMutable();
              roomId_.add(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addRoomId(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 18: {
              ensureRoomNameIsMutable();
              roomName_.add(input.readBytes());
              break;
            }
            case 24: {
              ensureRoomTypeIsMutable();
              roomType_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addRoomType(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              ensureDifficultyIsMutable();
              difficulty_.add(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addDifficulty(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              ensureUserCountIsMutable();
              userCount_.add(input.readInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addUserCount(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 50: {
              ensureRoomKeyIsMutable();
              roomKey_.add(input.readBytes());
              break;
            }
            case 56: {
              ensureBattleStateIsMutable();
              battleState_.add(input.readInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addBattleState(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              roomCount_ = input.readInt32();
              break;
            }
            case 72: {
              ensureSeatCountIsMutable();
              seatCount_.add(input.readInt32());
              break;
            }
            case 74: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addSeatCount(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              page_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated int32 roomId = 1;
      private java.util.List<java.lang.Integer> roomId_ = java.util.Collections.emptyList();;
      private void ensureRoomIdIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          roomId_ = new java.util.ArrayList<java.lang.Integer>(roomId_);
          bitField0_ |= 0x00000001;
         }
      }
      public java.util.List<java.lang.Integer>
          getRoomIdList() {
        return java.util.Collections.unmodifiableList(roomId_);
      }
      public int getRoomIdCount() {
        return roomId_.size();
      }
      public int getRoomId(int index) {
        return roomId_.get(index);
      }
      public Builder setRoomId(
          int index, int value) {
        ensureRoomIdIsMutable();
        roomId_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addRoomId(int value) {
        ensureRoomIdIsMutable();
        roomId_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllRoomId(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRoomIdIsMutable();
        super.addAll(values, roomId_);
        onChanged();
        return this;
      }
      public Builder clearRoomId() {
        roomId_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      
      // repeated string roomName = 2;
      private com.google.protobuf.LazyStringList roomName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureRoomNameIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          roomName_ = new com.google.protobuf.LazyStringArrayList(roomName_);
          bitField0_ |= 0x00000002;
         }
      }
      public java.util.List<String>
          getRoomNameList() {
        return java.util.Collections.unmodifiableList(roomName_);
      }
      public int getRoomNameCount() {
        return roomName_.size();
      }
      public String getRoomName(int index) {
        return roomName_.get(index);
      }
      public Builder setRoomName(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRoomNameIsMutable();
        roomName_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addRoomName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRoomNameIsMutable();
        roomName_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllRoomName(
          java.lang.Iterable<String> values) {
        ensureRoomNameIsMutable();
        super.addAll(values, roomName_);
        onChanged();
        return this;
      }
      public Builder clearRoomName() {
        roomName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      void addRoomName(com.google.protobuf.ByteString value) {
        ensureRoomNameIsMutable();
        roomName_.add(value);
        onChanged();
      }
      
      // repeated int32 roomType = 3;
      private java.util.List<java.lang.Integer> roomType_ = java.util.Collections.emptyList();;
      private void ensureRoomTypeIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          roomType_ = new java.util.ArrayList<java.lang.Integer>(roomType_);
          bitField0_ |= 0x00000004;
         }
      }
      public java.util.List<java.lang.Integer>
          getRoomTypeList() {
        return java.util.Collections.unmodifiableList(roomType_);
      }
      public int getRoomTypeCount() {
        return roomType_.size();
      }
      public int getRoomType(int index) {
        return roomType_.get(index);
      }
      public Builder setRoomType(
          int index, int value) {
        ensureRoomTypeIsMutable();
        roomType_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addRoomType(int value) {
        ensureRoomTypeIsMutable();
        roomType_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllRoomType(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRoomTypeIsMutable();
        super.addAll(values, roomType_);
        onChanged();
        return this;
      }
      public Builder clearRoomType() {
        roomType_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      
      // repeated int32 difficulty = 4;
      private java.util.List<java.lang.Integer> difficulty_ = java.util.Collections.emptyList();;
      private void ensureDifficultyIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          difficulty_ = new java.util.ArrayList<java.lang.Integer>(difficulty_);
          bitField0_ |= 0x00000008;
         }
      }
      public java.util.List<java.lang.Integer>
          getDifficultyList() {
        return java.util.Collections.unmodifiableList(difficulty_);
      }
      public int getDifficultyCount() {
        return difficulty_.size();
      }
      public int getDifficulty(int index) {
        return difficulty_.get(index);
      }
      public Builder setDifficulty(
          int index, int value) {
        ensureDifficultyIsMutable();
        difficulty_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addDifficulty(int value) {
        ensureDifficultyIsMutable();
        difficulty_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllDifficulty(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureDifficultyIsMutable();
        super.addAll(values, difficulty_);
        onChanged();
        return this;
      }
      public Builder clearDifficulty() {
        difficulty_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      
      // repeated int32 userCount = 5;
      private java.util.List<java.lang.Integer> userCount_ = java.util.Collections.emptyList();;
      private void ensureUserCountIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          userCount_ = new java.util.ArrayList<java.lang.Integer>(userCount_);
          bitField0_ |= 0x00000010;
         }
      }
      public java.util.List<java.lang.Integer>
          getUserCountList() {
        return java.util.Collections.unmodifiableList(userCount_);
      }
      public int getUserCountCount() {
        return userCount_.size();
      }
      public int getUserCount(int index) {
        return userCount_.get(index);
      }
      public Builder setUserCount(
          int index, int value) {
        ensureUserCountIsMutable();
        userCount_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addUserCount(int value) {
        ensureUserCountIsMutable();
        userCount_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllUserCount(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureUserCountIsMutable();
        super.addAll(values, userCount_);
        onChanged();
        return this;
      }
      public Builder clearUserCount() {
        userCount_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      
      // repeated string roomKey = 6;
      private com.google.protobuf.LazyStringList roomKey_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureRoomKeyIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          roomKey_ = new com.google.protobuf.LazyStringArrayList(roomKey_);
          bitField0_ |= 0x00000020;
         }
      }
      public java.util.List<String>
          getRoomKeyList() {
        return java.util.Collections.unmodifiableList(roomKey_);
      }
      public int getRoomKeyCount() {
        return roomKey_.size();
      }
      public String getRoomKey(int index) {
        return roomKey_.get(index);
      }
      public Builder setRoomKey(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRoomKeyIsMutable();
        roomKey_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addRoomKey(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRoomKeyIsMutable();
        roomKey_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllRoomKey(
          java.lang.Iterable<String> values) {
        ensureRoomKeyIsMutable();
        super.addAll(values, roomKey_);
        onChanged();
        return this;
      }
      public Builder clearRoomKey() {
        roomKey_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }
      void addRoomKey(com.google.protobuf.ByteString value) {
        ensureRoomKeyIsMutable();
        roomKey_.add(value);
        onChanged();
      }
      
      // repeated int32 battleState = 7;
      private java.util.List<java.lang.Integer> battleState_ = java.util.Collections.emptyList();;
      private void ensureBattleStateIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          battleState_ = new java.util.ArrayList<java.lang.Integer>(battleState_);
          bitField0_ |= 0x00000040;
         }
      }
      public java.util.List<java.lang.Integer>
          getBattleStateList() {
        return java.util.Collections.unmodifiableList(battleState_);
      }
      public int getBattleStateCount() {
        return battleState_.size();
      }
      public int getBattleState(int index) {
        return battleState_.get(index);
      }
      public Builder setBattleState(
          int index, int value) {
        ensureBattleStateIsMutable();
        battleState_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addBattleState(int value) {
        ensureBattleStateIsMutable();
        battleState_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllBattleState(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureBattleStateIsMutable();
        super.addAll(values, battleState_);
        onChanged();
        return this;
      }
      public Builder clearBattleState() {
        battleState_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }
      
      // required int32 roomCount = 8;
      private int roomCount_ ;
      public boolean hasRoomCount() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public int getRoomCount() {
        return roomCount_;
      }
      public Builder setRoomCount(int value) {
        bitField0_ |= 0x00000080;
        roomCount_ = value;
        onChanged();
        return this;
      }
      public Builder clearRoomCount() {
        bitField0_ = (bitField0_ & ~0x00000080);
        roomCount_ = 0;
        onChanged();
        return this;
      }
      
      // repeated int32 seatCount = 9;
      private java.util.List<java.lang.Integer> seatCount_ = java.util.Collections.emptyList();;
      private void ensureSeatCountIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          seatCount_ = new java.util.ArrayList<java.lang.Integer>(seatCount_);
          bitField0_ |= 0x00000100;
         }
      }
      public java.util.List<java.lang.Integer>
          getSeatCountList() {
        return java.util.Collections.unmodifiableList(seatCount_);
      }
      public int getSeatCountCount() {
        return seatCount_.size();
      }
      public int getSeatCount(int index) {
        return seatCount_.get(index);
      }
      public Builder setSeatCount(
          int index, int value) {
        ensureSeatCountIsMutable();
        seatCount_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addSeatCount(int value) {
        ensureSeatCountIsMutable();
        seatCount_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllSeatCount(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSeatCountIsMutable();
        super.addAll(values, seatCount_);
        onChanged();
        return this;
      }
      public Builder clearSeatCount() {
        seatCount_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }
      
      // optional int32 page = 10 [default = 0];
      private int page_ ;
      public boolean hasPage() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public int getPage() {
        return page_;
      }
      public Builder setPage(int value) {
        bitField0_ |= 0x00000200;
        page_ = value;
        onChanged();
        return this;
      }
      public Builder clearPage() {
        bitField0_ = (bitField0_ & ~0x00000200);
        page_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.xinqihd.sns.gameserver.proto.BseHallRoomList)
    }
    
    static {
      defaultInstance = new BseHallRoomList(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.xinqihd.sns.gameserver.proto.BseHallRoomList)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_xinqihd_sns_gameserver_proto_BseHallRoomList_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_xinqihd_sns_gameserver_proto_BseHallRoomList_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\025BseHallRoomList.proto\022 com.xinqihd.sns" +
      ".gameserver.proto\"\311\001\n\017BseHallRoomList\022\016\n" +
      "\006roomId\030\001 \003(\005\022\020\n\010roomName\030\002 \003(\t\022\020\n\010roomT" +
      "ype\030\003 \003(\005\022\022\n\ndifficulty\030\004 \003(\005\022\021\n\tuserCou" +
      "nt\030\005 \003(\005\022\017\n\007roomKey\030\006 \003(\t\022\023\n\013battleState" +
      "\030\007 \003(\005\022\021\n\troomCount\030\010 \002(\005\022\021\n\tseatCount\030\t" +
      " \003(\005\022\017\n\004page\030\n \001(\005:\0010B\026B\024XinqiBseHallRoo" +
      "mList"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_xinqihd_sns_gameserver_proto_BseHallRoomList_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_xinqihd_sns_gameserver_proto_BseHallRoomList_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_xinqihd_sns_gameserver_proto_BseHallRoomList_descriptor,
              new java.lang.String[] { "RoomId", "RoomName", "RoomType", "Difficulty", "UserCount", "RoomKey", "BattleState", "RoomCount", "SeatCount", "Page", },
              com.xinqihd.sns.gameserver.proto.XinqiBseHallRoomList.BseHallRoomList.class,
              com.xinqihd.sns.gameserver.proto.XinqiBseHallRoomList.BseHallRoomList.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
