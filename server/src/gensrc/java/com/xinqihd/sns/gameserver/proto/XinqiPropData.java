// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PropData.proto

package com.xinqihd.sns.gameserver.proto;

public final class XinqiPropData {
  private XinqiPropData() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface PropDataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required string propID = 1;
    boolean hasPropID();
    String getPropID();
    
    // required int32 propPew = 2;
    boolean hasPropPew();
    int getPropPew();
    
    // optional int32 propIndate = 3 [default = 30];
    boolean hasPropIndate();
    int getPropIndate();
    
    // optional int32 level = 4 [default = 0];
    boolean hasLevel();
    int getLevel();
    
    // optional int32 attackLev = 5 [default = 0];
    boolean hasAttackLev();
    int getAttackLev();
    
    // optional int32 defendLev = 6 [default = 0];
    boolean hasDefendLev();
    int getDefendLev();
    
    // optional int32 agilityLev = 7 [default = 0];
    boolean hasAgilityLev();
    int getAgilityLev();
    
    // optional int32 luckLev = 8 [default = 0];
    boolean hasLuckLev();
    int getLuckLev();
    
    // optional int32 color = 9 [default = 0];
    boolean hasColor();
    int getColor();
    
    // optional int32 sign = 10 [default = 0];
    boolean hasSign();
    int getSign();
    
    // optional int32 count = 11 [default = 1];
    boolean hasCount();
    int getCount();
    
    // optional string id = 12;
    boolean hasId();
    String getId();
    
    // optional string typeid = 13 [default = "0"];
    boolean hasTypeid();
    String getTypeid();
    
    // optional int32 valuetype = 14 [default = 0];
    boolean hasValuetype();
    int getValuetype();
    
    // optional bool banded = 15 [default = false];
    boolean hasBanded();
    boolean getBanded();
    
    // optional int32 duration = 16 [default = 0];
    boolean hasDuration();
    int getDuration();
    
    // optional int32 damageLev = 17 [default = 0];
    boolean hasDamageLev();
    int getDamageLev();
    
    // optional int32 skinLev = 18 [default = 0];
    boolean hasSkinLev();
    int getSkinLev();
    
    // optional int32 power = 19 [default = 0];
    boolean hasPower();
    int getPower();
    
    // optional int32 baseAttack = 20 [default = 0];
    boolean hasBaseAttack();
    int getBaseAttack();
    
    // optional int32 baseDefend = 21 [default = 0];
    boolean hasBaseDefend();
    int getBaseDefend();
    
    // optional int32 baseAgility = 22 [default = 0];
    boolean hasBaseAgility();
    int getBaseAgility();
    
    // optional int32 baseLucky = 23 [default = 0];
    boolean hasBaseLucky();
    int getBaseLucky();
    
    // optional int32 basePower = 24 [default = 0];
    boolean hasBasePower();
    int getBasePower();
  }
  public static final class PropData extends
      com.google.protobuf.GeneratedMessage
      implements PropDataOrBuilder {
    // Use PropData.newBuilder() to construct.
    private PropData(Builder builder) {
      super(builder);
    }
    private PropData(boolean noInit) {}
    
    private static final PropData defaultInstance;
    public static PropData getDefaultInstance() {
      return defaultInstance;
    }
    
    public PropData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.xinqihd.sns.gameserver.proto.XinqiPropData.internal_static_com_xinqihd_sns_gameserver_proto_PropData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.xinqihd.sns.gameserver.proto.XinqiPropData.internal_static_com_xinqihd_sns_gameserver_proto_PropData_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required string propID = 1;
    public static final int PROPID_FIELD_NUMBER = 1;
    private java.lang.Object propID_;
    public boolean hasPropID() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getPropID() {
      java.lang.Object ref = propID_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          propID_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getPropIDBytes() {
      java.lang.Object ref = propID_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        propID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required int32 propPew = 2;
    public static final int PROPPEW_FIELD_NUMBER = 2;
    private int propPew_;
    public boolean hasPropPew() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getPropPew() {
      return propPew_;
    }
    
    // optional int32 propIndate = 3 [default = 30];
    public static final int PROPINDATE_FIELD_NUMBER = 3;
    private int propIndate_;
    public boolean hasPropIndate() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getPropIndate() {
      return propIndate_;
    }
    
    // optional int32 level = 4 [default = 0];
    public static final int LEVEL_FIELD_NUMBER = 4;
    private int level_;
    public boolean hasLevel() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getLevel() {
      return level_;
    }
    
    // optional int32 attackLev = 5 [default = 0];
    public static final int ATTACKLEV_FIELD_NUMBER = 5;
    private int attackLev_;
    public boolean hasAttackLev() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getAttackLev() {
      return attackLev_;
    }
    
    // optional int32 defendLev = 6 [default = 0];
    public static final int DEFENDLEV_FIELD_NUMBER = 6;
    private int defendLev_;
    public boolean hasDefendLev() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getDefendLev() {
      return defendLev_;
    }
    
    // optional int32 agilityLev = 7 [default = 0];
    public static final int AGILITYLEV_FIELD_NUMBER = 7;
    private int agilityLev_;
    public boolean hasAgilityLev() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public int getAgilityLev() {
      return agilityLev_;
    }
    
    // optional int32 luckLev = 8 [default = 0];
    public static final int LUCKLEV_FIELD_NUMBER = 8;
    private int luckLev_;
    public boolean hasLuckLev() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public int getLuckLev() {
      return luckLev_;
    }
    
    // optional int32 color = 9 [default = 0];
    public static final int COLOR_FIELD_NUMBER = 9;
    private int color_;
    public boolean hasColor() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public int getColor() {
      return color_;
    }
    
    // optional int32 sign = 10 [default = 0];
    public static final int SIGN_FIELD_NUMBER = 10;
    private int sign_;
    public boolean hasSign() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public int getSign() {
      return sign_;
    }
    
    // optional int32 count = 11 [default = 1];
    public static final int COUNT_FIELD_NUMBER = 11;
    private int count_;
    public boolean hasCount() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    public int getCount() {
      return count_;
    }
    
    // optional string id = 12;
    public static final int ID_FIELD_NUMBER = 12;
    private java.lang.Object id_;
    public boolean hasId() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    public String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          id_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string typeid = 13 [default = "0"];
    public static final int TYPEID_FIELD_NUMBER = 13;
    private java.lang.Object typeid_;
    public boolean hasTypeid() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    public String getTypeid() {
      java.lang.Object ref = typeid_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          typeid_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getTypeidBytes() {
      java.lang.Object ref = typeid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        typeid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional int32 valuetype = 14 [default = 0];
    public static final int VALUETYPE_FIELD_NUMBER = 14;
    private int valuetype_;
    public boolean hasValuetype() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    public int getValuetype() {
      return valuetype_;
    }
    
    // optional bool banded = 15 [default = false];
    public static final int BANDED_FIELD_NUMBER = 15;
    private boolean banded_;
    public boolean hasBanded() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    public boolean getBanded() {
      return banded_;
    }
    
    // optional int32 duration = 16 [default = 0];
    public static final int DURATION_FIELD_NUMBER = 16;
    private int duration_;
    public boolean hasDuration() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    public int getDuration() {
      return duration_;
    }
    
    // optional int32 damageLev = 17 [default = 0];
    public static final int DAMAGELEV_FIELD_NUMBER = 17;
    private int damageLev_;
    public boolean hasDamageLev() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    public int getDamageLev() {
      return damageLev_;
    }
    
    // optional int32 skinLev = 18 [default = 0];
    public static final int SKINLEV_FIELD_NUMBER = 18;
    private int skinLev_;
    public boolean hasSkinLev() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    public int getSkinLev() {
      return skinLev_;
    }
    
    // optional int32 power = 19 [default = 0];
    public static final int POWER_FIELD_NUMBER = 19;
    private int power_;
    public boolean hasPower() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    public int getPower() {
      return power_;
    }
    
    // optional int32 baseAttack = 20 [default = 0];
    public static final int BASEATTACK_FIELD_NUMBER = 20;
    private int baseAttack_;
    public boolean hasBaseAttack() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    public int getBaseAttack() {
      return baseAttack_;
    }
    
    // optional int32 baseDefend = 21 [default = 0];
    public static final int BASEDEFEND_FIELD_NUMBER = 21;
    private int baseDefend_;
    public boolean hasBaseDefend() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    public int getBaseDefend() {
      return baseDefend_;
    }
    
    // optional int32 baseAgility = 22 [default = 0];
    public static final int BASEAGILITY_FIELD_NUMBER = 22;
    private int baseAgility_;
    public boolean hasBaseAgility() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    public int getBaseAgility() {
      return baseAgility_;
    }
    
    // optional int32 baseLucky = 23 [default = 0];
    public static final int BASELUCKY_FIELD_NUMBER = 23;
    private int baseLucky_;
    public boolean hasBaseLucky() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    public int getBaseLucky() {
      return baseLucky_;
    }
    
    // optional int32 basePower = 24 [default = 0];
    public static final int BASEPOWER_FIELD_NUMBER = 24;
    private int basePower_;
    public boolean hasBasePower() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    public int getBasePower() {
      return basePower_;
    }
    
    private void initFields() {
      propID_ = "";
      propPew_ = 0;
      propIndate_ = 30;
      level_ = 0;
      attackLev_ = 0;
      defendLev_ = 0;
      agilityLev_ = 0;
      luckLev_ = 0;
      color_ = 0;
      sign_ = 0;
      count_ = 1;
      id_ = "";
      typeid_ = "0";
      valuetype_ = 0;
      banded_ = false;
      duration_ = 0;
      damageLev_ = 0;
      skinLev_ = 0;
      power_ = 0;
      baseAttack_ = 0;
      baseDefend_ = 0;
      baseAgility_ = 0;
      baseLucky_ = 0;
      basePower_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasPropID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPropPew()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getPropIDBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, propPew_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, propIndate_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, level_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, attackLev_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, defendLev_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, agilityLev_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, luckLev_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, color_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, sign_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, count_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBytes(12, getIdBytes());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeBytes(13, getTypeidBytes());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(14, valuetype_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeBool(15, banded_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(16, duration_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeInt32(17, damageLev_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeInt32(18, skinLev_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeInt32(19, power_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeInt32(20, baseAttack_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeInt32(21, baseDefend_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeInt32(22, baseAgility_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeInt32(23, baseLucky_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeInt32(24, basePower_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getPropIDBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, propPew_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, propIndate_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, level_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, attackLev_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, defendLev_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, agilityLev_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, luckLev_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, color_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, sign_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, count_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(12, getIdBytes());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(13, getTypeidBytes());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, valuetype_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(15, banded_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, duration_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, damageLev_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, skinLev_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, power_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(20, baseAttack_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(21, baseDefend_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(22, baseAgility_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(23, baseLucky_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(24, basePower_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.xinqihd.sns.gameserver.proto.XinqiPropData.PropDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.xinqihd.sns.gameserver.proto.XinqiPropData.internal_static_com_xinqihd_sns_gameserver_proto_PropData_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.xinqihd.sns.gameserver.proto.XinqiPropData.internal_static_com_xinqihd_sns_gameserver_proto_PropData_fieldAccessorTable;
      }
      
      // Construct using com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        propID_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        propPew_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        propIndate_ = 30;
        bitField0_ = (bitField0_ & ~0x00000004);
        level_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        attackLev_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        defendLev_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        agilityLev_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        luckLev_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        color_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        sign_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        count_ = 1;
        bitField0_ = (bitField0_ & ~0x00000400);
        id_ = "";
        bitField0_ = (bitField0_ & ~0x00000800);
        typeid_ = "0";
        bitField0_ = (bitField0_ & ~0x00001000);
        valuetype_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        banded_ = false;
        bitField0_ = (bitField0_ & ~0x00004000);
        duration_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        damageLev_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        skinLev_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        power_ = 0;
        bitField0_ = (bitField0_ & ~0x00040000);
        baseAttack_ = 0;
        bitField0_ = (bitField0_ & ~0x00080000);
        baseDefend_ = 0;
        bitField0_ = (bitField0_ & ~0x00100000);
        baseAgility_ = 0;
        bitField0_ = (bitField0_ & ~0x00200000);
        baseLucky_ = 0;
        bitField0_ = (bitField0_ & ~0x00400000);
        basePower_ = 0;
        bitField0_ = (bitField0_ & ~0x00800000);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData.getDescriptor();
      }
      
      public com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData getDefaultInstanceForType() {
        return com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData.getDefaultInstance();
      }
      
      public com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData build() {
        com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData buildPartial() {
        com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData result = new com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.propID_ = propID_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.propPew_ = propPew_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.propIndate_ = propIndate_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.level_ = level_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.attackLev_ = attackLev_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.defendLev_ = defendLev_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.agilityLev_ = agilityLev_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.luckLev_ = luckLev_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.color_ = color_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.sign_ = sign_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.count_ = count_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.typeid_ = typeid_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.valuetype_ = valuetype_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.banded_ = banded_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.duration_ = duration_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.damageLev_ = damageLev_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.skinLev_ = skinLev_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.power_ = power_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.baseAttack_ = baseAttack_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.baseDefend_ = baseDefend_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.baseAgility_ = baseAgility_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00400000;
        }
        result.baseLucky_ = baseLucky_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00800000;
        }
        result.basePower_ = basePower_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData) {
          return mergeFrom((com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData other) {
        if (other == com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData.getDefaultInstance()) return this;
        if (other.hasPropID()) {
          setPropID(other.getPropID());
        }
        if (other.hasPropPew()) {
          setPropPew(other.getPropPew());
        }
        if (other.hasPropIndate()) {
          setPropIndate(other.getPropIndate());
        }
        if (other.hasLevel()) {
          setLevel(other.getLevel());
        }
        if (other.hasAttackLev()) {
          setAttackLev(other.getAttackLev());
        }
        if (other.hasDefendLev()) {
          setDefendLev(other.getDefendLev());
        }
        if (other.hasAgilityLev()) {
          setAgilityLev(other.getAgilityLev());
        }
        if (other.hasLuckLev()) {
          setLuckLev(other.getLuckLev());
        }
        if (other.hasColor()) {
          setColor(other.getColor());
        }
        if (other.hasSign()) {
          setSign(other.getSign());
        }
        if (other.hasCount()) {
          setCount(other.getCount());
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasTypeid()) {
          setTypeid(other.getTypeid());
        }
        if (other.hasValuetype()) {
          setValuetype(other.getValuetype());
        }
        if (other.hasBanded()) {
          setBanded(other.getBanded());
        }
        if (other.hasDuration()) {
          setDuration(other.getDuration());
        }
        if (other.hasDamageLev()) {
          setDamageLev(other.getDamageLev());
        }
        if (other.hasSkinLev()) {
          setSkinLev(other.getSkinLev());
        }
        if (other.hasPower()) {
          setPower(other.getPower());
        }
        if (other.hasBaseAttack()) {
          setBaseAttack(other.getBaseAttack());
        }
        if (other.hasBaseDefend()) {
          setBaseDefend(other.getBaseDefend());
        }
        if (other.hasBaseAgility()) {
          setBaseAgility(other.getBaseAgility());
        }
        if (other.hasBaseLucky()) {
          setBaseLucky(other.getBaseLucky());
        }
        if (other.hasBasePower()) {
          setBasePower(other.getBasePower());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasPropID()) {
          
          return false;
        }
        if (!hasPropPew()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              propID_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              propPew_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              propIndate_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              level_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              attackLev_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              defendLev_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              agilityLev_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              luckLev_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              color_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              sign_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              count_ = input.readInt32();
              break;
            }
            case 98: {
              bitField0_ |= 0x00000800;
              id_ = input.readBytes();
              break;
            }
            case 106: {
              bitField0_ |= 0x00001000;
              typeid_ = input.readBytes();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              valuetype_ = input.readInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              banded_ = input.readBool();
              break;
            }
            case 128: {
              bitField0_ |= 0x00008000;
              duration_ = input.readInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00010000;
              damageLev_ = input.readInt32();
              break;
            }
            case 144: {
              bitField0_ |= 0x00020000;
              skinLev_ = input.readInt32();
              break;
            }
            case 152: {
              bitField0_ |= 0x00040000;
              power_ = input.readInt32();
              break;
            }
            case 160: {
              bitField0_ |= 0x00080000;
              baseAttack_ = input.readInt32();
              break;
            }
            case 168: {
              bitField0_ |= 0x00100000;
              baseDefend_ = input.readInt32();
              break;
            }
            case 176: {
              bitField0_ |= 0x00200000;
              baseAgility_ = input.readInt32();
              break;
            }
            case 184: {
              bitField0_ |= 0x00400000;
              baseLucky_ = input.readInt32();
              break;
            }
            case 192: {
              bitField0_ |= 0x00800000;
              basePower_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string propID = 1;
      private java.lang.Object propID_ = "";
      public boolean hasPropID() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getPropID() {
        java.lang.Object ref = propID_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          propID_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setPropID(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        propID_ = value;
        onChanged();
        return this;
      }
      public Builder clearPropID() {
        bitField0_ = (bitField0_ & ~0x00000001);
        propID_ = getDefaultInstance().getPropID();
        onChanged();
        return this;
      }
      void setPropID(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        propID_ = value;
        onChanged();
      }
      
      // required int32 propPew = 2;
      private int propPew_ ;
      public boolean hasPropPew() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getPropPew() {
        return propPew_;
      }
      public Builder setPropPew(int value) {
        bitField0_ |= 0x00000002;
        propPew_ = value;
        onChanged();
        return this;
      }
      public Builder clearPropPew() {
        bitField0_ = (bitField0_ & ~0x00000002);
        propPew_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 propIndate = 3 [default = 30];
      private int propIndate_ = 30;
      public boolean hasPropIndate() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getPropIndate() {
        return propIndate_;
      }
      public Builder setPropIndate(int value) {
        bitField0_ |= 0x00000004;
        propIndate_ = value;
        onChanged();
        return this;
      }
      public Builder clearPropIndate() {
        bitField0_ = (bitField0_ & ~0x00000004);
        propIndate_ = 30;
        onChanged();
        return this;
      }
      
      // optional int32 level = 4 [default = 0];
      private int level_ ;
      public boolean hasLevel() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getLevel() {
        return level_;
      }
      public Builder setLevel(int value) {
        bitField0_ |= 0x00000008;
        level_ = value;
        onChanged();
        return this;
      }
      public Builder clearLevel() {
        bitField0_ = (bitField0_ & ~0x00000008);
        level_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 attackLev = 5 [default = 0];
      private int attackLev_ ;
      public boolean hasAttackLev() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getAttackLev() {
        return attackLev_;
      }
      public Builder setAttackLev(int value) {
        bitField0_ |= 0x00000010;
        attackLev_ = value;
        onChanged();
        return this;
      }
      public Builder clearAttackLev() {
        bitField0_ = (bitField0_ & ~0x00000010);
        attackLev_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 defendLev = 6 [default = 0];
      private int defendLev_ ;
      public boolean hasDefendLev() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getDefendLev() {
        return defendLev_;
      }
      public Builder setDefendLev(int value) {
        bitField0_ |= 0x00000020;
        defendLev_ = value;
        onChanged();
        return this;
      }
      public Builder clearDefendLev() {
        bitField0_ = (bitField0_ & ~0x00000020);
        defendLev_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 agilityLev = 7 [default = 0];
      private int agilityLev_ ;
      public boolean hasAgilityLev() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public int getAgilityLev() {
        return agilityLev_;
      }
      public Builder setAgilityLev(int value) {
        bitField0_ |= 0x00000040;
        agilityLev_ = value;
        onChanged();
        return this;
      }
      public Builder clearAgilityLev() {
        bitField0_ = (bitField0_ & ~0x00000040);
        agilityLev_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 luckLev = 8 [default = 0];
      private int luckLev_ ;
      public boolean hasLuckLev() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public int getLuckLev() {
        return luckLev_;
      }
      public Builder setLuckLev(int value) {
        bitField0_ |= 0x00000080;
        luckLev_ = value;
        onChanged();
        return this;
      }
      public Builder clearLuckLev() {
        bitField0_ = (bitField0_ & ~0x00000080);
        luckLev_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 color = 9 [default = 0];
      private int color_ ;
      public boolean hasColor() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public int getColor() {
        return color_;
      }
      public Builder setColor(int value) {
        bitField0_ |= 0x00000100;
        color_ = value;
        onChanged();
        return this;
      }
      public Builder clearColor() {
        bitField0_ = (bitField0_ & ~0x00000100);
        color_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 sign = 10 [default = 0];
      private int sign_ ;
      public boolean hasSign() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public int getSign() {
        return sign_;
      }
      public Builder setSign(int value) {
        bitField0_ |= 0x00000200;
        sign_ = value;
        onChanged();
        return this;
      }
      public Builder clearSign() {
        bitField0_ = (bitField0_ & ~0x00000200);
        sign_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 count = 11 [default = 1];
      private int count_ = 1;
      public boolean hasCount() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public int getCount() {
        return count_;
      }
      public Builder setCount(int value) {
        bitField0_ |= 0x00000400;
        count_ = value;
        onChanged();
        return this;
      }
      public Builder clearCount() {
        bitField0_ = (bitField0_ & ~0x00000400);
        count_ = 1;
        onChanged();
        return this;
      }
      
      // optional string id = 12;
      private java.lang.Object id_ = "";
      public boolean hasId() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      public String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setId(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        id_ = value;
        onChanged();
        return this;
      }
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000800);
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      void setId(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000800;
        id_ = value;
        onChanged();
      }
      
      // optional string typeid = 13 [default = "0"];
      private java.lang.Object typeid_ = "0";
      public boolean hasTypeid() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      public String getTypeid() {
        java.lang.Object ref = typeid_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          typeid_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setTypeid(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        typeid_ = value;
        onChanged();
        return this;
      }
      public Builder clearTypeid() {
        bitField0_ = (bitField0_ & ~0x00001000);
        typeid_ = getDefaultInstance().getTypeid();
        onChanged();
        return this;
      }
      void setTypeid(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00001000;
        typeid_ = value;
        onChanged();
      }
      
      // optional int32 valuetype = 14 [default = 0];
      private int valuetype_ ;
      public boolean hasValuetype() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      public int getValuetype() {
        return valuetype_;
      }
      public Builder setValuetype(int value) {
        bitField0_ |= 0x00002000;
        valuetype_ = value;
        onChanged();
        return this;
      }
      public Builder clearValuetype() {
        bitField0_ = (bitField0_ & ~0x00002000);
        valuetype_ = 0;
        onChanged();
        return this;
      }
      
      // optional bool banded = 15 [default = false];
      private boolean banded_ ;
      public boolean hasBanded() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      public boolean getBanded() {
        return banded_;
      }
      public Builder setBanded(boolean value) {
        bitField0_ |= 0x00004000;
        banded_ = value;
        onChanged();
        return this;
      }
      public Builder clearBanded() {
        bitField0_ = (bitField0_ & ~0x00004000);
        banded_ = false;
        onChanged();
        return this;
      }
      
      // optional int32 duration = 16 [default = 0];
      private int duration_ ;
      public boolean hasDuration() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      public int getDuration() {
        return duration_;
      }
      public Builder setDuration(int value) {
        bitField0_ |= 0x00008000;
        duration_ = value;
        onChanged();
        return this;
      }
      public Builder clearDuration() {
        bitField0_ = (bitField0_ & ~0x00008000);
        duration_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 damageLev = 17 [default = 0];
      private int damageLev_ ;
      public boolean hasDamageLev() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      public int getDamageLev() {
        return damageLev_;
      }
      public Builder setDamageLev(int value) {
        bitField0_ |= 0x00010000;
        damageLev_ = value;
        onChanged();
        return this;
      }
      public Builder clearDamageLev() {
        bitField0_ = (bitField0_ & ~0x00010000);
        damageLev_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 skinLev = 18 [default = 0];
      private int skinLev_ ;
      public boolean hasSkinLev() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      public int getSkinLev() {
        return skinLev_;
      }
      public Builder setSkinLev(int value) {
        bitField0_ |= 0x00020000;
        skinLev_ = value;
        onChanged();
        return this;
      }
      public Builder clearSkinLev() {
        bitField0_ = (bitField0_ & ~0x00020000);
        skinLev_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 power = 19 [default = 0];
      private int power_ ;
      public boolean hasPower() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      public int getPower() {
        return power_;
      }
      public Builder setPower(int value) {
        bitField0_ |= 0x00040000;
        power_ = value;
        onChanged();
        return this;
      }
      public Builder clearPower() {
        bitField0_ = (bitField0_ & ~0x00040000);
        power_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 baseAttack = 20 [default = 0];
      private int baseAttack_ ;
      public boolean hasBaseAttack() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      public int getBaseAttack() {
        return baseAttack_;
      }
      public Builder setBaseAttack(int value) {
        bitField0_ |= 0x00080000;
        baseAttack_ = value;
        onChanged();
        return this;
      }
      public Builder clearBaseAttack() {
        bitField0_ = (bitField0_ & ~0x00080000);
        baseAttack_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 baseDefend = 21 [default = 0];
      private int baseDefend_ ;
      public boolean hasBaseDefend() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      public int getBaseDefend() {
        return baseDefend_;
      }
      public Builder setBaseDefend(int value) {
        bitField0_ |= 0x00100000;
        baseDefend_ = value;
        onChanged();
        return this;
      }
      public Builder clearBaseDefend() {
        bitField0_ = (bitField0_ & ~0x00100000);
        baseDefend_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 baseAgility = 22 [default = 0];
      private int baseAgility_ ;
      public boolean hasBaseAgility() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      public int getBaseAgility() {
        return baseAgility_;
      }
      public Builder setBaseAgility(int value) {
        bitField0_ |= 0x00200000;
        baseAgility_ = value;
        onChanged();
        return this;
      }
      public Builder clearBaseAgility() {
        bitField0_ = (bitField0_ & ~0x00200000);
        baseAgility_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 baseLucky = 23 [default = 0];
      private int baseLucky_ ;
      public boolean hasBaseLucky() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      public int getBaseLucky() {
        return baseLucky_;
      }
      public Builder setBaseLucky(int value) {
        bitField0_ |= 0x00400000;
        baseLucky_ = value;
        onChanged();
        return this;
      }
      public Builder clearBaseLucky() {
        bitField0_ = (bitField0_ & ~0x00400000);
        baseLucky_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 basePower = 24 [default = 0];
      private int basePower_ ;
      public boolean hasBasePower() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      public int getBasePower() {
        return basePower_;
      }
      public Builder setBasePower(int value) {
        bitField0_ |= 0x00800000;
        basePower_ = value;
        onChanged();
        return this;
      }
      public Builder clearBasePower() {
        bitField0_ = (bitField0_ & ~0x00800000);
        basePower_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.xinqihd.sns.gameserver.proto.PropData)
    }
    
    static {
      defaultInstance = new PropData(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.xinqihd.sns.gameserver.proto.PropData)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_xinqihd_sns_gameserver_proto_PropData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_xinqihd_sns_gameserver_proto_PropData_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016PropData.proto\022 com.xinqihd.sns.gamese" +
      "rver.proto\"\360\003\n\010PropData\022\016\n\006propID\030\001 \002(\t\022" +
      "\017\n\007propPew\030\002 \002(\005\022\026\n\npropIndate\030\003 \001(\005:\00230" +
      "\022\020\n\005level\030\004 \001(\005:\0010\022\024\n\tattackLev\030\005 \001(\005:\0010" +
      "\022\024\n\tdefendLev\030\006 \001(\005:\0010\022\025\n\nagilityLev\030\007 \001" +
      "(\005:\0010\022\022\n\007luckLev\030\010 \001(\005:\0010\022\020\n\005color\030\t \001(\005" +
      ":\0010\022\017\n\004sign\030\n \001(\005:\0010\022\020\n\005count\030\013 \001(\005:\0011\022\n" +
      "\n\002id\030\014 \001(\t\022\021\n\006typeid\030\r \001(\t:\0010\022\024\n\tvaluety" +
      "pe\030\016 \001(\005:\0010\022\025\n\006banded\030\017 \001(\010:\005false\022\023\n\010du" +
      "ration\030\020 \001(\005:\0010\022\024\n\tdamageLev\030\021 \001(\005:\0010\022\022\n",
      "\007skinLev\030\022 \001(\005:\0010\022\020\n\005power\030\023 \001(\005:\0010\022\025\n\nb" +
      "aseAttack\030\024 \001(\005:\0010\022\025\n\nbaseDefend\030\025 \001(\005:\001" +
      "0\022\026\n\013baseAgility\030\026 \001(\005:\0010\022\024\n\tbaseLucky\030\027" +
      " \001(\005:\0010\022\024\n\tbasePower\030\030 \001(\005:\0010B\017B\rXinqiPr" +
      "opData"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_xinqihd_sns_gameserver_proto_PropData_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_xinqihd_sns_gameserver_proto_PropData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_xinqihd_sns_gameserver_proto_PropData_descriptor,
              new java.lang.String[] { "PropID", "PropPew", "PropIndate", "Level", "AttackLev", "DefendLev", "AgilityLev", "LuckLev", "Color", "Sign", "Count", "Id", "Typeid", "Valuetype", "Banded", "Duration", "DamageLev", "SkinLev", "Power", "BaseAttack", "BaseDefend", "BaseAgility", "BaseLucky", "BasePower", },
              com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData.class,
              com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
