// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RpcRoomManager.proto

package com.xinqihd.sns.gameserver.proto;

public final class RpcRoomManager {
  private RpcRoomManager() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface UserSessionKeyOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional bytes userSessionKey = 1;
    boolean hasUserSessionKey();
    com.google.protobuf.ByteString getUserSessionKey();
  }
  public static final class UserSessionKey extends
      com.google.protobuf.GeneratedMessage
      implements UserSessionKeyOrBuilder {
    // Use UserSessionKey.newBuilder() to construct.
    private UserSessionKey(Builder builder) {
      super(builder);
    }
    private UserSessionKey(boolean noInit) {}
    
    private static final UserSessionKey defaultInstance;
    public static UserSessionKey getDefaultInstance() {
      return defaultInstance;
    }
    
    public UserSessionKey getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.xinqihd.sns.gameserver.proto.RpcRoomManager.internal_static_com_xinqihd_sns_gameserver_proto_UserSessionKey_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.xinqihd.sns.gameserver.proto.RpcRoomManager.internal_static_com_xinqihd_sns_gameserver_proto_UserSessionKey_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional bytes userSessionKey = 1;
    public static final int USERSESSIONKEY_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString userSessionKey_;
    public boolean hasUserSessionKey() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public com.google.protobuf.ByteString getUserSessionKey() {
      return userSessionKey_;
    }
    
    private void initFields() {
      userSessionKey_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, userSessionKey_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, userSessionKey_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKeyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.xinqihd.sns.gameserver.proto.RpcRoomManager.internal_static_com_xinqihd_sns_gameserver_proto_UserSessionKey_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.xinqihd.sns.gameserver.proto.RpcRoomManager.internal_static_com_xinqihd_sns_gameserver_proto_UserSessionKey_fieldAccessorTable;
      }
      
      // Construct using com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        userSessionKey_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey.getDescriptor();
      }
      
      public com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey getDefaultInstanceForType() {
        return com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey.getDefaultInstance();
      }
      
      public com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey build() {
        com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey buildPartial() {
        com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey result = new com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.userSessionKey_ = userSessionKey_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey) {
          return mergeFrom((com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey other) {
        if (other == com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey.getDefaultInstance()) return this;
        if (other.hasUserSessionKey()) {
          setUserSessionKey(other.getUserSessionKey());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              userSessionKey_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional bytes userSessionKey = 1;
      private com.google.protobuf.ByteString userSessionKey_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasUserSessionKey() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public com.google.protobuf.ByteString getUserSessionKey() {
        return userSessionKey_;
      }
      public Builder setUserSessionKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        userSessionKey_ = value;
        onChanged();
        return this;
      }
      public Builder clearUserSessionKey() {
        bitField0_ = (bitField0_ & ~0x00000001);
        userSessionKey_ = getDefaultInstance().getUserSessionKey();
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.xinqihd.sns.gameserver.proto.UserSessionKey)
    }
    
    static {
      defaultInstance = new UserSessionKey(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.xinqihd.sns.gameserver.proto.UserSessionKey)
  }
  
  public interface RoomSessionKeyOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional bytes roomSessionKey = 1;
    boolean hasRoomSessionKey();
    com.google.protobuf.ByteString getRoomSessionKey();
  }
  public static final class RoomSessionKey extends
      com.google.protobuf.GeneratedMessage
      implements RoomSessionKeyOrBuilder {
    // Use RoomSessionKey.newBuilder() to construct.
    private RoomSessionKey(Builder builder) {
      super(builder);
    }
    private RoomSessionKey(boolean noInit) {}
    
    private static final RoomSessionKey defaultInstance;
    public static RoomSessionKey getDefaultInstance() {
      return defaultInstance;
    }
    
    public RoomSessionKey getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.xinqihd.sns.gameserver.proto.RpcRoomManager.internal_static_com_xinqihd_sns_gameserver_proto_RoomSessionKey_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.xinqihd.sns.gameserver.proto.RpcRoomManager.internal_static_com_xinqihd_sns_gameserver_proto_RoomSessionKey_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional bytes roomSessionKey = 1;
    public static final int ROOMSESSIONKEY_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString roomSessionKey_;
    public boolean hasRoomSessionKey() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public com.google.protobuf.ByteString getRoomSessionKey() {
      return roomSessionKey_;
    }
    
    private void initFields() {
      roomSessionKey_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, roomSessionKey_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, roomSessionKey_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomSessionKey parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomSessionKey parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomSessionKey parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomSessionKey parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomSessionKey parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomSessionKey parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomSessionKey parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomSessionKey parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomSessionKey parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomSessionKey parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomSessionKey prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomSessionKeyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.xinqihd.sns.gameserver.proto.RpcRoomManager.internal_static_com_xinqihd_sns_gameserver_proto_RoomSessionKey_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.xinqihd.sns.gameserver.proto.RpcRoomManager.internal_static_com_xinqihd_sns_gameserver_proto_RoomSessionKey_fieldAccessorTable;
      }
      
      // Construct using com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomSessionKey.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        roomSessionKey_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomSessionKey.getDescriptor();
      }
      
      public com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomSessionKey getDefaultInstanceForType() {
        return com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomSessionKey.getDefaultInstance();
      }
      
      public com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomSessionKey build() {
        com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomSessionKey result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomSessionKey buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomSessionKey result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomSessionKey buildPartial() {
        com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomSessionKey result = new com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomSessionKey(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.roomSessionKey_ = roomSessionKey_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomSessionKey) {
          return mergeFrom((com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomSessionKey)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomSessionKey other) {
        if (other == com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomSessionKey.getDefaultInstance()) return this;
        if (other.hasRoomSessionKey()) {
          setRoomSessionKey(other.getRoomSessionKey());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              roomSessionKey_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional bytes roomSessionKey = 1;
      private com.google.protobuf.ByteString roomSessionKey_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasRoomSessionKey() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public com.google.protobuf.ByteString getRoomSessionKey() {
        return roomSessionKey_;
      }
      public Builder setRoomSessionKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        roomSessionKey_ = value;
        onChanged();
        return this;
      }
      public Builder clearRoomSessionKey() {
        bitField0_ = (bitField0_ & ~0x00000001);
        roomSessionKey_ = getDefaultInstance().getRoomSessionKey();
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.xinqihd.sns.gameserver.proto.RoomSessionKey)
    }
    
    static {
      defaultInstance = new RoomSessionKey(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.xinqihd.sns.gameserver.proto.RoomSessionKey)
  }
  
  public interface RoomAndUserSessionKeyOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional .com.xinqihd.sns.gameserver.proto.RoomSessionKey roomSessionKey = 1;
    boolean hasRoomSessionKey();
    com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomSessionKey getRoomSessionKey();
    com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomSessionKeyOrBuilder getRoomSessionKeyOrBuilder();
    
    // optional .com.xinqihd.sns.gameserver.proto.UserSessionKey userSessionKey = 2;
    boolean hasUserSessionKey();
    com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey getUserSessionKey();
    com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKeyOrBuilder getUserSessionKeyOrBuilder();
  }
  public static final class RoomAndUserSessionKey extends
      com.google.protobuf.GeneratedMessage
      implements RoomAndUserSessionKeyOrBuilder {
    // Use RoomAndUserSessionKey.newBuilder() to construct.
    private RoomAndUserSessionKey(Builder builder) {
      super(builder);
    }
    private RoomAndUserSessionKey(boolean noInit) {}
    
    private static final RoomAndUserSessionKey defaultInstance;
    public static RoomAndUserSessionKey getDefaultInstance() {
      return defaultInstance;
    }
    
    public RoomAndUserSessionKey getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.xinqihd.sns.gameserver.proto.RpcRoomManager.internal_static_com_xinqihd_sns_gameserver_proto_RoomAndUserSessionKey_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.xinqihd.sns.gameserver.proto.RpcRoomManager.internal_static_com_xinqihd_sns_gameserver_proto_RoomAndUserSessionKey_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional .com.xinqihd.sns.gameserver.proto.RoomSessionKey roomSessionKey = 1;
    public static final int ROOMSESSIONKEY_FIELD_NUMBER = 1;
    private com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomSessionKey roomSessionKey_;
    public boolean hasRoomSessionKey() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomSessionKey getRoomSessionKey() {
      return roomSessionKey_;
    }
    public com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomSessionKeyOrBuilder getRoomSessionKeyOrBuilder() {
      return roomSessionKey_;
    }
    
    // optional .com.xinqihd.sns.gameserver.proto.UserSessionKey userSessionKey = 2;
    public static final int USERSESSIONKEY_FIELD_NUMBER = 2;
    private com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey userSessionKey_;
    public boolean hasUserSessionKey() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey getUserSessionKey() {
      return userSessionKey_;
    }
    public com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKeyOrBuilder getUserSessionKeyOrBuilder() {
      return userSessionKey_;
    }
    
    private void initFields() {
      roomSessionKey_ = com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomSessionKey.getDefaultInstance();
      userSessionKey_ = com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, roomSessionKey_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, userSessionKey_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, roomSessionKey_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, userSessionKey_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomAndUserSessionKey parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomAndUserSessionKey parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomAndUserSessionKey parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomAndUserSessionKey parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomAndUserSessionKey parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomAndUserSessionKey parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomAndUserSessionKey parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomAndUserSessionKey parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomAndUserSessionKey parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomAndUserSessionKey parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomAndUserSessionKey prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomAndUserSessionKeyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.xinqihd.sns.gameserver.proto.RpcRoomManager.internal_static_com_xinqihd_sns_gameserver_proto_RoomAndUserSessionKey_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.xinqihd.sns.gameserver.proto.RpcRoomManager.internal_static_com_xinqihd_sns_gameserver_proto_RoomAndUserSessionKey_fieldAccessorTable;
      }
      
      // Construct using com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomAndUserSessionKey.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRoomSessionKeyFieldBuilder();
          getUserSessionKeyFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (roomSessionKeyBuilder_ == null) {
          roomSessionKey_ = com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomSessionKey.getDefaultInstance();
        } else {
          roomSessionKeyBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (userSessionKeyBuilder_ == null) {
          userSessionKey_ = com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey.getDefaultInstance();
        } else {
          userSessionKeyBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomAndUserSessionKey.getDescriptor();
      }
      
      public com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomAndUserSessionKey getDefaultInstanceForType() {
        return com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomAndUserSessionKey.getDefaultInstance();
      }
      
      public com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomAndUserSessionKey build() {
        com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomAndUserSessionKey result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomAndUserSessionKey buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomAndUserSessionKey result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomAndUserSessionKey buildPartial() {
        com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomAndUserSessionKey result = new com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomAndUserSessionKey(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (roomSessionKeyBuilder_ == null) {
          result.roomSessionKey_ = roomSessionKey_;
        } else {
          result.roomSessionKey_ = roomSessionKeyBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (userSessionKeyBuilder_ == null) {
          result.userSessionKey_ = userSessionKey_;
        } else {
          result.userSessionKey_ = userSessionKeyBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomAndUserSessionKey) {
          return mergeFrom((com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomAndUserSessionKey)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomAndUserSessionKey other) {
        if (other == com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomAndUserSessionKey.getDefaultInstance()) return this;
        if (other.hasRoomSessionKey()) {
          mergeRoomSessionKey(other.getRoomSessionKey());
        }
        if (other.hasUserSessionKey()) {
          mergeUserSessionKey(other.getUserSessionKey());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomSessionKey.Builder subBuilder = com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomSessionKey.newBuilder();
              if (hasRoomSessionKey()) {
                subBuilder.mergeFrom(getRoomSessionKey());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setRoomSessionKey(subBuilder.buildPartial());
              break;
            }
            case 18: {
              com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey.Builder subBuilder = com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey.newBuilder();
              if (hasUserSessionKey()) {
                subBuilder.mergeFrom(getUserSessionKey());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setUserSessionKey(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .com.xinqihd.sns.gameserver.proto.RoomSessionKey roomSessionKey = 1;
      private com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomSessionKey roomSessionKey_ = com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomSessionKey.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomSessionKey, com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomSessionKey.Builder, com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomSessionKeyOrBuilder> roomSessionKeyBuilder_;
      public boolean hasRoomSessionKey() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomSessionKey getRoomSessionKey() {
        if (roomSessionKeyBuilder_ == null) {
          return roomSessionKey_;
        } else {
          return roomSessionKeyBuilder_.getMessage();
        }
      }
      public Builder setRoomSessionKey(com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomSessionKey value) {
        if (roomSessionKeyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          roomSessionKey_ = value;
          onChanged();
        } else {
          roomSessionKeyBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setRoomSessionKey(
          com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomSessionKey.Builder builderForValue) {
        if (roomSessionKeyBuilder_ == null) {
          roomSessionKey_ = builderForValue.build();
          onChanged();
        } else {
          roomSessionKeyBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergeRoomSessionKey(com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomSessionKey value) {
        if (roomSessionKeyBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              roomSessionKey_ != com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomSessionKey.getDefaultInstance()) {
            roomSessionKey_ =
              com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomSessionKey.newBuilder(roomSessionKey_).mergeFrom(value).buildPartial();
          } else {
            roomSessionKey_ = value;
          }
          onChanged();
        } else {
          roomSessionKeyBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearRoomSessionKey() {
        if (roomSessionKeyBuilder_ == null) {
          roomSessionKey_ = com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomSessionKey.getDefaultInstance();
          onChanged();
        } else {
          roomSessionKeyBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      public com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomSessionKey.Builder getRoomSessionKeyBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getRoomSessionKeyFieldBuilder().getBuilder();
      }
      public com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomSessionKeyOrBuilder getRoomSessionKeyOrBuilder() {
        if (roomSessionKeyBuilder_ != null) {
          return roomSessionKeyBuilder_.getMessageOrBuilder();
        } else {
          return roomSessionKey_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomSessionKey, com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomSessionKey.Builder, com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomSessionKeyOrBuilder> 
          getRoomSessionKeyFieldBuilder() {
        if (roomSessionKeyBuilder_ == null) {
          roomSessionKeyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomSessionKey, com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomSessionKey.Builder, com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomSessionKeyOrBuilder>(
                  roomSessionKey_,
                  getParentForChildren(),
                  isClean());
          roomSessionKey_ = null;
        }
        return roomSessionKeyBuilder_;
      }
      
      // optional .com.xinqihd.sns.gameserver.proto.UserSessionKey userSessionKey = 2;
      private com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey userSessionKey_ = com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey, com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey.Builder, com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKeyOrBuilder> userSessionKeyBuilder_;
      public boolean hasUserSessionKey() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey getUserSessionKey() {
        if (userSessionKeyBuilder_ == null) {
          return userSessionKey_;
        } else {
          return userSessionKeyBuilder_.getMessage();
        }
      }
      public Builder setUserSessionKey(com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey value) {
        if (userSessionKeyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          userSessionKey_ = value;
          onChanged();
        } else {
          userSessionKeyBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder setUserSessionKey(
          com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey.Builder builderForValue) {
        if (userSessionKeyBuilder_ == null) {
          userSessionKey_ = builderForValue.build();
          onChanged();
        } else {
          userSessionKeyBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder mergeUserSessionKey(com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey value) {
        if (userSessionKeyBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              userSessionKey_ != com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey.getDefaultInstance()) {
            userSessionKey_ =
              com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey.newBuilder(userSessionKey_).mergeFrom(value).buildPartial();
          } else {
            userSessionKey_ = value;
          }
          onChanged();
        } else {
          userSessionKeyBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder clearUserSessionKey() {
        if (userSessionKeyBuilder_ == null) {
          userSessionKey_ = com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey.getDefaultInstance();
          onChanged();
        } else {
          userSessionKeyBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      public com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey.Builder getUserSessionKeyBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getUserSessionKeyFieldBuilder().getBuilder();
      }
      public com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKeyOrBuilder getUserSessionKeyOrBuilder() {
        if (userSessionKeyBuilder_ != null) {
          return userSessionKeyBuilder_.getMessageOrBuilder();
        } else {
          return userSessionKey_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey, com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey.Builder, com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKeyOrBuilder> 
          getUserSessionKeyFieldBuilder() {
        if (userSessionKeyBuilder_ == null) {
          userSessionKeyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey, com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey.Builder, com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKeyOrBuilder>(
                  userSessionKey_,
                  getParentForChildren(),
                  isClean());
          userSessionKey_ = null;
        }
        return userSessionKeyBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:com.xinqihd.sns.gameserver.proto.RoomAndUserSessionKey)
    }
    
    static {
      defaultInstance = new RoomAndUserSessionKey(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.xinqihd.sns.gameserver.proto.RoomAndUserSessionKey)
  }
  
  public interface ReadyStartOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional .com.xinqihd.sns.gameserver.proto.UserSessionKey userSessionKey = 1;
    boolean hasUserSessionKey();
    com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey getUserSessionKey();
    com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKeyOrBuilder getUserSessionKeyOrBuilder();
    
    // optional bool isReady = 2;
    boolean hasIsReady();
    boolean getIsReady();
  }
  public static final class ReadyStart extends
      com.google.protobuf.GeneratedMessage
      implements ReadyStartOrBuilder {
    // Use ReadyStart.newBuilder() to construct.
    private ReadyStart(Builder builder) {
      super(builder);
    }
    private ReadyStart(boolean noInit) {}
    
    private static final ReadyStart defaultInstance;
    public static ReadyStart getDefaultInstance() {
      return defaultInstance;
    }
    
    public ReadyStart getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.xinqihd.sns.gameserver.proto.RpcRoomManager.internal_static_com_xinqihd_sns_gameserver_proto_ReadyStart_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.xinqihd.sns.gameserver.proto.RpcRoomManager.internal_static_com_xinqihd_sns_gameserver_proto_ReadyStart_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional .com.xinqihd.sns.gameserver.proto.UserSessionKey userSessionKey = 1;
    public static final int USERSESSIONKEY_FIELD_NUMBER = 1;
    private com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey userSessionKey_;
    public boolean hasUserSessionKey() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey getUserSessionKey() {
      return userSessionKey_;
    }
    public com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKeyOrBuilder getUserSessionKeyOrBuilder() {
      return userSessionKey_;
    }
    
    // optional bool isReady = 2;
    public static final int ISREADY_FIELD_NUMBER = 2;
    private boolean isReady_;
    public boolean hasIsReady() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public boolean getIsReady() {
      return isReady_;
    }
    
    private void initFields() {
      userSessionKey_ = com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey.getDefaultInstance();
      isReady_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, userSessionKey_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, isReady_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, userSessionKey_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, isReady_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.xinqihd.sns.gameserver.proto.RpcRoomManager.ReadyStart parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.RpcRoomManager.ReadyStart parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.RpcRoomManager.ReadyStart parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.RpcRoomManager.ReadyStart parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.RpcRoomManager.ReadyStart parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.RpcRoomManager.ReadyStart parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.RpcRoomManager.ReadyStart parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.xinqihd.sns.gameserver.proto.RpcRoomManager.ReadyStart parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.xinqihd.sns.gameserver.proto.RpcRoomManager.ReadyStart parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.RpcRoomManager.ReadyStart parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.xinqihd.sns.gameserver.proto.RpcRoomManager.ReadyStart prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.xinqihd.sns.gameserver.proto.RpcRoomManager.ReadyStartOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.xinqihd.sns.gameserver.proto.RpcRoomManager.internal_static_com_xinqihd_sns_gameserver_proto_ReadyStart_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.xinqihd.sns.gameserver.proto.RpcRoomManager.internal_static_com_xinqihd_sns_gameserver_proto_ReadyStart_fieldAccessorTable;
      }
      
      // Construct using com.xinqihd.sns.gameserver.proto.RpcRoomManager.ReadyStart.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getUserSessionKeyFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (userSessionKeyBuilder_ == null) {
          userSessionKey_ = com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey.getDefaultInstance();
        } else {
          userSessionKeyBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        isReady_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.xinqihd.sns.gameserver.proto.RpcRoomManager.ReadyStart.getDescriptor();
      }
      
      public com.xinqihd.sns.gameserver.proto.RpcRoomManager.ReadyStart getDefaultInstanceForType() {
        return com.xinqihd.sns.gameserver.proto.RpcRoomManager.ReadyStart.getDefaultInstance();
      }
      
      public com.xinqihd.sns.gameserver.proto.RpcRoomManager.ReadyStart build() {
        com.xinqihd.sns.gameserver.proto.RpcRoomManager.ReadyStart result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.xinqihd.sns.gameserver.proto.RpcRoomManager.ReadyStart buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.xinqihd.sns.gameserver.proto.RpcRoomManager.ReadyStart result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.xinqihd.sns.gameserver.proto.RpcRoomManager.ReadyStart buildPartial() {
        com.xinqihd.sns.gameserver.proto.RpcRoomManager.ReadyStart result = new com.xinqihd.sns.gameserver.proto.RpcRoomManager.ReadyStart(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (userSessionKeyBuilder_ == null) {
          result.userSessionKey_ = userSessionKey_;
        } else {
          result.userSessionKey_ = userSessionKeyBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.isReady_ = isReady_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.xinqihd.sns.gameserver.proto.RpcRoomManager.ReadyStart) {
          return mergeFrom((com.xinqihd.sns.gameserver.proto.RpcRoomManager.ReadyStart)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.xinqihd.sns.gameserver.proto.RpcRoomManager.ReadyStart other) {
        if (other == com.xinqihd.sns.gameserver.proto.RpcRoomManager.ReadyStart.getDefaultInstance()) return this;
        if (other.hasUserSessionKey()) {
          mergeUserSessionKey(other.getUserSessionKey());
        }
        if (other.hasIsReady()) {
          setIsReady(other.getIsReady());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey.Builder subBuilder = com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey.newBuilder();
              if (hasUserSessionKey()) {
                subBuilder.mergeFrom(getUserSessionKey());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setUserSessionKey(subBuilder.buildPartial());
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              isReady_ = input.readBool();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .com.xinqihd.sns.gameserver.proto.UserSessionKey userSessionKey = 1;
      private com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey userSessionKey_ = com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey, com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey.Builder, com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKeyOrBuilder> userSessionKeyBuilder_;
      public boolean hasUserSessionKey() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey getUserSessionKey() {
        if (userSessionKeyBuilder_ == null) {
          return userSessionKey_;
        } else {
          return userSessionKeyBuilder_.getMessage();
        }
      }
      public Builder setUserSessionKey(com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey value) {
        if (userSessionKeyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          userSessionKey_ = value;
          onChanged();
        } else {
          userSessionKeyBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setUserSessionKey(
          com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey.Builder builderForValue) {
        if (userSessionKeyBuilder_ == null) {
          userSessionKey_ = builderForValue.build();
          onChanged();
        } else {
          userSessionKeyBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergeUserSessionKey(com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey value) {
        if (userSessionKeyBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              userSessionKey_ != com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey.getDefaultInstance()) {
            userSessionKey_ =
              com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey.newBuilder(userSessionKey_).mergeFrom(value).buildPartial();
          } else {
            userSessionKey_ = value;
          }
          onChanged();
        } else {
          userSessionKeyBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearUserSessionKey() {
        if (userSessionKeyBuilder_ == null) {
          userSessionKey_ = com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey.getDefaultInstance();
          onChanged();
        } else {
          userSessionKeyBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      public com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey.Builder getUserSessionKeyBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getUserSessionKeyFieldBuilder().getBuilder();
      }
      public com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKeyOrBuilder getUserSessionKeyOrBuilder() {
        if (userSessionKeyBuilder_ != null) {
          return userSessionKeyBuilder_.getMessageOrBuilder();
        } else {
          return userSessionKey_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey, com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey.Builder, com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKeyOrBuilder> 
          getUserSessionKeyFieldBuilder() {
        if (userSessionKeyBuilder_ == null) {
          userSessionKeyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey, com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey.Builder, com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKeyOrBuilder>(
                  userSessionKey_,
                  getParentForChildren(),
                  isClean());
          userSessionKey_ = null;
        }
        return userSessionKeyBuilder_;
      }
      
      // optional bool isReady = 2;
      private boolean isReady_ ;
      public boolean hasIsReady() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public boolean getIsReady() {
        return isReady_;
      }
      public Builder setIsReady(boolean value) {
        bitField0_ |= 0x00000002;
        isReady_ = value;
        onChanged();
        return this;
      }
      public Builder clearIsReady() {
        bitField0_ = (bitField0_ & ~0x00000002);
        isReady_ = false;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.xinqihd.sns.gameserver.proto.ReadyStart)
    }
    
    static {
      defaultInstance = new ReadyStart(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.xinqihd.sns.gameserver.proto.ReadyStart)
  }
  
  public interface RoomMapOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional .com.xinqihd.sns.gameserver.proto.UserSessionKey userSessionKey = 1;
    boolean hasUserSessionKey();
    com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey getUserSessionKey();
    com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKeyOrBuilder getUserSessionKeyOrBuilder();
    
    // optional string mapid = 2;
    boolean hasMapid();
    String getMapid();
  }
  public static final class RoomMap extends
      com.google.protobuf.GeneratedMessage
      implements RoomMapOrBuilder {
    // Use RoomMap.newBuilder() to construct.
    private RoomMap(Builder builder) {
      super(builder);
    }
    private RoomMap(boolean noInit) {}
    
    private static final RoomMap defaultInstance;
    public static RoomMap getDefaultInstance() {
      return defaultInstance;
    }
    
    public RoomMap getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.xinqihd.sns.gameserver.proto.RpcRoomManager.internal_static_com_xinqihd_sns_gameserver_proto_RoomMap_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.xinqihd.sns.gameserver.proto.RpcRoomManager.internal_static_com_xinqihd_sns_gameserver_proto_RoomMap_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional .com.xinqihd.sns.gameserver.proto.UserSessionKey userSessionKey = 1;
    public static final int USERSESSIONKEY_FIELD_NUMBER = 1;
    private com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey userSessionKey_;
    public boolean hasUserSessionKey() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey getUserSessionKey() {
      return userSessionKey_;
    }
    public com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKeyOrBuilder getUserSessionKeyOrBuilder() {
      return userSessionKey_;
    }
    
    // optional string mapid = 2;
    public static final int MAPID_FIELD_NUMBER = 2;
    private java.lang.Object mapid_;
    public boolean hasMapid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getMapid() {
      java.lang.Object ref = mapid_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          mapid_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getMapidBytes() {
      java.lang.Object ref = mapid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        mapid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      userSessionKey_ = com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey.getDefaultInstance();
      mapid_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, userSessionKey_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getMapidBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, userSessionKey_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getMapidBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomMap parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomMap parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomMap parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomMap parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomMap parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomMap parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomMap parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomMap parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomMap parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomMap parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomMap prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomMapOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.xinqihd.sns.gameserver.proto.RpcRoomManager.internal_static_com_xinqihd_sns_gameserver_proto_RoomMap_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.xinqihd.sns.gameserver.proto.RpcRoomManager.internal_static_com_xinqihd_sns_gameserver_proto_RoomMap_fieldAccessorTable;
      }
      
      // Construct using com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomMap.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getUserSessionKeyFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (userSessionKeyBuilder_ == null) {
          userSessionKey_ = com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey.getDefaultInstance();
        } else {
          userSessionKeyBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        mapid_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomMap.getDescriptor();
      }
      
      public com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomMap getDefaultInstanceForType() {
        return com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomMap.getDefaultInstance();
      }
      
      public com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomMap build() {
        com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomMap result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomMap buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomMap result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomMap buildPartial() {
        com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomMap result = new com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomMap(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (userSessionKeyBuilder_ == null) {
          result.userSessionKey_ = userSessionKey_;
        } else {
          result.userSessionKey_ = userSessionKeyBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.mapid_ = mapid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomMap) {
          return mergeFrom((com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomMap)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomMap other) {
        if (other == com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomMap.getDefaultInstance()) return this;
        if (other.hasUserSessionKey()) {
          mergeUserSessionKey(other.getUserSessionKey());
        }
        if (other.hasMapid()) {
          setMapid(other.getMapid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey.Builder subBuilder = com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey.newBuilder();
              if (hasUserSessionKey()) {
                subBuilder.mergeFrom(getUserSessionKey());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setUserSessionKey(subBuilder.buildPartial());
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              mapid_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .com.xinqihd.sns.gameserver.proto.UserSessionKey userSessionKey = 1;
      private com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey userSessionKey_ = com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey, com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey.Builder, com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKeyOrBuilder> userSessionKeyBuilder_;
      public boolean hasUserSessionKey() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey getUserSessionKey() {
        if (userSessionKeyBuilder_ == null) {
          return userSessionKey_;
        } else {
          return userSessionKeyBuilder_.getMessage();
        }
      }
      public Builder setUserSessionKey(com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey value) {
        if (userSessionKeyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          userSessionKey_ = value;
          onChanged();
        } else {
          userSessionKeyBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setUserSessionKey(
          com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey.Builder builderForValue) {
        if (userSessionKeyBuilder_ == null) {
          userSessionKey_ = builderForValue.build();
          onChanged();
        } else {
          userSessionKeyBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergeUserSessionKey(com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey value) {
        if (userSessionKeyBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              userSessionKey_ != com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey.getDefaultInstance()) {
            userSessionKey_ =
              com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey.newBuilder(userSessionKey_).mergeFrom(value).buildPartial();
          } else {
            userSessionKey_ = value;
          }
          onChanged();
        } else {
          userSessionKeyBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearUserSessionKey() {
        if (userSessionKeyBuilder_ == null) {
          userSessionKey_ = com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey.getDefaultInstance();
          onChanged();
        } else {
          userSessionKeyBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      public com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey.Builder getUserSessionKeyBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getUserSessionKeyFieldBuilder().getBuilder();
      }
      public com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKeyOrBuilder getUserSessionKeyOrBuilder() {
        if (userSessionKeyBuilder_ != null) {
          return userSessionKeyBuilder_.getMessageOrBuilder();
        } else {
          return userSessionKey_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey, com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey.Builder, com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKeyOrBuilder> 
          getUserSessionKeyFieldBuilder() {
        if (userSessionKeyBuilder_ == null) {
          userSessionKeyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey, com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey.Builder, com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKeyOrBuilder>(
                  userSessionKey_,
                  getParentForChildren(),
                  isClean());
          userSessionKey_ = null;
        }
        return userSessionKeyBuilder_;
      }
      
      // optional string mapid = 2;
      private java.lang.Object mapid_ = "";
      public boolean hasMapid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getMapid() {
        java.lang.Object ref = mapid_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          mapid_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setMapid(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        mapid_ = value;
        onChanged();
        return this;
      }
      public Builder clearMapid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        mapid_ = getDefaultInstance().getMapid();
        onChanged();
        return this;
      }
      void setMapid(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        mapid_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:com.xinqihd.sns.gameserver.proto.RoomMap)
    }
    
    static {
      defaultInstance = new RoomMap(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.xinqihd.sns.gameserver.proto.RoomMap)
  }
  
  public interface EditSeatOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional .com.xinqihd.sns.gameserver.proto.UserSessionKey userSessionKey = 1;
    boolean hasUserSessionKey();
    com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey getUserSessionKey();
    com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKeyOrBuilder getUserSessionKeyOrBuilder();
    
    // optional uint32 index = 2;
    boolean hasIndex();
    int getIndex();
    
    // optional bool isOpen = 3;
    boolean hasIsOpen();
    boolean getIsOpen();
  }
  public static final class EditSeat extends
      com.google.protobuf.GeneratedMessage
      implements EditSeatOrBuilder {
    // Use EditSeat.newBuilder() to construct.
    private EditSeat(Builder builder) {
      super(builder);
    }
    private EditSeat(boolean noInit) {}
    
    private static final EditSeat defaultInstance;
    public static EditSeat getDefaultInstance() {
      return defaultInstance;
    }
    
    public EditSeat getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.xinqihd.sns.gameserver.proto.RpcRoomManager.internal_static_com_xinqihd_sns_gameserver_proto_EditSeat_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.xinqihd.sns.gameserver.proto.RpcRoomManager.internal_static_com_xinqihd_sns_gameserver_proto_EditSeat_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional .com.xinqihd.sns.gameserver.proto.UserSessionKey userSessionKey = 1;
    public static final int USERSESSIONKEY_FIELD_NUMBER = 1;
    private com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey userSessionKey_;
    public boolean hasUserSessionKey() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey getUserSessionKey() {
      return userSessionKey_;
    }
    public com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKeyOrBuilder getUserSessionKeyOrBuilder() {
      return userSessionKey_;
    }
    
    // optional uint32 index = 2;
    public static final int INDEX_FIELD_NUMBER = 2;
    private int index_;
    public boolean hasIndex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getIndex() {
      return index_;
    }
    
    // optional bool isOpen = 3;
    public static final int ISOPEN_FIELD_NUMBER = 3;
    private boolean isOpen_;
    public boolean hasIsOpen() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public boolean getIsOpen() {
      return isOpen_;
    }
    
    private void initFields() {
      userSessionKey_ = com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey.getDefaultInstance();
      index_ = 0;
      isOpen_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, userSessionKey_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, index_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, isOpen_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, userSessionKey_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, index_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, isOpen_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.xinqihd.sns.gameserver.proto.RpcRoomManager.EditSeat parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.RpcRoomManager.EditSeat parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.RpcRoomManager.EditSeat parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.RpcRoomManager.EditSeat parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.RpcRoomManager.EditSeat parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.RpcRoomManager.EditSeat parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.RpcRoomManager.EditSeat parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.xinqihd.sns.gameserver.proto.RpcRoomManager.EditSeat parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.xinqihd.sns.gameserver.proto.RpcRoomManager.EditSeat parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.RpcRoomManager.EditSeat parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.xinqihd.sns.gameserver.proto.RpcRoomManager.EditSeat prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.xinqihd.sns.gameserver.proto.RpcRoomManager.EditSeatOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.xinqihd.sns.gameserver.proto.RpcRoomManager.internal_static_com_xinqihd_sns_gameserver_proto_EditSeat_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.xinqihd.sns.gameserver.proto.RpcRoomManager.internal_static_com_xinqihd_sns_gameserver_proto_EditSeat_fieldAccessorTable;
      }
      
      // Construct using com.xinqihd.sns.gameserver.proto.RpcRoomManager.EditSeat.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getUserSessionKeyFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (userSessionKeyBuilder_ == null) {
          userSessionKey_ = com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey.getDefaultInstance();
        } else {
          userSessionKeyBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        index_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        isOpen_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.xinqihd.sns.gameserver.proto.RpcRoomManager.EditSeat.getDescriptor();
      }
      
      public com.xinqihd.sns.gameserver.proto.RpcRoomManager.EditSeat getDefaultInstanceForType() {
        return com.xinqihd.sns.gameserver.proto.RpcRoomManager.EditSeat.getDefaultInstance();
      }
      
      public com.xinqihd.sns.gameserver.proto.RpcRoomManager.EditSeat build() {
        com.xinqihd.sns.gameserver.proto.RpcRoomManager.EditSeat result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.xinqihd.sns.gameserver.proto.RpcRoomManager.EditSeat buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.xinqihd.sns.gameserver.proto.RpcRoomManager.EditSeat result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.xinqihd.sns.gameserver.proto.RpcRoomManager.EditSeat buildPartial() {
        com.xinqihd.sns.gameserver.proto.RpcRoomManager.EditSeat result = new com.xinqihd.sns.gameserver.proto.RpcRoomManager.EditSeat(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (userSessionKeyBuilder_ == null) {
          result.userSessionKey_ = userSessionKey_;
        } else {
          result.userSessionKey_ = userSessionKeyBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.index_ = index_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.isOpen_ = isOpen_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.xinqihd.sns.gameserver.proto.RpcRoomManager.EditSeat) {
          return mergeFrom((com.xinqihd.sns.gameserver.proto.RpcRoomManager.EditSeat)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.xinqihd.sns.gameserver.proto.RpcRoomManager.EditSeat other) {
        if (other == com.xinqihd.sns.gameserver.proto.RpcRoomManager.EditSeat.getDefaultInstance()) return this;
        if (other.hasUserSessionKey()) {
          mergeUserSessionKey(other.getUserSessionKey());
        }
        if (other.hasIndex()) {
          setIndex(other.getIndex());
        }
        if (other.hasIsOpen()) {
          setIsOpen(other.getIsOpen());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey.Builder subBuilder = com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey.newBuilder();
              if (hasUserSessionKey()) {
                subBuilder.mergeFrom(getUserSessionKey());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setUserSessionKey(subBuilder.buildPartial());
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              index_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              isOpen_ = input.readBool();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .com.xinqihd.sns.gameserver.proto.UserSessionKey userSessionKey = 1;
      private com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey userSessionKey_ = com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey, com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey.Builder, com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKeyOrBuilder> userSessionKeyBuilder_;
      public boolean hasUserSessionKey() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey getUserSessionKey() {
        if (userSessionKeyBuilder_ == null) {
          return userSessionKey_;
        } else {
          return userSessionKeyBuilder_.getMessage();
        }
      }
      public Builder setUserSessionKey(com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey value) {
        if (userSessionKeyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          userSessionKey_ = value;
          onChanged();
        } else {
          userSessionKeyBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setUserSessionKey(
          com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey.Builder builderForValue) {
        if (userSessionKeyBuilder_ == null) {
          userSessionKey_ = builderForValue.build();
          onChanged();
        } else {
          userSessionKeyBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergeUserSessionKey(com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey value) {
        if (userSessionKeyBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              userSessionKey_ != com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey.getDefaultInstance()) {
            userSessionKey_ =
              com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey.newBuilder(userSessionKey_).mergeFrom(value).buildPartial();
          } else {
            userSessionKey_ = value;
          }
          onChanged();
        } else {
          userSessionKeyBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearUserSessionKey() {
        if (userSessionKeyBuilder_ == null) {
          userSessionKey_ = com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey.getDefaultInstance();
          onChanged();
        } else {
          userSessionKeyBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      public com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey.Builder getUserSessionKeyBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getUserSessionKeyFieldBuilder().getBuilder();
      }
      public com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKeyOrBuilder getUserSessionKeyOrBuilder() {
        if (userSessionKeyBuilder_ != null) {
          return userSessionKeyBuilder_.getMessageOrBuilder();
        } else {
          return userSessionKey_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey, com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey.Builder, com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKeyOrBuilder> 
          getUserSessionKeyFieldBuilder() {
        if (userSessionKeyBuilder_ == null) {
          userSessionKeyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey, com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey.Builder, com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKeyOrBuilder>(
                  userSessionKey_,
                  getParentForChildren(),
                  isClean());
          userSessionKey_ = null;
        }
        return userSessionKeyBuilder_;
      }
      
      // optional uint32 index = 2;
      private int index_ ;
      public boolean hasIndex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getIndex() {
        return index_;
      }
      public Builder setIndex(int value) {
        bitField0_ |= 0x00000002;
        index_ = value;
        onChanged();
        return this;
      }
      public Builder clearIndex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        index_ = 0;
        onChanged();
        return this;
      }
      
      // optional bool isOpen = 3;
      private boolean isOpen_ ;
      public boolean hasIsOpen() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public boolean getIsOpen() {
        return isOpen_;
      }
      public Builder setIsOpen(boolean value) {
        bitField0_ |= 0x00000004;
        isOpen_ = value;
        onChanged();
        return this;
      }
      public Builder clearIsOpen() {
        bitField0_ = (bitField0_ & ~0x00000004);
        isOpen_ = false;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.xinqihd.sns.gameserver.proto.EditSeat)
    }
    
    static {
      defaultInstance = new EditSeat(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.xinqihd.sns.gameserver.proto.EditSeat)
  }
  
  public static abstract class RoomManager
      implements com.google.protobuf.Service {
    protected RoomManager() {}
    
    public interface Interface {
      public abstract void joinRoom(
          com.google.protobuf.RpcController controller,
          com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomAndUserSessionKey request,
          com.google.protobuf.RpcCallback<com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse> done);
      
      public abstract void leaveRoom(
          com.google.protobuf.RpcController controller,
          com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey request,
          com.google.protobuf.RpcCallback<com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse> done);
      
      public abstract void readyStart(
          com.google.protobuf.RpcController controller,
          com.xinqihd.sns.gameserver.proto.RpcRoomManager.ReadyStart request,
          com.google.protobuf.RpcCallback<com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse> done);
      
      public abstract void changeMap(
          com.google.protobuf.RpcController controller,
          com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomMap request,
          com.google.protobuf.RpcCallback<com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse> done);
      
      public abstract void editSeat(
          com.google.protobuf.RpcController controller,
          com.xinqihd.sns.gameserver.proto.RpcRoomManager.EditSeat request,
          com.google.protobuf.RpcCallback<com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse> done);
      
    }
    
    public static com.google.protobuf.Service newReflectiveService(
        final Interface impl) {
      return new RoomManager() {
        @java.lang.Override
        public  void joinRoom(
            com.google.protobuf.RpcController controller,
            com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomAndUserSessionKey request,
            com.google.protobuf.RpcCallback<com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse> done) {
          impl.joinRoom(controller, request, done);
        }
        
        @java.lang.Override
        public  void leaveRoom(
            com.google.protobuf.RpcController controller,
            com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey request,
            com.google.protobuf.RpcCallback<com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse> done) {
          impl.leaveRoom(controller, request, done);
        }
        
        @java.lang.Override
        public  void readyStart(
            com.google.protobuf.RpcController controller,
            com.xinqihd.sns.gameserver.proto.RpcRoomManager.ReadyStart request,
            com.google.protobuf.RpcCallback<com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse> done) {
          impl.readyStart(controller, request, done);
        }
        
        @java.lang.Override
        public  void changeMap(
            com.google.protobuf.RpcController controller,
            com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomMap request,
            com.google.protobuf.RpcCallback<com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse> done) {
          impl.changeMap(controller, request, done);
        }
        
        @java.lang.Override
        public  void editSeat(
            com.google.protobuf.RpcController controller,
            com.xinqihd.sns.gameserver.proto.RpcRoomManager.EditSeat request,
            com.google.protobuf.RpcCallback<com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse> done) {
          impl.editSeat(controller, request, done);
        }
        
      };
    }
    
    public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
      return new com.google.protobuf.BlockingService() {
        public final com.google.protobuf.Descriptors.ServiceDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        
        public final com.google.protobuf.Message callBlockingMethod(
            com.google.protobuf.Descriptors.MethodDescriptor method,
            com.google.protobuf.RpcController controller,
            com.google.protobuf.Message request)
            throws com.google.protobuf.ServiceException {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.callBlockingMethod() given method descriptor for " +
              "wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return impl.joinRoom(controller, (com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomAndUserSessionKey)request);
            case 1:
              return impl.leaveRoom(controller, (com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey)request);
            case 2:
              return impl.readyStart(controller, (com.xinqihd.sns.gameserver.proto.RpcRoomManager.ReadyStart)request);
            case 3:
              return impl.changeMap(controller, (com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomMap)request);
            case 4:
              return impl.editSeat(controller, (com.xinqihd.sns.gameserver.proto.RpcRoomManager.EditSeat)request);
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getRequestPrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getRequestPrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomAndUserSessionKey.getDefaultInstance();
            case 1:
              return com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey.getDefaultInstance();
            case 2:
              return com.xinqihd.sns.gameserver.proto.RpcRoomManager.ReadyStart.getDefaultInstance();
            case 3:
              return com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomMap.getDefaultInstance();
            case 4:
              return com.xinqihd.sns.gameserver.proto.RpcRoomManager.EditSeat.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getResponsePrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getResponsePrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse.getDefaultInstance();
            case 1:
              return com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse.getDefaultInstance();
            case 2:
              return com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse.getDefaultInstance();
            case 3:
              return com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse.getDefaultInstance();
            case 4:
              return com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
      };
    }
    
    public abstract void joinRoom(
        com.google.protobuf.RpcController controller,
        com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomAndUserSessionKey request,
        com.google.protobuf.RpcCallback<com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse> done);
    
    public abstract void leaveRoom(
        com.google.protobuf.RpcController controller,
        com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey request,
        com.google.protobuf.RpcCallback<com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse> done);
    
    public abstract void readyStart(
        com.google.protobuf.RpcController controller,
        com.xinqihd.sns.gameserver.proto.RpcRoomManager.ReadyStart request,
        com.google.protobuf.RpcCallback<com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse> done);
    
    public abstract void changeMap(
        com.google.protobuf.RpcController controller,
        com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomMap request,
        com.google.protobuf.RpcCallback<com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse> done);
    
    public abstract void editSeat(
        com.google.protobuf.RpcController controller,
        com.xinqihd.sns.gameserver.proto.RpcRoomManager.EditSeat request,
        com.google.protobuf.RpcCallback<com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse> done);
    
    public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
      return com.xinqihd.sns.gameserver.proto.RpcRoomManager.getDescriptor().getServices().get(0);
    }
    public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    
    public final void callMethod(
        com.google.protobuf.Descriptors.MethodDescriptor method,
        com.google.protobuf.RpcController controller,
        com.google.protobuf.Message request,
        com.google.protobuf.RpcCallback<
          com.google.protobuf.Message> done) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.callMethod() given method descriptor for wrong " +
          "service type.");
      }
      switch(method.getIndex()) {
        case 0:
          this.joinRoom(controller, (com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomAndUserSessionKey)request,
            com.google.protobuf.RpcUtil.<com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse>specializeCallback(
              done));
          return;
        case 1:
          this.leaveRoom(controller, (com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey)request,
            com.google.protobuf.RpcUtil.<com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse>specializeCallback(
              done));
          return;
        case 2:
          this.readyStart(controller, (com.xinqihd.sns.gameserver.proto.RpcRoomManager.ReadyStart)request,
            com.google.protobuf.RpcUtil.<com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse>specializeCallback(
              done));
          return;
        case 3:
          this.changeMap(controller, (com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomMap)request,
            com.google.protobuf.RpcUtil.<com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse>specializeCallback(
              done));
          return;
        case 4:
          this.editSeat(controller, (com.xinqihd.sns.gameserver.proto.RpcRoomManager.EditSeat)request,
            com.google.protobuf.RpcUtil.<com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse>specializeCallback(
              done));
          return;
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getRequestPrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getRequestPrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomAndUserSessionKey.getDefaultInstance();
        case 1:
          return com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey.getDefaultInstance();
        case 2:
          return com.xinqihd.sns.gameserver.proto.RpcRoomManager.ReadyStart.getDefaultInstance();
        case 3:
          return com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomMap.getDefaultInstance();
        case 4:
          return com.xinqihd.sns.gameserver.proto.RpcRoomManager.EditSeat.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getResponsePrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getResponsePrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse.getDefaultInstance();
        case 1:
          return com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse.getDefaultInstance();
        case 2:
          return com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse.getDefaultInstance();
        case 3:
          return com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse.getDefaultInstance();
        case 4:
          return com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public static Stub newStub(
        com.google.protobuf.RpcChannel channel) {
      return new Stub(channel);
    }
    
    public static final class Stub extends com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomManager implements Interface {
      private Stub(com.google.protobuf.RpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.RpcChannel channel;
      
      public com.google.protobuf.RpcChannel getChannel() {
        return channel;
      }
      
      public  void joinRoom(
          com.google.protobuf.RpcController controller,
          com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomAndUserSessionKey request,
          com.google.protobuf.RpcCallback<com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse.class,
            com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse.getDefaultInstance()));
      }
      
      public  void leaveRoom(
          com.google.protobuf.RpcController controller,
          com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey request,
          com.google.protobuf.RpcCallback<com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse.class,
            com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse.getDefaultInstance()));
      }
      
      public  void readyStart(
          com.google.protobuf.RpcController controller,
          com.xinqihd.sns.gameserver.proto.RpcRoomManager.ReadyStart request,
          com.google.protobuf.RpcCallback<com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(2),
          controller,
          request,
          com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse.class,
            com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse.getDefaultInstance()));
      }
      
      public  void changeMap(
          com.google.protobuf.RpcController controller,
          com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomMap request,
          com.google.protobuf.RpcCallback<com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(3),
          controller,
          request,
          com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse.class,
            com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse.getDefaultInstance()));
      }
      
      public  void editSeat(
          com.google.protobuf.RpcController controller,
          com.xinqihd.sns.gameserver.proto.RpcRoomManager.EditSeat request,
          com.google.protobuf.RpcCallback<com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(4),
          controller,
          request,
          com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse.class,
            com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse.getDefaultInstance()));
      }
    }
    
    public static BlockingInterface newBlockingStub(
        com.google.protobuf.BlockingRpcChannel channel) {
      return new BlockingStub(channel);
    }
    
    public interface BlockingInterface {
      public com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse joinRoom(
          com.google.protobuf.RpcController controller,
          com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomAndUserSessionKey request)
          throws com.google.protobuf.ServiceException;
      
      public com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse leaveRoom(
          com.google.protobuf.RpcController controller,
          com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey request)
          throws com.google.protobuf.ServiceException;
      
      public com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse readyStart(
          com.google.protobuf.RpcController controller,
          com.xinqihd.sns.gameserver.proto.RpcRoomManager.ReadyStart request)
          throws com.google.protobuf.ServiceException;
      
      public com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse changeMap(
          com.google.protobuf.RpcController controller,
          com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomMap request)
          throws com.google.protobuf.ServiceException;
      
      public com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse editSeat(
          com.google.protobuf.RpcController controller,
          com.xinqihd.sns.gameserver.proto.RpcRoomManager.EditSeat request)
          throws com.google.protobuf.ServiceException;
    }
    
    private static final class BlockingStub implements BlockingInterface {
      private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.BlockingRpcChannel channel;
      
      public com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse joinRoom(
          com.google.protobuf.RpcController controller,
          com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomAndUserSessionKey request)
          throws com.google.protobuf.ServiceException {
        return (com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse.getDefaultInstance());
      }
      
      
      public com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse leaveRoom(
          com.google.protobuf.RpcController controller,
          com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey request)
          throws com.google.protobuf.ServiceException {
        return (com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse.getDefaultInstance());
      }
      
      
      public com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse readyStart(
          com.google.protobuf.RpcController controller,
          com.xinqihd.sns.gameserver.proto.RpcRoomManager.ReadyStart request)
          throws com.google.protobuf.ServiceException {
        return (com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(2),
          controller,
          request,
          com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse.getDefaultInstance());
      }
      
      
      public com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse changeMap(
          com.google.protobuf.RpcController controller,
          com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomMap request)
          throws com.google.protobuf.ServiceException {
        return (com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(3),
          controller,
          request,
          com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse.getDefaultInstance());
      }
      
      
      public com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse editSeat(
          com.google.protobuf.RpcController controller,
          com.xinqihd.sns.gameserver.proto.RpcRoomManager.EditSeat request)
          throws com.google.protobuf.ServiceException {
        return (com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(4),
          controller,
          request,
          com.xinqihd.sns.gameserver.proto.Rpc.BoolResponse.getDefaultInstance());
      }
      
    }
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_xinqihd_sns_gameserver_proto_UserSessionKey_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_xinqihd_sns_gameserver_proto_UserSessionKey_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_xinqihd_sns_gameserver_proto_RoomSessionKey_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_xinqihd_sns_gameserver_proto_RoomSessionKey_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_xinqihd_sns_gameserver_proto_RoomAndUserSessionKey_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_xinqihd_sns_gameserver_proto_RoomAndUserSessionKey_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_xinqihd_sns_gameserver_proto_ReadyStart_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_xinqihd_sns_gameserver_proto_ReadyStart_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_xinqihd_sns_gameserver_proto_RoomMap_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_xinqihd_sns_gameserver_proto_RoomMap_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_xinqihd_sns_gameserver_proto_EditSeat_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_xinqihd_sns_gameserver_proto_EditSeat_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024RpcRoomManager.proto\022 com.xinqihd.sns." +
      "gameserver.proto\032\tRpc.proto\"(\n\016UserSessi" +
      "onKey\022\026\n\016userSessionKey\030\001 \001(\014\"(\n\016RoomSes" +
      "sionKey\022\026\n\016roomSessionKey\030\001 \001(\014\"\253\001\n\025Room" +
      "AndUserSessionKey\022H\n\016roomSessionKey\030\001 \001(" +
      "\01320.com.xinqihd.sns.gameserver.proto.Roo" +
      "mSessionKey\022H\n\016userSessionKey\030\002 \001(\01320.co" +
      "m.xinqihd.sns.gameserver.proto.UserSessi" +
      "onKey\"g\n\nReadyStart\022H\n\016userSessionKey\030\001 " +
      "\001(\01320.com.xinqihd.sns.gameserver.proto.U",
      "serSessionKey\022\017\n\007isReady\030\002 \001(\010\"b\n\007RoomMa" +
      "p\022H\n\016userSessionKey\030\001 \001(\01320.com.xinqihd." +
      "sns.gameserver.proto.UserSessionKey\022\r\n\005m" +
      "apid\030\002 \001(\t\"s\n\010EditSeat\022H\n\016userSessionKey" +
      "\030\001 \001(\01320.com.xinqihd.sns.gameserver.prot" +
      "o.UserSessionKey\022\r\n\005index\030\002 \001(\r\022\016\n\006isOpe" +
      "n\030\003 \001(\0102\255\004\n\013RoomManager\022s\n\010joinRoom\0227.co" +
      "m.xinqihd.sns.gameserver.proto.RoomAndUs" +
      "erSessionKey\032..com.xinqihd.sns.gameserve" +
      "r.proto.BoolResponse\022m\n\tleaveRoom\0220.com.",
      "xinqihd.sns.gameserver.proto.UserSession" +
      "Key\032..com.xinqihd.sns.gameserver.proto.B" +
      "oolResponse\022j\n\nreadyStart\022,.com.xinqihd." +
      "sns.gameserver.proto.ReadyStart\032..com.xi" +
      "nqihd.sns.gameserver.proto.BoolResponse\022" +
      "f\n\tchangeMap\022).com.xinqihd.sns.gameserve" +
      "r.proto.RoomMap\032..com.xinqihd.sns.gamese" +
      "rver.proto.BoolResponse\022f\n\010editSeat\022*.co" +
      "m.xinqihd.sns.gameserver.proto.EditSeat\032" +
      "..com.xinqihd.sns.gameserver.proto.BoolR",
      "esponseB\023B\016RpcRoomManager\210\001\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_xinqihd_sns_gameserver_proto_UserSessionKey_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_xinqihd_sns_gameserver_proto_UserSessionKey_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_xinqihd_sns_gameserver_proto_UserSessionKey_descriptor,
              new java.lang.String[] { "UserSessionKey", },
              com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey.class,
              com.xinqihd.sns.gameserver.proto.RpcRoomManager.UserSessionKey.Builder.class);
          internal_static_com_xinqihd_sns_gameserver_proto_RoomSessionKey_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_com_xinqihd_sns_gameserver_proto_RoomSessionKey_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_xinqihd_sns_gameserver_proto_RoomSessionKey_descriptor,
              new java.lang.String[] { "RoomSessionKey", },
              com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomSessionKey.class,
              com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomSessionKey.Builder.class);
          internal_static_com_xinqihd_sns_gameserver_proto_RoomAndUserSessionKey_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_com_xinqihd_sns_gameserver_proto_RoomAndUserSessionKey_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_xinqihd_sns_gameserver_proto_RoomAndUserSessionKey_descriptor,
              new java.lang.String[] { "RoomSessionKey", "UserSessionKey", },
              com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomAndUserSessionKey.class,
              com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomAndUserSessionKey.Builder.class);
          internal_static_com_xinqihd_sns_gameserver_proto_ReadyStart_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_com_xinqihd_sns_gameserver_proto_ReadyStart_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_xinqihd_sns_gameserver_proto_ReadyStart_descriptor,
              new java.lang.String[] { "UserSessionKey", "IsReady", },
              com.xinqihd.sns.gameserver.proto.RpcRoomManager.ReadyStart.class,
              com.xinqihd.sns.gameserver.proto.RpcRoomManager.ReadyStart.Builder.class);
          internal_static_com_xinqihd_sns_gameserver_proto_RoomMap_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_com_xinqihd_sns_gameserver_proto_RoomMap_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_xinqihd_sns_gameserver_proto_RoomMap_descriptor,
              new java.lang.String[] { "UserSessionKey", "Mapid", },
              com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomMap.class,
              com.xinqihd.sns.gameserver.proto.RpcRoomManager.RoomMap.Builder.class);
          internal_static_com_xinqihd_sns_gameserver_proto_EditSeat_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_com_xinqihd_sns_gameserver_proto_EditSeat_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_xinqihd_sns_gameserver_proto_EditSeat_descriptor,
              new java.lang.String[] { "UserSessionKey", "Index", "IsOpen", },
              com.xinqihd.sns.gameserver.proto.RpcRoomManager.EditSeat.class,
              com.xinqihd.sns.gameserver.proto.RpcRoomManager.EditSeat.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.xinqihd.sns.gameserver.proto.Rpc.getDescriptor(),
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
