// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RoleInfo.proto

package com.xinqihd.sns.gameserver.proto;

public final class XinqiRoleInfo {
  private XinqiRoleInfo() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface RoleInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required string sessionId = 1;
    boolean hasSessionId();
    String getSessionId();
    
    // required string userId = 2;
    boolean hasUserId();
    String getUserId();
    
    // required uint32 campId = 3;
    boolean hasCampId();
    int getCampId();
    
    // required string userName = 4;
    boolean hasUserName();
    String getUserName();
    
    // required uint32 gender = 5;
    boolean hasGender();
    int getGender();
    
    // required uint32 level = 6;
    boolean hasLevel();
    int getLevel();
    
    // required uint32 exp = 7;
    boolean hasExp();
    int getExp();
    
    // required uint32 winOdds = 8;
    boolean hasWinOdds();
    int getWinOdds();
    
    // required uint32 wins = 9;
    boolean hasWins();
    int getWins();
    
    // required uint32 roomIdx = 10;
    boolean hasRoomIdx();
    int getRoomIdx();
    
    // optional int32 startPos = 11 [default = 0];
    boolean hasStartPos();
    int getStartPos();
    
    // required uint32 moveSpeed = 12;
    boolean hasMoveSpeed();
    int getMoveSpeed();
    
    // required uint32 tool1 = 13;
    boolean hasTool1();
    int getTool1();
    
    // required uint32 tool2 = 14;
    boolean hasTool2();
    int getTool2();
    
    // required uint32 tool3 = 15;
    boolean hasTool3();
    int getTool3();
    
    // required uint32 attack = 16;
    boolean hasAttack();
    int getAttack();
    
    // required uint32 defend = 17;
    boolean hasDefend();
    int getDefend();
    
    // required uint32 agility = 18;
    boolean hasAgility();
    int getAgility();
    
    // required uint32 luck = 19;
    boolean hasLuck();
    int getLuck();
    
    // required uint32 blood = 20;
    boolean hasBlood();
    int getBlood();
    
    // required uint32 thew = 21;
    boolean hasThew();
    int getThew();
    
    // required uint32 damage = 22;
    boolean hasDamage();
    int getDamage();
    
    // required uint32 skin = 23;
    boolean hasSkin();
    int getSkin();
    
    // required uint32 power = 24;
    boolean hasPower();
    int getPower();
    
    // optional uint32 addAttack = 25;
    boolean hasAddAttack();
    int getAddAttack();
    
    // optional uint32 addDefend = 26;
    boolean hasAddDefend();
    int getAddDefend();
    
    // optional uint32 addAgility = 27;
    boolean hasAddAgility();
    int getAddAgility();
    
    // optional uint32 addLuck = 28;
    boolean hasAddLuck();
    int getAddLuck();
    
    // optional uint32 addBlood = 29;
    boolean hasAddBlood();
    int getAddBlood();
    
    // optional uint32 addThew = 30;
    boolean hasAddThew();
    int getAddThew();
    
    // optional uint32 addDamage = 31;
    boolean hasAddDamage();
    int getAddDamage();
    
    // optional uint32 addSkin = 32;
    boolean hasAddSkin();
    int getAddSkin();
    
    // optional uint32 addPower = 33;
    boolean hasAddPower();
    int getAddPower();
    
    // repeated .com.xinqihd.sns.gameserver.proto.PropData equip = 35;
    java.util.List<com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData> 
        getEquipList();
    com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData getEquip(int index);
    int getEquipCount();
    java.util.List<? extends com.xinqihd.sns.gameserver.proto.XinqiPropData.PropDataOrBuilder> 
        getEquipOrBuilderList();
    com.xinqihd.sns.gameserver.proto.XinqiPropData.PropDataOrBuilder getEquipOrBuilder(
        int index);
    
    // required bool hideHat = 36;
    boolean hasHideHat();
    boolean getHideHat();
    
    // required bool hideGlasses = 37;
    boolean hasHideGlasses();
    boolean getHideGlasses();
    
    // required bool hideSuit = 38;
    boolean hasHideSuit();
    boolean getHideSuit();
    
    // required int32 battleCount = 39;
    boolean hasBattleCount();
    int getBattleCount();
    
    // required uint32 battleRoomIdx = 40;
    boolean hasBattleRoomIdx();
    int getBattleRoomIdx();
    
    // optional bool yellowDmd = 41 [default = false];
    boolean hasYellowDmd();
    boolean getYellowDmd();
    
    // optional bool yellowDmdYear = 42 [default = false];
    boolean hasYellowDmdYear();
    boolean getYellowDmdYear();
    
    // optional int32 yellowDmdLv = 43 [default = 0];
    boolean hasYellowDmdLv();
    int getYellowDmdLv();
    
    // optional bool doubleexp = 44 [default = false];
    boolean hasDoubleexp();
    boolean getDoubleexp();
    
    // optional int32 startPosX = 45 [default = 0];
    boolean hasStartPosX();
    int getStartPosX();
    
    // optional int32 startPosY = 46 [default = 0];
    boolean hasStartPosY();
    int getStartPosY();
    
    // optional bool lessLv5 = 47 [default = false];
    boolean hasLessLv5();
    boolean getLessLv5();
    
    // optional int32 roleTypeID = 48 [default = 0];
    boolean hasRoleTypeID();
    int getRoleTypeID();
    
    // optional int32 guildID = 49 [default = 0];
    boolean hasGuildID();
    int getGuildID();
    
    // optional string guildName = 50 [default = ""];
    boolean hasGuildName();
    String getGuildName();
    
    // optional uint32 guildAttack = 60;
    boolean hasGuildAttack();
    int getGuildAttack();
    
    // optional uint32 guildDefend = 61;
    boolean hasGuildDefend();
    int getGuildDefend();
    
    // optional uint32 guildAgility = 62;
    boolean hasGuildAgility();
    int getGuildAgility();
    
    // optional uint32 guildLuck = 63;
    boolean hasGuildLuck();
    int getGuildLuck();
    
    // optional uint32 guildBlood = 64;
    boolean hasGuildBlood();
    int getGuildBlood();
    
    // optional uint32 guildThew = 65;
    boolean hasGuildThew();
    int getGuildThew();
    
    // optional uint32 guildPower = 66;
    boolean hasGuildPower();
    int getGuildPower();
  }
  public static final class RoleInfo extends
      com.google.protobuf.GeneratedMessage
      implements RoleInfoOrBuilder {
    // Use RoleInfo.newBuilder() to construct.
    private RoleInfo(Builder builder) {
      super(builder);
    }
    private RoleInfo(boolean noInit) {}
    
    private static final RoleInfo defaultInstance;
    public static RoleInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public RoleInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.xinqihd.sns.gameserver.proto.XinqiRoleInfo.internal_static_com_xinqihd_sns_gameserver_proto_RoleInfo_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.xinqihd.sns.gameserver.proto.XinqiRoleInfo.internal_static_com_xinqihd_sns_gameserver_proto_RoleInfo_fieldAccessorTable;
    }
    
    private int bitField0_;
    private int bitField1_;
    // required string sessionId = 1;
    public static final int SESSIONID_FIELD_NUMBER = 1;
    private java.lang.Object sessionId_;
    public boolean hasSessionId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getSessionId() {
      java.lang.Object ref = sessionId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          sessionId_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getSessionIdBytes() {
      java.lang.Object ref = sessionId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        sessionId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required string userId = 2;
    public static final int USERID_FIELD_NUMBER = 2;
    private java.lang.Object userId_;
    public boolean hasUserId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getUserId() {
      java.lang.Object ref = userId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          userId_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getUserIdBytes() {
      java.lang.Object ref = userId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        userId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required uint32 campId = 3;
    public static final int CAMPID_FIELD_NUMBER = 3;
    private int campId_;
    public boolean hasCampId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getCampId() {
      return campId_;
    }
    
    // required string userName = 4;
    public static final int USERNAME_FIELD_NUMBER = 4;
    private java.lang.Object userName_;
    public boolean hasUserName() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public String getUserName() {
      java.lang.Object ref = userName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          userName_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getUserNameBytes() {
      java.lang.Object ref = userName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        userName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required uint32 gender = 5;
    public static final int GENDER_FIELD_NUMBER = 5;
    private int gender_;
    public boolean hasGender() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getGender() {
      return gender_;
    }
    
    // required uint32 level = 6;
    public static final int LEVEL_FIELD_NUMBER = 6;
    private int level_;
    public boolean hasLevel() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getLevel() {
      return level_;
    }
    
    // required uint32 exp = 7;
    public static final int EXP_FIELD_NUMBER = 7;
    private int exp_;
    public boolean hasExp() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public int getExp() {
      return exp_;
    }
    
    // required uint32 winOdds = 8;
    public static final int WINODDS_FIELD_NUMBER = 8;
    private int winOdds_;
    public boolean hasWinOdds() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public int getWinOdds() {
      return winOdds_;
    }
    
    // required uint32 wins = 9;
    public static final int WINS_FIELD_NUMBER = 9;
    private int wins_;
    public boolean hasWins() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public int getWins() {
      return wins_;
    }
    
    // required uint32 roomIdx = 10;
    public static final int ROOMIDX_FIELD_NUMBER = 10;
    private int roomIdx_;
    public boolean hasRoomIdx() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public int getRoomIdx() {
      return roomIdx_;
    }
    
    // optional int32 startPos = 11 [default = 0];
    public static final int STARTPOS_FIELD_NUMBER = 11;
    private int startPos_;
    public boolean hasStartPos() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    public int getStartPos() {
      return startPos_;
    }
    
    // required uint32 moveSpeed = 12;
    public static final int MOVESPEED_FIELD_NUMBER = 12;
    private int moveSpeed_;
    public boolean hasMoveSpeed() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    public int getMoveSpeed() {
      return moveSpeed_;
    }
    
    // required uint32 tool1 = 13;
    public static final int TOOL1_FIELD_NUMBER = 13;
    private int tool1_;
    public boolean hasTool1() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    public int getTool1() {
      return tool1_;
    }
    
    // required uint32 tool2 = 14;
    public static final int TOOL2_FIELD_NUMBER = 14;
    private int tool2_;
    public boolean hasTool2() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    public int getTool2() {
      return tool2_;
    }
    
    // required uint32 tool3 = 15;
    public static final int TOOL3_FIELD_NUMBER = 15;
    private int tool3_;
    public boolean hasTool3() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    public int getTool3() {
      return tool3_;
    }
    
    // required uint32 attack = 16;
    public static final int ATTACK_FIELD_NUMBER = 16;
    private int attack_;
    public boolean hasAttack() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    public int getAttack() {
      return attack_;
    }
    
    // required uint32 defend = 17;
    public static final int DEFEND_FIELD_NUMBER = 17;
    private int defend_;
    public boolean hasDefend() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    public int getDefend() {
      return defend_;
    }
    
    // required uint32 agility = 18;
    public static final int AGILITY_FIELD_NUMBER = 18;
    private int agility_;
    public boolean hasAgility() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    public int getAgility() {
      return agility_;
    }
    
    // required uint32 luck = 19;
    public static final int LUCK_FIELD_NUMBER = 19;
    private int luck_;
    public boolean hasLuck() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    public int getLuck() {
      return luck_;
    }
    
    // required uint32 blood = 20;
    public static final int BLOOD_FIELD_NUMBER = 20;
    private int blood_;
    public boolean hasBlood() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    public int getBlood() {
      return blood_;
    }
    
    // required uint32 thew = 21;
    public static final int THEW_FIELD_NUMBER = 21;
    private int thew_;
    public boolean hasThew() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    public int getThew() {
      return thew_;
    }
    
    // required uint32 damage = 22;
    public static final int DAMAGE_FIELD_NUMBER = 22;
    private int damage_;
    public boolean hasDamage() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    public int getDamage() {
      return damage_;
    }
    
    // required uint32 skin = 23;
    public static final int SKIN_FIELD_NUMBER = 23;
    private int skin_;
    public boolean hasSkin() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    public int getSkin() {
      return skin_;
    }
    
    // required uint32 power = 24;
    public static final int POWER_FIELD_NUMBER = 24;
    private int power_;
    public boolean hasPower() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    public int getPower() {
      return power_;
    }
    
    // optional uint32 addAttack = 25;
    public static final int ADDATTACK_FIELD_NUMBER = 25;
    private int addAttack_;
    public boolean hasAddAttack() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    public int getAddAttack() {
      return addAttack_;
    }
    
    // optional uint32 addDefend = 26;
    public static final int ADDDEFEND_FIELD_NUMBER = 26;
    private int addDefend_;
    public boolean hasAddDefend() {
      return ((bitField0_ & 0x02000000) == 0x02000000);
    }
    public int getAddDefend() {
      return addDefend_;
    }
    
    // optional uint32 addAgility = 27;
    public static final int ADDAGILITY_FIELD_NUMBER = 27;
    private int addAgility_;
    public boolean hasAddAgility() {
      return ((bitField0_ & 0x04000000) == 0x04000000);
    }
    public int getAddAgility() {
      return addAgility_;
    }
    
    // optional uint32 addLuck = 28;
    public static final int ADDLUCK_FIELD_NUMBER = 28;
    private int addLuck_;
    public boolean hasAddLuck() {
      return ((bitField0_ & 0x08000000) == 0x08000000);
    }
    public int getAddLuck() {
      return addLuck_;
    }
    
    // optional uint32 addBlood = 29;
    public static final int ADDBLOOD_FIELD_NUMBER = 29;
    private int addBlood_;
    public boolean hasAddBlood() {
      return ((bitField0_ & 0x10000000) == 0x10000000);
    }
    public int getAddBlood() {
      return addBlood_;
    }
    
    // optional uint32 addThew = 30;
    public static final int ADDTHEW_FIELD_NUMBER = 30;
    private int addThew_;
    public boolean hasAddThew() {
      return ((bitField0_ & 0x20000000) == 0x20000000);
    }
    public int getAddThew() {
      return addThew_;
    }
    
    // optional uint32 addDamage = 31;
    public static final int ADDDAMAGE_FIELD_NUMBER = 31;
    private int addDamage_;
    public boolean hasAddDamage() {
      return ((bitField0_ & 0x40000000) == 0x40000000);
    }
    public int getAddDamage() {
      return addDamage_;
    }
    
    // optional uint32 addSkin = 32;
    public static final int ADDSKIN_FIELD_NUMBER = 32;
    private int addSkin_;
    public boolean hasAddSkin() {
      return ((bitField0_ & 0x80000000) == 0x80000000);
    }
    public int getAddSkin() {
      return addSkin_;
    }
    
    // optional uint32 addPower = 33;
    public static final int ADDPOWER_FIELD_NUMBER = 33;
    private int addPower_;
    public boolean hasAddPower() {
      return ((bitField1_ & 0x00000001) == 0x00000001);
    }
    public int getAddPower() {
      return addPower_;
    }
    
    // repeated .com.xinqihd.sns.gameserver.proto.PropData equip = 35;
    public static final int EQUIP_FIELD_NUMBER = 35;
    private java.util.List<com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData> equip_;
    public java.util.List<com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData> getEquipList() {
      return equip_;
    }
    public java.util.List<? extends com.xinqihd.sns.gameserver.proto.XinqiPropData.PropDataOrBuilder> 
        getEquipOrBuilderList() {
      return equip_;
    }
    public int getEquipCount() {
      return equip_.size();
    }
    public com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData getEquip(int index) {
      return equip_.get(index);
    }
    public com.xinqihd.sns.gameserver.proto.XinqiPropData.PropDataOrBuilder getEquipOrBuilder(
        int index) {
      return equip_.get(index);
    }
    
    // required bool hideHat = 36;
    public static final int HIDEHAT_FIELD_NUMBER = 36;
    private boolean hideHat_;
    public boolean hasHideHat() {
      return ((bitField1_ & 0x00000002) == 0x00000002);
    }
    public boolean getHideHat() {
      return hideHat_;
    }
    
    // required bool hideGlasses = 37;
    public static final int HIDEGLASSES_FIELD_NUMBER = 37;
    private boolean hideGlasses_;
    public boolean hasHideGlasses() {
      return ((bitField1_ & 0x00000004) == 0x00000004);
    }
    public boolean getHideGlasses() {
      return hideGlasses_;
    }
    
    // required bool hideSuit = 38;
    public static final int HIDESUIT_FIELD_NUMBER = 38;
    private boolean hideSuit_;
    public boolean hasHideSuit() {
      return ((bitField1_ & 0x00000008) == 0x00000008);
    }
    public boolean getHideSuit() {
      return hideSuit_;
    }
    
    // required int32 battleCount = 39;
    public static final int BATTLECOUNT_FIELD_NUMBER = 39;
    private int battleCount_;
    public boolean hasBattleCount() {
      return ((bitField1_ & 0x00000010) == 0x00000010);
    }
    public int getBattleCount() {
      return battleCount_;
    }
    
    // required uint32 battleRoomIdx = 40;
    public static final int BATTLEROOMIDX_FIELD_NUMBER = 40;
    private int battleRoomIdx_;
    public boolean hasBattleRoomIdx() {
      return ((bitField1_ & 0x00000020) == 0x00000020);
    }
    public int getBattleRoomIdx() {
      return battleRoomIdx_;
    }
    
    // optional bool yellowDmd = 41 [default = false];
    public static final int YELLOWDMD_FIELD_NUMBER = 41;
    private boolean yellowDmd_;
    public boolean hasYellowDmd() {
      return ((bitField1_ & 0x00000040) == 0x00000040);
    }
    public boolean getYellowDmd() {
      return yellowDmd_;
    }
    
    // optional bool yellowDmdYear = 42 [default = false];
    public static final int YELLOWDMDYEAR_FIELD_NUMBER = 42;
    private boolean yellowDmdYear_;
    public boolean hasYellowDmdYear() {
      return ((bitField1_ & 0x00000080) == 0x00000080);
    }
    public boolean getYellowDmdYear() {
      return yellowDmdYear_;
    }
    
    // optional int32 yellowDmdLv = 43 [default = 0];
    public static final int YELLOWDMDLV_FIELD_NUMBER = 43;
    private int yellowDmdLv_;
    public boolean hasYellowDmdLv() {
      return ((bitField1_ & 0x00000100) == 0x00000100);
    }
    public int getYellowDmdLv() {
      return yellowDmdLv_;
    }
    
    // optional bool doubleexp = 44 [default = false];
    public static final int DOUBLEEXP_FIELD_NUMBER = 44;
    private boolean doubleexp_;
    public boolean hasDoubleexp() {
      return ((bitField1_ & 0x00000200) == 0x00000200);
    }
    public boolean getDoubleexp() {
      return doubleexp_;
    }
    
    // optional int32 startPosX = 45 [default = 0];
    public static final int STARTPOSX_FIELD_NUMBER = 45;
    private int startPosX_;
    public boolean hasStartPosX() {
      return ((bitField1_ & 0x00000400) == 0x00000400);
    }
    public int getStartPosX() {
      return startPosX_;
    }
    
    // optional int32 startPosY = 46 [default = 0];
    public static final int STARTPOSY_FIELD_NUMBER = 46;
    private int startPosY_;
    public boolean hasStartPosY() {
      return ((bitField1_ & 0x00000800) == 0x00000800);
    }
    public int getStartPosY() {
      return startPosY_;
    }
    
    // optional bool lessLv5 = 47 [default = false];
    public static final int LESSLV5_FIELD_NUMBER = 47;
    private boolean lessLv5_;
    public boolean hasLessLv5() {
      return ((bitField1_ & 0x00001000) == 0x00001000);
    }
    public boolean getLessLv5() {
      return lessLv5_;
    }
    
    // optional int32 roleTypeID = 48 [default = 0];
    public static final int ROLETYPEID_FIELD_NUMBER = 48;
    private int roleTypeID_;
    public boolean hasRoleTypeID() {
      return ((bitField1_ & 0x00002000) == 0x00002000);
    }
    public int getRoleTypeID() {
      return roleTypeID_;
    }
    
    // optional int32 guildID = 49 [default = 0];
    public static final int GUILDID_FIELD_NUMBER = 49;
    private int guildID_;
    public boolean hasGuildID() {
      return ((bitField1_ & 0x00004000) == 0x00004000);
    }
    public int getGuildID() {
      return guildID_;
    }
    
    // optional string guildName = 50 [default = ""];
    public static final int GUILDNAME_FIELD_NUMBER = 50;
    private java.lang.Object guildName_;
    public boolean hasGuildName() {
      return ((bitField1_ & 0x00008000) == 0x00008000);
    }
    public String getGuildName() {
      java.lang.Object ref = guildName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          guildName_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getGuildNameBytes() {
      java.lang.Object ref = guildName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        guildName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional uint32 guildAttack = 60;
    public static final int GUILDATTACK_FIELD_NUMBER = 60;
    private int guildAttack_;
    public boolean hasGuildAttack() {
      return ((bitField1_ & 0x00010000) == 0x00010000);
    }
    public int getGuildAttack() {
      return guildAttack_;
    }
    
    // optional uint32 guildDefend = 61;
    public static final int GUILDDEFEND_FIELD_NUMBER = 61;
    private int guildDefend_;
    public boolean hasGuildDefend() {
      return ((bitField1_ & 0x00020000) == 0x00020000);
    }
    public int getGuildDefend() {
      return guildDefend_;
    }
    
    // optional uint32 guildAgility = 62;
    public static final int GUILDAGILITY_FIELD_NUMBER = 62;
    private int guildAgility_;
    public boolean hasGuildAgility() {
      return ((bitField1_ & 0x00040000) == 0x00040000);
    }
    public int getGuildAgility() {
      return guildAgility_;
    }
    
    // optional uint32 guildLuck = 63;
    public static final int GUILDLUCK_FIELD_NUMBER = 63;
    private int guildLuck_;
    public boolean hasGuildLuck() {
      return ((bitField1_ & 0x00080000) == 0x00080000);
    }
    public int getGuildLuck() {
      return guildLuck_;
    }
    
    // optional uint32 guildBlood = 64;
    public static final int GUILDBLOOD_FIELD_NUMBER = 64;
    private int guildBlood_;
    public boolean hasGuildBlood() {
      return ((bitField1_ & 0x00100000) == 0x00100000);
    }
    public int getGuildBlood() {
      return guildBlood_;
    }
    
    // optional uint32 guildThew = 65;
    public static final int GUILDTHEW_FIELD_NUMBER = 65;
    private int guildThew_;
    public boolean hasGuildThew() {
      return ((bitField1_ & 0x00200000) == 0x00200000);
    }
    public int getGuildThew() {
      return guildThew_;
    }
    
    // optional uint32 guildPower = 66;
    public static final int GUILDPOWER_FIELD_NUMBER = 66;
    private int guildPower_;
    public boolean hasGuildPower() {
      return ((bitField1_ & 0x00400000) == 0x00400000);
    }
    public int getGuildPower() {
      return guildPower_;
    }
    
    private void initFields() {
      sessionId_ = "";
      userId_ = "";
      campId_ = 0;
      userName_ = "";
      gender_ = 0;
      level_ = 0;
      exp_ = 0;
      winOdds_ = 0;
      wins_ = 0;
      roomIdx_ = 0;
      startPos_ = 0;
      moveSpeed_ = 0;
      tool1_ = 0;
      tool2_ = 0;
      tool3_ = 0;
      attack_ = 0;
      defend_ = 0;
      agility_ = 0;
      luck_ = 0;
      blood_ = 0;
      thew_ = 0;
      damage_ = 0;
      skin_ = 0;
      power_ = 0;
      addAttack_ = 0;
      addDefend_ = 0;
      addAgility_ = 0;
      addLuck_ = 0;
      addBlood_ = 0;
      addThew_ = 0;
      addDamage_ = 0;
      addSkin_ = 0;
      addPower_ = 0;
      equip_ = java.util.Collections.emptyList();
      hideHat_ = false;
      hideGlasses_ = false;
      hideSuit_ = false;
      battleCount_ = 0;
      battleRoomIdx_ = 0;
      yellowDmd_ = false;
      yellowDmdYear_ = false;
      yellowDmdLv_ = 0;
      doubleexp_ = false;
      startPosX_ = 0;
      startPosY_ = 0;
      lessLv5_ = false;
      roleTypeID_ = 0;
      guildID_ = 0;
      guildName_ = "";
      guildAttack_ = 0;
      guildDefend_ = 0;
      guildAgility_ = 0;
      guildLuck_ = 0;
      guildBlood_ = 0;
      guildThew_ = 0;
      guildPower_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasSessionId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUserId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCampId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUserName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasGender()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLevel()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasExp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasWinOdds()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasWins()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRoomIdx()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMoveSpeed()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTool1()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTool2()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTool3()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAttack()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDefend()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAgility()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLuck()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBlood()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasThew()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDamage()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSkin()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPower()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHideHat()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHideGlasses()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHideSuit()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBattleCount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBattleRoomIdx()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getEquipCount(); i++) {
        if (!getEquip(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getSessionIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getUserIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, campId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getUserNameBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, gender_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, level_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(7, exp_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt32(8, winOdds_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt32(9, wins_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeUInt32(10, roomIdx_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, startPos_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeUInt32(12, moveSpeed_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeUInt32(13, tool1_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeUInt32(14, tool2_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeUInt32(15, tool3_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeUInt32(16, attack_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeUInt32(17, defend_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeUInt32(18, agility_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeUInt32(19, luck_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeUInt32(20, blood_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeUInt32(21, thew_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeUInt32(22, damage_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeUInt32(23, skin_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeUInt32(24, power_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        output.writeUInt32(25, addAttack_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        output.writeUInt32(26, addDefend_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        output.writeUInt32(27, addAgility_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        output.writeUInt32(28, addLuck_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        output.writeUInt32(29, addBlood_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        output.writeUInt32(30, addThew_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        output.writeUInt32(31, addDamage_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        output.writeUInt32(32, addSkin_);
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(33, addPower_);
      }
      for (int i = 0; i < equip_.size(); i++) {
        output.writeMessage(35, equip_.get(i));
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        output.writeBool(36, hideHat_);
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        output.writeBool(37, hideGlasses_);
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        output.writeBool(38, hideSuit_);
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(39, battleCount_);
      }
      if (((bitField1_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(40, battleRoomIdx_);
      }
      if (((bitField1_ & 0x00000040) == 0x00000040)) {
        output.writeBool(41, yellowDmd_);
      }
      if (((bitField1_ & 0x00000080) == 0x00000080)) {
        output.writeBool(42, yellowDmdYear_);
      }
      if (((bitField1_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(43, yellowDmdLv_);
      }
      if (((bitField1_ & 0x00000200) == 0x00000200)) {
        output.writeBool(44, doubleexp_);
      }
      if (((bitField1_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(45, startPosX_);
      }
      if (((bitField1_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(46, startPosY_);
      }
      if (((bitField1_ & 0x00001000) == 0x00001000)) {
        output.writeBool(47, lessLv5_);
      }
      if (((bitField1_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(48, roleTypeID_);
      }
      if (((bitField1_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(49, guildID_);
      }
      if (((bitField1_ & 0x00008000) == 0x00008000)) {
        output.writeBytes(50, getGuildNameBytes());
      }
      if (((bitField1_ & 0x00010000) == 0x00010000)) {
        output.writeUInt32(60, guildAttack_);
      }
      if (((bitField1_ & 0x00020000) == 0x00020000)) {
        output.writeUInt32(61, guildDefend_);
      }
      if (((bitField1_ & 0x00040000) == 0x00040000)) {
        output.writeUInt32(62, guildAgility_);
      }
      if (((bitField1_ & 0x00080000) == 0x00080000)) {
        output.writeUInt32(63, guildLuck_);
      }
      if (((bitField1_ & 0x00100000) == 0x00100000)) {
        output.writeUInt32(64, guildBlood_);
      }
      if (((bitField1_ & 0x00200000) == 0x00200000)) {
        output.writeUInt32(65, guildThew_);
      }
      if (((bitField1_ & 0x00400000) == 0x00400000)) {
        output.writeUInt32(66, guildPower_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getSessionIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getUserIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, campId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getUserNameBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, gender_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, level_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, exp_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, winOdds_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, wins_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, roomIdx_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, startPos_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(12, moveSpeed_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(13, tool1_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(14, tool2_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(15, tool3_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(16, attack_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(17, defend_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(18, agility_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(19, luck_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(20, blood_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(21, thew_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(22, damage_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(23, skin_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(24, power_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(25, addAttack_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(26, addDefend_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(27, addAgility_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(28, addLuck_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(29, addBlood_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(30, addThew_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(31, addDamage_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(32, addSkin_);
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(33, addPower_);
      }
      for (int i = 0; i < equip_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(35, equip_.get(i));
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(36, hideHat_);
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(37, hideGlasses_);
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(38, hideSuit_);
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(39, battleCount_);
      }
      if (((bitField1_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(40, battleRoomIdx_);
      }
      if (((bitField1_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(41, yellowDmd_);
      }
      if (((bitField1_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(42, yellowDmdYear_);
      }
      if (((bitField1_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(43, yellowDmdLv_);
      }
      if (((bitField1_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(44, doubleexp_);
      }
      if (((bitField1_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(45, startPosX_);
      }
      if (((bitField1_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(46, startPosY_);
      }
      if (((bitField1_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(47, lessLv5_);
      }
      if (((bitField1_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(48, roleTypeID_);
      }
      if (((bitField1_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(49, guildID_);
      }
      if (((bitField1_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(50, getGuildNameBytes());
      }
      if (((bitField1_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(60, guildAttack_);
      }
      if (((bitField1_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(61, guildDefend_);
      }
      if (((bitField1_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(62, guildAgility_);
      }
      if (((bitField1_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(63, guildLuck_);
      }
      if (((bitField1_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(64, guildBlood_);
      }
      if (((bitField1_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(65, guildThew_);
      }
      if (((bitField1_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(66, guildPower_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.xinqihd.sns.gameserver.proto.XinqiRoleInfo.RoleInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiRoleInfo.RoleInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiRoleInfo.RoleInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiRoleInfo.RoleInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiRoleInfo.RoleInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiRoleInfo.RoleInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiRoleInfo.RoleInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiRoleInfo.RoleInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiRoleInfo.RoleInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiRoleInfo.RoleInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.xinqihd.sns.gameserver.proto.XinqiRoleInfo.RoleInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.xinqihd.sns.gameserver.proto.XinqiRoleInfo.RoleInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.xinqihd.sns.gameserver.proto.XinqiRoleInfo.internal_static_com_xinqihd_sns_gameserver_proto_RoleInfo_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.xinqihd.sns.gameserver.proto.XinqiRoleInfo.internal_static_com_xinqihd_sns_gameserver_proto_RoleInfo_fieldAccessorTable;
      }
      
      // Construct using com.xinqihd.sns.gameserver.proto.XinqiRoleInfo.RoleInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getEquipFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        sessionId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        userId_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        campId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        userName_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        gender_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        level_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        exp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        winOdds_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        wins_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        roomIdx_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        startPos_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        moveSpeed_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        tool1_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        tool2_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        tool3_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        attack_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        defend_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        agility_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        luck_ = 0;
        bitField0_ = (bitField0_ & ~0x00040000);
        blood_ = 0;
        bitField0_ = (bitField0_ & ~0x00080000);
        thew_ = 0;
        bitField0_ = (bitField0_ & ~0x00100000);
        damage_ = 0;
        bitField0_ = (bitField0_ & ~0x00200000);
        skin_ = 0;
        bitField0_ = (bitField0_ & ~0x00400000);
        power_ = 0;
        bitField0_ = (bitField0_ & ~0x00800000);
        addAttack_ = 0;
        bitField0_ = (bitField0_ & ~0x01000000);
        addDefend_ = 0;
        bitField0_ = (bitField0_ & ~0x02000000);
        addAgility_ = 0;
        bitField0_ = (bitField0_ & ~0x04000000);
        addLuck_ = 0;
        bitField0_ = (bitField0_ & ~0x08000000);
        addBlood_ = 0;
        bitField0_ = (bitField0_ & ~0x10000000);
        addThew_ = 0;
        bitField0_ = (bitField0_ & ~0x20000000);
        addDamage_ = 0;
        bitField0_ = (bitField0_ & ~0x40000000);
        addSkin_ = 0;
        bitField0_ = (bitField0_ & ~0x80000000);
        addPower_ = 0;
        bitField1_ = (bitField1_ & ~0x00000001);
        if (equipBuilder_ == null) {
          equip_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00000002);
        } else {
          equipBuilder_.clear();
        }
        hideHat_ = false;
        bitField1_ = (bitField1_ & ~0x00000004);
        hideGlasses_ = false;
        bitField1_ = (bitField1_ & ~0x00000008);
        hideSuit_ = false;
        bitField1_ = (bitField1_ & ~0x00000010);
        battleCount_ = 0;
        bitField1_ = (bitField1_ & ~0x00000020);
        battleRoomIdx_ = 0;
        bitField1_ = (bitField1_ & ~0x00000040);
        yellowDmd_ = false;
        bitField1_ = (bitField1_ & ~0x00000080);
        yellowDmdYear_ = false;
        bitField1_ = (bitField1_ & ~0x00000100);
        yellowDmdLv_ = 0;
        bitField1_ = (bitField1_ & ~0x00000200);
        doubleexp_ = false;
        bitField1_ = (bitField1_ & ~0x00000400);
        startPosX_ = 0;
        bitField1_ = (bitField1_ & ~0x00000800);
        startPosY_ = 0;
        bitField1_ = (bitField1_ & ~0x00001000);
        lessLv5_ = false;
        bitField1_ = (bitField1_ & ~0x00002000);
        roleTypeID_ = 0;
        bitField1_ = (bitField1_ & ~0x00004000);
        guildID_ = 0;
        bitField1_ = (bitField1_ & ~0x00008000);
        guildName_ = "";
        bitField1_ = (bitField1_ & ~0x00010000);
        guildAttack_ = 0;
        bitField1_ = (bitField1_ & ~0x00020000);
        guildDefend_ = 0;
        bitField1_ = (bitField1_ & ~0x00040000);
        guildAgility_ = 0;
        bitField1_ = (bitField1_ & ~0x00080000);
        guildLuck_ = 0;
        bitField1_ = (bitField1_ & ~0x00100000);
        guildBlood_ = 0;
        bitField1_ = (bitField1_ & ~0x00200000);
        guildThew_ = 0;
        bitField1_ = (bitField1_ & ~0x00400000);
        guildPower_ = 0;
        bitField1_ = (bitField1_ & ~0x00800000);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.xinqihd.sns.gameserver.proto.XinqiRoleInfo.RoleInfo.getDescriptor();
      }
      
      public com.xinqihd.sns.gameserver.proto.XinqiRoleInfo.RoleInfo getDefaultInstanceForType() {
        return com.xinqihd.sns.gameserver.proto.XinqiRoleInfo.RoleInfo.getDefaultInstance();
      }
      
      public com.xinqihd.sns.gameserver.proto.XinqiRoleInfo.RoleInfo build() {
        com.xinqihd.sns.gameserver.proto.XinqiRoleInfo.RoleInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.xinqihd.sns.gameserver.proto.XinqiRoleInfo.RoleInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.xinqihd.sns.gameserver.proto.XinqiRoleInfo.RoleInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.xinqihd.sns.gameserver.proto.XinqiRoleInfo.RoleInfo buildPartial() {
        com.xinqihd.sns.gameserver.proto.XinqiRoleInfo.RoleInfo result = new com.xinqihd.sns.gameserver.proto.XinqiRoleInfo.RoleInfo(this);
        int from_bitField0_ = bitField0_;
        int from_bitField1_ = bitField1_;
        int to_bitField0_ = 0;
        int to_bitField1_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.sessionId_ = sessionId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.userId_ = userId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.campId_ = campId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.userName_ = userName_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.gender_ = gender_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.level_ = level_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.exp_ = exp_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.winOdds_ = winOdds_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.wins_ = wins_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.roomIdx_ = roomIdx_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.startPos_ = startPos_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.moveSpeed_ = moveSpeed_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.tool1_ = tool1_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.tool2_ = tool2_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.tool3_ = tool3_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.attack_ = attack_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.defend_ = defend_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.agility_ = agility_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.luck_ = luck_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.blood_ = blood_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.thew_ = thew_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.damage_ = damage_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00400000;
        }
        result.skin_ = skin_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00800000;
        }
        result.power_ = power_;
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x01000000;
        }
        result.addAttack_ = addAttack_;
        if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
          to_bitField0_ |= 0x02000000;
        }
        result.addDefend_ = addDefend_;
        if (((from_bitField0_ & 0x04000000) == 0x04000000)) {
          to_bitField0_ |= 0x04000000;
        }
        result.addAgility_ = addAgility_;
        if (((from_bitField0_ & 0x08000000) == 0x08000000)) {
          to_bitField0_ |= 0x08000000;
        }
        result.addLuck_ = addLuck_;
        if (((from_bitField0_ & 0x10000000) == 0x10000000)) {
          to_bitField0_ |= 0x10000000;
        }
        result.addBlood_ = addBlood_;
        if (((from_bitField0_ & 0x20000000) == 0x20000000)) {
          to_bitField0_ |= 0x20000000;
        }
        result.addThew_ = addThew_;
        if (((from_bitField0_ & 0x40000000) == 0x40000000)) {
          to_bitField0_ |= 0x40000000;
        }
        result.addDamage_ = addDamage_;
        if (((from_bitField0_ & 0x80000000) == 0x80000000)) {
          to_bitField0_ |= 0x80000000;
        }
        result.addSkin_ = addSkin_;
        if (((from_bitField1_ & 0x00000001) == 0x00000001)) {
          to_bitField1_ |= 0x00000001;
        }
        result.addPower_ = addPower_;
        if (equipBuilder_ == null) {
          if (((bitField1_ & 0x00000002) == 0x00000002)) {
            equip_ = java.util.Collections.unmodifiableList(equip_);
            bitField1_ = (bitField1_ & ~0x00000002);
          }
          result.equip_ = equip_;
        } else {
          result.equip_ = equipBuilder_.build();
        }
        if (((from_bitField1_ & 0x00000004) == 0x00000004)) {
          to_bitField1_ |= 0x00000002;
        }
        result.hideHat_ = hideHat_;
        if (((from_bitField1_ & 0x00000008) == 0x00000008)) {
          to_bitField1_ |= 0x00000004;
        }
        result.hideGlasses_ = hideGlasses_;
        if (((from_bitField1_ & 0x00000010) == 0x00000010)) {
          to_bitField1_ |= 0x00000008;
        }
        result.hideSuit_ = hideSuit_;
        if (((from_bitField1_ & 0x00000020) == 0x00000020)) {
          to_bitField1_ |= 0x00000010;
        }
        result.battleCount_ = battleCount_;
        if (((from_bitField1_ & 0x00000040) == 0x00000040)) {
          to_bitField1_ |= 0x00000020;
        }
        result.battleRoomIdx_ = battleRoomIdx_;
        if (((from_bitField1_ & 0x00000080) == 0x00000080)) {
          to_bitField1_ |= 0x00000040;
        }
        result.yellowDmd_ = yellowDmd_;
        if (((from_bitField1_ & 0x00000100) == 0x00000100)) {
          to_bitField1_ |= 0x00000080;
        }
        result.yellowDmdYear_ = yellowDmdYear_;
        if (((from_bitField1_ & 0x00000200) == 0x00000200)) {
          to_bitField1_ |= 0x00000100;
        }
        result.yellowDmdLv_ = yellowDmdLv_;
        if (((from_bitField1_ & 0x00000400) == 0x00000400)) {
          to_bitField1_ |= 0x00000200;
        }
        result.doubleexp_ = doubleexp_;
        if (((from_bitField1_ & 0x00000800) == 0x00000800)) {
          to_bitField1_ |= 0x00000400;
        }
        result.startPosX_ = startPosX_;
        if (((from_bitField1_ & 0x00001000) == 0x00001000)) {
          to_bitField1_ |= 0x00000800;
        }
        result.startPosY_ = startPosY_;
        if (((from_bitField1_ & 0x00002000) == 0x00002000)) {
          to_bitField1_ |= 0x00001000;
        }
        result.lessLv5_ = lessLv5_;
        if (((from_bitField1_ & 0x00004000) == 0x00004000)) {
          to_bitField1_ |= 0x00002000;
        }
        result.roleTypeID_ = roleTypeID_;
        if (((from_bitField1_ & 0x00008000) == 0x00008000)) {
          to_bitField1_ |= 0x00004000;
        }
        result.guildID_ = guildID_;
        if (((from_bitField1_ & 0x00010000) == 0x00010000)) {
          to_bitField1_ |= 0x00008000;
        }
        result.guildName_ = guildName_;
        if (((from_bitField1_ & 0x00020000) == 0x00020000)) {
          to_bitField1_ |= 0x00010000;
        }
        result.guildAttack_ = guildAttack_;
        if (((from_bitField1_ & 0x00040000) == 0x00040000)) {
          to_bitField1_ |= 0x00020000;
        }
        result.guildDefend_ = guildDefend_;
        if (((from_bitField1_ & 0x00080000) == 0x00080000)) {
          to_bitField1_ |= 0x00040000;
        }
        result.guildAgility_ = guildAgility_;
        if (((from_bitField1_ & 0x00100000) == 0x00100000)) {
          to_bitField1_ |= 0x00080000;
        }
        result.guildLuck_ = guildLuck_;
        if (((from_bitField1_ & 0x00200000) == 0x00200000)) {
          to_bitField1_ |= 0x00100000;
        }
        result.guildBlood_ = guildBlood_;
        if (((from_bitField1_ & 0x00400000) == 0x00400000)) {
          to_bitField1_ |= 0x00200000;
        }
        result.guildThew_ = guildThew_;
        if (((from_bitField1_ & 0x00800000) == 0x00800000)) {
          to_bitField1_ |= 0x00400000;
        }
        result.guildPower_ = guildPower_;
        result.bitField0_ = to_bitField0_;
        result.bitField1_ = to_bitField1_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.xinqihd.sns.gameserver.proto.XinqiRoleInfo.RoleInfo) {
          return mergeFrom((com.xinqihd.sns.gameserver.proto.XinqiRoleInfo.RoleInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.xinqihd.sns.gameserver.proto.XinqiRoleInfo.RoleInfo other) {
        if (other == com.xinqihd.sns.gameserver.proto.XinqiRoleInfo.RoleInfo.getDefaultInstance()) return this;
        if (other.hasSessionId()) {
          setSessionId(other.getSessionId());
        }
        if (other.hasUserId()) {
          setUserId(other.getUserId());
        }
        if (other.hasCampId()) {
          setCampId(other.getCampId());
        }
        if (other.hasUserName()) {
          setUserName(other.getUserName());
        }
        if (other.hasGender()) {
          setGender(other.getGender());
        }
        if (other.hasLevel()) {
          setLevel(other.getLevel());
        }
        if (other.hasExp()) {
          setExp(other.getExp());
        }
        if (other.hasWinOdds()) {
          setWinOdds(other.getWinOdds());
        }
        if (other.hasWins()) {
          setWins(other.getWins());
        }
        if (other.hasRoomIdx()) {
          setRoomIdx(other.getRoomIdx());
        }
        if (other.hasStartPos()) {
          setStartPos(other.getStartPos());
        }
        if (other.hasMoveSpeed()) {
          setMoveSpeed(other.getMoveSpeed());
        }
        if (other.hasTool1()) {
          setTool1(other.getTool1());
        }
        if (other.hasTool2()) {
          setTool2(other.getTool2());
        }
        if (other.hasTool3()) {
          setTool3(other.getTool3());
        }
        if (other.hasAttack()) {
          setAttack(other.getAttack());
        }
        if (other.hasDefend()) {
          setDefend(other.getDefend());
        }
        if (other.hasAgility()) {
          setAgility(other.getAgility());
        }
        if (other.hasLuck()) {
          setLuck(other.getLuck());
        }
        if (other.hasBlood()) {
          setBlood(other.getBlood());
        }
        if (other.hasThew()) {
          setThew(other.getThew());
        }
        if (other.hasDamage()) {
          setDamage(other.getDamage());
        }
        if (other.hasSkin()) {
          setSkin(other.getSkin());
        }
        if (other.hasPower()) {
          setPower(other.getPower());
        }
        if (other.hasAddAttack()) {
          setAddAttack(other.getAddAttack());
        }
        if (other.hasAddDefend()) {
          setAddDefend(other.getAddDefend());
        }
        if (other.hasAddAgility()) {
          setAddAgility(other.getAddAgility());
        }
        if (other.hasAddLuck()) {
          setAddLuck(other.getAddLuck());
        }
        if (other.hasAddBlood()) {
          setAddBlood(other.getAddBlood());
        }
        if (other.hasAddThew()) {
          setAddThew(other.getAddThew());
        }
        if (other.hasAddDamage()) {
          setAddDamage(other.getAddDamage());
        }
        if (other.hasAddSkin()) {
          setAddSkin(other.getAddSkin());
        }
        if (other.hasAddPower()) {
          setAddPower(other.getAddPower());
        }
        if (equipBuilder_ == null) {
          if (!other.equip_.isEmpty()) {
            if (equip_.isEmpty()) {
              equip_ = other.equip_;
              bitField1_ = (bitField1_ & ~0x00000002);
            } else {
              ensureEquipIsMutable();
              equip_.addAll(other.equip_);
            }
            onChanged();
          }
        } else {
          if (!other.equip_.isEmpty()) {
            if (equipBuilder_.isEmpty()) {
              equipBuilder_.dispose();
              equipBuilder_ = null;
              equip_ = other.equip_;
              bitField1_ = (bitField1_ & ~0x00000002);
              equipBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getEquipFieldBuilder() : null;
            } else {
              equipBuilder_.addAllMessages(other.equip_);
            }
          }
        }
        if (other.hasHideHat()) {
          setHideHat(other.getHideHat());
        }
        if (other.hasHideGlasses()) {
          setHideGlasses(other.getHideGlasses());
        }
        if (other.hasHideSuit()) {
          setHideSuit(other.getHideSuit());
        }
        if (other.hasBattleCount()) {
          setBattleCount(other.getBattleCount());
        }
        if (other.hasBattleRoomIdx()) {
          setBattleRoomIdx(other.getBattleRoomIdx());
        }
        if (other.hasYellowDmd()) {
          setYellowDmd(other.getYellowDmd());
        }
        if (other.hasYellowDmdYear()) {
          setYellowDmdYear(other.getYellowDmdYear());
        }
        if (other.hasYellowDmdLv()) {
          setYellowDmdLv(other.getYellowDmdLv());
        }
        if (other.hasDoubleexp()) {
          setDoubleexp(other.getDoubleexp());
        }
        if (other.hasStartPosX()) {
          setStartPosX(other.getStartPosX());
        }
        if (other.hasStartPosY()) {
          setStartPosY(other.getStartPosY());
        }
        if (other.hasLessLv5()) {
          setLessLv5(other.getLessLv5());
        }
        if (other.hasRoleTypeID()) {
          setRoleTypeID(other.getRoleTypeID());
        }
        if (other.hasGuildID()) {
          setGuildID(other.getGuildID());
        }
        if (other.hasGuildName()) {
          setGuildName(other.getGuildName());
        }
        if (other.hasGuildAttack()) {
          setGuildAttack(other.getGuildAttack());
        }
        if (other.hasGuildDefend()) {
          setGuildDefend(other.getGuildDefend());
        }
        if (other.hasGuildAgility()) {
          setGuildAgility(other.getGuildAgility());
        }
        if (other.hasGuildLuck()) {
          setGuildLuck(other.getGuildLuck());
        }
        if (other.hasGuildBlood()) {
          setGuildBlood(other.getGuildBlood());
        }
        if (other.hasGuildThew()) {
          setGuildThew(other.getGuildThew());
        }
        if (other.hasGuildPower()) {
          setGuildPower(other.getGuildPower());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasSessionId()) {
          
          return false;
        }
        if (!hasUserId()) {
          
          return false;
        }
        if (!hasCampId()) {
          
          return false;
        }
        if (!hasUserName()) {
          
          return false;
        }
        if (!hasGender()) {
          
          return false;
        }
        if (!hasLevel()) {
          
          return false;
        }
        if (!hasExp()) {
          
          return false;
        }
        if (!hasWinOdds()) {
          
          return false;
        }
        if (!hasWins()) {
          
          return false;
        }
        if (!hasRoomIdx()) {
          
          return false;
        }
        if (!hasMoveSpeed()) {
          
          return false;
        }
        if (!hasTool1()) {
          
          return false;
        }
        if (!hasTool2()) {
          
          return false;
        }
        if (!hasTool3()) {
          
          return false;
        }
        if (!hasAttack()) {
          
          return false;
        }
        if (!hasDefend()) {
          
          return false;
        }
        if (!hasAgility()) {
          
          return false;
        }
        if (!hasLuck()) {
          
          return false;
        }
        if (!hasBlood()) {
          
          return false;
        }
        if (!hasThew()) {
          
          return false;
        }
        if (!hasDamage()) {
          
          return false;
        }
        if (!hasSkin()) {
          
          return false;
        }
        if (!hasPower()) {
          
          return false;
        }
        if (!hasHideHat()) {
          
          return false;
        }
        if (!hasHideGlasses()) {
          
          return false;
        }
        if (!hasHideSuit()) {
          
          return false;
        }
        if (!hasBattleCount()) {
          
          return false;
        }
        if (!hasBattleRoomIdx()) {
          
          return false;
        }
        for (int i = 0; i < getEquipCount(); i++) {
          if (!getEquip(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              sessionId_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              userId_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              campId_ = input.readUInt32();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              userName_ = input.readBytes();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              gender_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              level_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              exp_ = input.readUInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              winOdds_ = input.readUInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              wins_ = input.readUInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              roomIdx_ = input.readUInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              startPos_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              moveSpeed_ = input.readUInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              tool1_ = input.readUInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              tool2_ = input.readUInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              tool3_ = input.readUInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00008000;
              attack_ = input.readUInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00010000;
              defend_ = input.readUInt32();
              break;
            }
            case 144: {
              bitField0_ |= 0x00020000;
              agility_ = input.readUInt32();
              break;
            }
            case 152: {
              bitField0_ |= 0x00040000;
              luck_ = input.readUInt32();
              break;
            }
            case 160: {
              bitField0_ |= 0x00080000;
              blood_ = input.readUInt32();
              break;
            }
            case 168: {
              bitField0_ |= 0x00100000;
              thew_ = input.readUInt32();
              break;
            }
            case 176: {
              bitField0_ |= 0x00200000;
              damage_ = input.readUInt32();
              break;
            }
            case 184: {
              bitField0_ |= 0x00400000;
              skin_ = input.readUInt32();
              break;
            }
            case 192: {
              bitField0_ |= 0x00800000;
              power_ = input.readUInt32();
              break;
            }
            case 200: {
              bitField0_ |= 0x01000000;
              addAttack_ = input.readUInt32();
              break;
            }
            case 208: {
              bitField0_ |= 0x02000000;
              addDefend_ = input.readUInt32();
              break;
            }
            case 216: {
              bitField0_ |= 0x04000000;
              addAgility_ = input.readUInt32();
              break;
            }
            case 224: {
              bitField0_ |= 0x08000000;
              addLuck_ = input.readUInt32();
              break;
            }
            case 232: {
              bitField0_ |= 0x10000000;
              addBlood_ = input.readUInt32();
              break;
            }
            case 240: {
              bitField0_ |= 0x20000000;
              addThew_ = input.readUInt32();
              break;
            }
            case 248: {
              bitField0_ |= 0x40000000;
              addDamage_ = input.readUInt32();
              break;
            }
            case 256: {
              bitField0_ |= 0x80000000;
              addSkin_ = input.readUInt32();
              break;
            }
            case 264: {
              bitField1_ |= 0x00000001;
              addPower_ = input.readUInt32();
              break;
            }
            case 282: {
              com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData.Builder subBuilder = com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addEquip(subBuilder.buildPartial());
              break;
            }
            case 288: {
              bitField1_ |= 0x00000004;
              hideHat_ = input.readBool();
              break;
            }
            case 296: {
              bitField1_ |= 0x00000008;
              hideGlasses_ = input.readBool();
              break;
            }
            case 304: {
              bitField1_ |= 0x00000010;
              hideSuit_ = input.readBool();
              break;
            }
            case 312: {
              bitField1_ |= 0x00000020;
              battleCount_ = input.readInt32();
              break;
            }
            case 320: {
              bitField1_ |= 0x00000040;
              battleRoomIdx_ = input.readUInt32();
              break;
            }
            case 328: {
              bitField1_ |= 0x00000080;
              yellowDmd_ = input.readBool();
              break;
            }
            case 336: {
              bitField1_ |= 0x00000100;
              yellowDmdYear_ = input.readBool();
              break;
            }
            case 344: {
              bitField1_ |= 0x00000200;
              yellowDmdLv_ = input.readInt32();
              break;
            }
            case 352: {
              bitField1_ |= 0x00000400;
              doubleexp_ = input.readBool();
              break;
            }
            case 360: {
              bitField1_ |= 0x00000800;
              startPosX_ = input.readInt32();
              break;
            }
            case 368: {
              bitField1_ |= 0x00001000;
              startPosY_ = input.readInt32();
              break;
            }
            case 376: {
              bitField1_ |= 0x00002000;
              lessLv5_ = input.readBool();
              break;
            }
            case 384: {
              bitField1_ |= 0x00004000;
              roleTypeID_ = input.readInt32();
              break;
            }
            case 392: {
              bitField1_ |= 0x00008000;
              guildID_ = input.readInt32();
              break;
            }
            case 402: {
              bitField1_ |= 0x00010000;
              guildName_ = input.readBytes();
              break;
            }
            case 480: {
              bitField1_ |= 0x00020000;
              guildAttack_ = input.readUInt32();
              break;
            }
            case 488: {
              bitField1_ |= 0x00040000;
              guildDefend_ = input.readUInt32();
              break;
            }
            case 496: {
              bitField1_ |= 0x00080000;
              guildAgility_ = input.readUInt32();
              break;
            }
            case 504: {
              bitField1_ |= 0x00100000;
              guildLuck_ = input.readUInt32();
              break;
            }
            case 512: {
              bitField1_ |= 0x00200000;
              guildBlood_ = input.readUInt32();
              break;
            }
            case 520: {
              bitField1_ |= 0x00400000;
              guildThew_ = input.readUInt32();
              break;
            }
            case 528: {
              bitField1_ |= 0x00800000;
              guildPower_ = input.readUInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      private int bitField1_;
      
      // required string sessionId = 1;
      private java.lang.Object sessionId_ = "";
      public boolean hasSessionId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getSessionId() {
        java.lang.Object ref = sessionId_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          sessionId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setSessionId(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        sessionId_ = value;
        onChanged();
        return this;
      }
      public Builder clearSessionId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        sessionId_ = getDefaultInstance().getSessionId();
        onChanged();
        return this;
      }
      void setSessionId(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        sessionId_ = value;
        onChanged();
      }
      
      // required string userId = 2;
      private java.lang.Object userId_ = "";
      public boolean hasUserId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getUserId() {
        java.lang.Object ref = userId_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          userId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setUserId(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        userId_ = value;
        onChanged();
        return this;
      }
      public Builder clearUserId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        userId_ = getDefaultInstance().getUserId();
        onChanged();
        return this;
      }
      void setUserId(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        userId_ = value;
        onChanged();
      }
      
      // required uint32 campId = 3;
      private int campId_ ;
      public boolean hasCampId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getCampId() {
        return campId_;
      }
      public Builder setCampId(int value) {
        bitField0_ |= 0x00000004;
        campId_ = value;
        onChanged();
        return this;
      }
      public Builder clearCampId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        campId_ = 0;
        onChanged();
        return this;
      }
      
      // required string userName = 4;
      private java.lang.Object userName_ = "";
      public boolean hasUserName() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public String getUserName() {
        java.lang.Object ref = userName_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          userName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setUserName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        userName_ = value;
        onChanged();
        return this;
      }
      public Builder clearUserName() {
        bitField0_ = (bitField0_ & ~0x00000008);
        userName_ = getDefaultInstance().getUserName();
        onChanged();
        return this;
      }
      void setUserName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000008;
        userName_ = value;
        onChanged();
      }
      
      // required uint32 gender = 5;
      private int gender_ ;
      public boolean hasGender() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getGender() {
        return gender_;
      }
      public Builder setGender(int value) {
        bitField0_ |= 0x00000010;
        gender_ = value;
        onChanged();
        return this;
      }
      public Builder clearGender() {
        bitField0_ = (bitField0_ & ~0x00000010);
        gender_ = 0;
        onChanged();
        return this;
      }
      
      // required uint32 level = 6;
      private int level_ ;
      public boolean hasLevel() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getLevel() {
        return level_;
      }
      public Builder setLevel(int value) {
        bitField0_ |= 0x00000020;
        level_ = value;
        onChanged();
        return this;
      }
      public Builder clearLevel() {
        bitField0_ = (bitField0_ & ~0x00000020);
        level_ = 0;
        onChanged();
        return this;
      }
      
      // required uint32 exp = 7;
      private int exp_ ;
      public boolean hasExp() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public int getExp() {
        return exp_;
      }
      public Builder setExp(int value) {
        bitField0_ |= 0x00000040;
        exp_ = value;
        onChanged();
        return this;
      }
      public Builder clearExp() {
        bitField0_ = (bitField0_ & ~0x00000040);
        exp_ = 0;
        onChanged();
        return this;
      }
      
      // required uint32 winOdds = 8;
      private int winOdds_ ;
      public boolean hasWinOdds() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public int getWinOdds() {
        return winOdds_;
      }
      public Builder setWinOdds(int value) {
        bitField0_ |= 0x00000080;
        winOdds_ = value;
        onChanged();
        return this;
      }
      public Builder clearWinOdds() {
        bitField0_ = (bitField0_ & ~0x00000080);
        winOdds_ = 0;
        onChanged();
        return this;
      }
      
      // required uint32 wins = 9;
      private int wins_ ;
      public boolean hasWins() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public int getWins() {
        return wins_;
      }
      public Builder setWins(int value) {
        bitField0_ |= 0x00000100;
        wins_ = value;
        onChanged();
        return this;
      }
      public Builder clearWins() {
        bitField0_ = (bitField0_ & ~0x00000100);
        wins_ = 0;
        onChanged();
        return this;
      }
      
      // required uint32 roomIdx = 10;
      private int roomIdx_ ;
      public boolean hasRoomIdx() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public int getRoomIdx() {
        return roomIdx_;
      }
      public Builder setRoomIdx(int value) {
        bitField0_ |= 0x00000200;
        roomIdx_ = value;
        onChanged();
        return this;
      }
      public Builder clearRoomIdx() {
        bitField0_ = (bitField0_ & ~0x00000200);
        roomIdx_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 startPos = 11 [default = 0];
      private int startPos_ ;
      public boolean hasStartPos() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public int getStartPos() {
        return startPos_;
      }
      public Builder setStartPos(int value) {
        bitField0_ |= 0x00000400;
        startPos_ = value;
        onChanged();
        return this;
      }
      public Builder clearStartPos() {
        bitField0_ = (bitField0_ & ~0x00000400);
        startPos_ = 0;
        onChanged();
        return this;
      }
      
      // required uint32 moveSpeed = 12;
      private int moveSpeed_ ;
      public boolean hasMoveSpeed() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      public int getMoveSpeed() {
        return moveSpeed_;
      }
      public Builder setMoveSpeed(int value) {
        bitField0_ |= 0x00000800;
        moveSpeed_ = value;
        onChanged();
        return this;
      }
      public Builder clearMoveSpeed() {
        bitField0_ = (bitField0_ & ~0x00000800);
        moveSpeed_ = 0;
        onChanged();
        return this;
      }
      
      // required uint32 tool1 = 13;
      private int tool1_ ;
      public boolean hasTool1() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      public int getTool1() {
        return tool1_;
      }
      public Builder setTool1(int value) {
        bitField0_ |= 0x00001000;
        tool1_ = value;
        onChanged();
        return this;
      }
      public Builder clearTool1() {
        bitField0_ = (bitField0_ & ~0x00001000);
        tool1_ = 0;
        onChanged();
        return this;
      }
      
      // required uint32 tool2 = 14;
      private int tool2_ ;
      public boolean hasTool2() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      public int getTool2() {
        return tool2_;
      }
      public Builder setTool2(int value) {
        bitField0_ |= 0x00002000;
        tool2_ = value;
        onChanged();
        return this;
      }
      public Builder clearTool2() {
        bitField0_ = (bitField0_ & ~0x00002000);
        tool2_ = 0;
        onChanged();
        return this;
      }
      
      // required uint32 tool3 = 15;
      private int tool3_ ;
      public boolean hasTool3() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      public int getTool3() {
        return tool3_;
      }
      public Builder setTool3(int value) {
        bitField0_ |= 0x00004000;
        tool3_ = value;
        onChanged();
        return this;
      }
      public Builder clearTool3() {
        bitField0_ = (bitField0_ & ~0x00004000);
        tool3_ = 0;
        onChanged();
        return this;
      }
      
      // required uint32 attack = 16;
      private int attack_ ;
      public boolean hasAttack() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      public int getAttack() {
        return attack_;
      }
      public Builder setAttack(int value) {
        bitField0_ |= 0x00008000;
        attack_ = value;
        onChanged();
        return this;
      }
      public Builder clearAttack() {
        bitField0_ = (bitField0_ & ~0x00008000);
        attack_ = 0;
        onChanged();
        return this;
      }
      
      // required uint32 defend = 17;
      private int defend_ ;
      public boolean hasDefend() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      public int getDefend() {
        return defend_;
      }
      public Builder setDefend(int value) {
        bitField0_ |= 0x00010000;
        defend_ = value;
        onChanged();
        return this;
      }
      public Builder clearDefend() {
        bitField0_ = (bitField0_ & ~0x00010000);
        defend_ = 0;
        onChanged();
        return this;
      }
      
      // required uint32 agility = 18;
      private int agility_ ;
      public boolean hasAgility() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      public int getAgility() {
        return agility_;
      }
      public Builder setAgility(int value) {
        bitField0_ |= 0x00020000;
        agility_ = value;
        onChanged();
        return this;
      }
      public Builder clearAgility() {
        bitField0_ = (bitField0_ & ~0x00020000);
        agility_ = 0;
        onChanged();
        return this;
      }
      
      // required uint32 luck = 19;
      private int luck_ ;
      public boolean hasLuck() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      public int getLuck() {
        return luck_;
      }
      public Builder setLuck(int value) {
        bitField0_ |= 0x00040000;
        luck_ = value;
        onChanged();
        return this;
      }
      public Builder clearLuck() {
        bitField0_ = (bitField0_ & ~0x00040000);
        luck_ = 0;
        onChanged();
        return this;
      }
      
      // required uint32 blood = 20;
      private int blood_ ;
      public boolean hasBlood() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      public int getBlood() {
        return blood_;
      }
      public Builder setBlood(int value) {
        bitField0_ |= 0x00080000;
        blood_ = value;
        onChanged();
        return this;
      }
      public Builder clearBlood() {
        bitField0_ = (bitField0_ & ~0x00080000);
        blood_ = 0;
        onChanged();
        return this;
      }
      
      // required uint32 thew = 21;
      private int thew_ ;
      public boolean hasThew() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      public int getThew() {
        return thew_;
      }
      public Builder setThew(int value) {
        bitField0_ |= 0x00100000;
        thew_ = value;
        onChanged();
        return this;
      }
      public Builder clearThew() {
        bitField0_ = (bitField0_ & ~0x00100000);
        thew_ = 0;
        onChanged();
        return this;
      }
      
      // required uint32 damage = 22;
      private int damage_ ;
      public boolean hasDamage() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      public int getDamage() {
        return damage_;
      }
      public Builder setDamage(int value) {
        bitField0_ |= 0x00200000;
        damage_ = value;
        onChanged();
        return this;
      }
      public Builder clearDamage() {
        bitField0_ = (bitField0_ & ~0x00200000);
        damage_ = 0;
        onChanged();
        return this;
      }
      
      // required uint32 skin = 23;
      private int skin_ ;
      public boolean hasSkin() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      public int getSkin() {
        return skin_;
      }
      public Builder setSkin(int value) {
        bitField0_ |= 0x00400000;
        skin_ = value;
        onChanged();
        return this;
      }
      public Builder clearSkin() {
        bitField0_ = (bitField0_ & ~0x00400000);
        skin_ = 0;
        onChanged();
        return this;
      }
      
      // required uint32 power = 24;
      private int power_ ;
      public boolean hasPower() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      public int getPower() {
        return power_;
      }
      public Builder setPower(int value) {
        bitField0_ |= 0x00800000;
        power_ = value;
        onChanged();
        return this;
      }
      public Builder clearPower() {
        bitField0_ = (bitField0_ & ~0x00800000);
        power_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 addAttack = 25;
      private int addAttack_ ;
      public boolean hasAddAttack() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      public int getAddAttack() {
        return addAttack_;
      }
      public Builder setAddAttack(int value) {
        bitField0_ |= 0x01000000;
        addAttack_ = value;
        onChanged();
        return this;
      }
      public Builder clearAddAttack() {
        bitField0_ = (bitField0_ & ~0x01000000);
        addAttack_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 addDefend = 26;
      private int addDefend_ ;
      public boolean hasAddDefend() {
        return ((bitField0_ & 0x02000000) == 0x02000000);
      }
      public int getAddDefend() {
        return addDefend_;
      }
      public Builder setAddDefend(int value) {
        bitField0_ |= 0x02000000;
        addDefend_ = value;
        onChanged();
        return this;
      }
      public Builder clearAddDefend() {
        bitField0_ = (bitField0_ & ~0x02000000);
        addDefend_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 addAgility = 27;
      private int addAgility_ ;
      public boolean hasAddAgility() {
        return ((bitField0_ & 0x04000000) == 0x04000000);
      }
      public int getAddAgility() {
        return addAgility_;
      }
      public Builder setAddAgility(int value) {
        bitField0_ |= 0x04000000;
        addAgility_ = value;
        onChanged();
        return this;
      }
      public Builder clearAddAgility() {
        bitField0_ = (bitField0_ & ~0x04000000);
        addAgility_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 addLuck = 28;
      private int addLuck_ ;
      public boolean hasAddLuck() {
        return ((bitField0_ & 0x08000000) == 0x08000000);
      }
      public int getAddLuck() {
        return addLuck_;
      }
      public Builder setAddLuck(int value) {
        bitField0_ |= 0x08000000;
        addLuck_ = value;
        onChanged();
        return this;
      }
      public Builder clearAddLuck() {
        bitField0_ = (bitField0_ & ~0x08000000);
        addLuck_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 addBlood = 29;
      private int addBlood_ ;
      public boolean hasAddBlood() {
        return ((bitField0_ & 0x10000000) == 0x10000000);
      }
      public int getAddBlood() {
        return addBlood_;
      }
      public Builder setAddBlood(int value) {
        bitField0_ |= 0x10000000;
        addBlood_ = value;
        onChanged();
        return this;
      }
      public Builder clearAddBlood() {
        bitField0_ = (bitField0_ & ~0x10000000);
        addBlood_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 addThew = 30;
      private int addThew_ ;
      public boolean hasAddThew() {
        return ((bitField0_ & 0x20000000) == 0x20000000);
      }
      public int getAddThew() {
        return addThew_;
      }
      public Builder setAddThew(int value) {
        bitField0_ |= 0x20000000;
        addThew_ = value;
        onChanged();
        return this;
      }
      public Builder clearAddThew() {
        bitField0_ = (bitField0_ & ~0x20000000);
        addThew_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 addDamage = 31;
      private int addDamage_ ;
      public boolean hasAddDamage() {
        return ((bitField0_ & 0x40000000) == 0x40000000);
      }
      public int getAddDamage() {
        return addDamage_;
      }
      public Builder setAddDamage(int value) {
        bitField0_ |= 0x40000000;
        addDamage_ = value;
        onChanged();
        return this;
      }
      public Builder clearAddDamage() {
        bitField0_ = (bitField0_ & ~0x40000000);
        addDamage_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 addSkin = 32;
      private int addSkin_ ;
      public boolean hasAddSkin() {
        return ((bitField0_ & 0x80000000) == 0x80000000);
      }
      public int getAddSkin() {
        return addSkin_;
      }
      public Builder setAddSkin(int value) {
        bitField0_ |= 0x80000000;
        addSkin_ = value;
        onChanged();
        return this;
      }
      public Builder clearAddSkin() {
        bitField0_ = (bitField0_ & ~0x80000000);
        addSkin_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 addPower = 33;
      private int addPower_ ;
      public boolean hasAddPower() {
        return ((bitField1_ & 0x00000001) == 0x00000001);
      }
      public int getAddPower() {
        return addPower_;
      }
      public Builder setAddPower(int value) {
        bitField1_ |= 0x00000001;
        addPower_ = value;
        onChanged();
        return this;
      }
      public Builder clearAddPower() {
        bitField1_ = (bitField1_ & ~0x00000001);
        addPower_ = 0;
        onChanged();
        return this;
      }
      
      // repeated .com.xinqihd.sns.gameserver.proto.PropData equip = 35;
      private java.util.List<com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData> equip_ =
        java.util.Collections.emptyList();
      private void ensureEquipIsMutable() {
        if (!((bitField1_ & 0x00000002) == 0x00000002)) {
          equip_ = new java.util.ArrayList<com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData>(equip_);
          bitField1_ |= 0x00000002;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData, com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData.Builder, com.xinqihd.sns.gameserver.proto.XinqiPropData.PropDataOrBuilder> equipBuilder_;
      
      public java.util.List<com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData> getEquipList() {
        if (equipBuilder_ == null) {
          return java.util.Collections.unmodifiableList(equip_);
        } else {
          return equipBuilder_.getMessageList();
        }
      }
      public int getEquipCount() {
        if (equipBuilder_ == null) {
          return equip_.size();
        } else {
          return equipBuilder_.getCount();
        }
      }
      public com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData getEquip(int index) {
        if (equipBuilder_ == null) {
          return equip_.get(index);
        } else {
          return equipBuilder_.getMessage(index);
        }
      }
      public Builder setEquip(
          int index, com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData value) {
        if (equipBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEquipIsMutable();
          equip_.set(index, value);
          onChanged();
        } else {
          equipBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setEquip(
          int index, com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData.Builder builderForValue) {
        if (equipBuilder_ == null) {
          ensureEquipIsMutable();
          equip_.set(index, builderForValue.build());
          onChanged();
        } else {
          equipBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addEquip(com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData value) {
        if (equipBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEquipIsMutable();
          equip_.add(value);
          onChanged();
        } else {
          equipBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addEquip(
          int index, com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData value) {
        if (equipBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEquipIsMutable();
          equip_.add(index, value);
          onChanged();
        } else {
          equipBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addEquip(
          com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData.Builder builderForValue) {
        if (equipBuilder_ == null) {
          ensureEquipIsMutable();
          equip_.add(builderForValue.build());
          onChanged();
        } else {
          equipBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addEquip(
          int index, com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData.Builder builderForValue) {
        if (equipBuilder_ == null) {
          ensureEquipIsMutable();
          equip_.add(index, builderForValue.build());
          onChanged();
        } else {
          equipBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllEquip(
          java.lang.Iterable<? extends com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData> values) {
        if (equipBuilder_ == null) {
          ensureEquipIsMutable();
          super.addAll(values, equip_);
          onChanged();
        } else {
          equipBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearEquip() {
        if (equipBuilder_ == null) {
          equip_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00000002);
          onChanged();
        } else {
          equipBuilder_.clear();
        }
        return this;
      }
      public Builder removeEquip(int index) {
        if (equipBuilder_ == null) {
          ensureEquipIsMutable();
          equip_.remove(index);
          onChanged();
        } else {
          equipBuilder_.remove(index);
        }
        return this;
      }
      public com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData.Builder getEquipBuilder(
          int index) {
        return getEquipFieldBuilder().getBuilder(index);
      }
      public com.xinqihd.sns.gameserver.proto.XinqiPropData.PropDataOrBuilder getEquipOrBuilder(
          int index) {
        if (equipBuilder_ == null) {
          return equip_.get(index);  } else {
          return equipBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends com.xinqihd.sns.gameserver.proto.XinqiPropData.PropDataOrBuilder> 
           getEquipOrBuilderList() {
        if (equipBuilder_ != null) {
          return equipBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(equip_);
        }
      }
      public com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData.Builder addEquipBuilder() {
        return getEquipFieldBuilder().addBuilder(
            com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData.getDefaultInstance());
      }
      public com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData.Builder addEquipBuilder(
          int index) {
        return getEquipFieldBuilder().addBuilder(
            index, com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData.getDefaultInstance());
      }
      public java.util.List<com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData.Builder> 
           getEquipBuilderList() {
        return getEquipFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData, com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData.Builder, com.xinqihd.sns.gameserver.proto.XinqiPropData.PropDataOrBuilder> 
          getEquipFieldBuilder() {
        if (equipBuilder_ == null) {
          equipBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData, com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData.Builder, com.xinqihd.sns.gameserver.proto.XinqiPropData.PropDataOrBuilder>(
                  equip_,
                  ((bitField1_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          equip_ = null;
        }
        return equipBuilder_;
      }
      
      // required bool hideHat = 36;
      private boolean hideHat_ ;
      public boolean hasHideHat() {
        return ((bitField1_ & 0x00000004) == 0x00000004);
      }
      public boolean getHideHat() {
        return hideHat_;
      }
      public Builder setHideHat(boolean value) {
        bitField1_ |= 0x00000004;
        hideHat_ = value;
        onChanged();
        return this;
      }
      public Builder clearHideHat() {
        bitField1_ = (bitField1_ & ~0x00000004);
        hideHat_ = false;
        onChanged();
        return this;
      }
      
      // required bool hideGlasses = 37;
      private boolean hideGlasses_ ;
      public boolean hasHideGlasses() {
        return ((bitField1_ & 0x00000008) == 0x00000008);
      }
      public boolean getHideGlasses() {
        return hideGlasses_;
      }
      public Builder setHideGlasses(boolean value) {
        bitField1_ |= 0x00000008;
        hideGlasses_ = value;
        onChanged();
        return this;
      }
      public Builder clearHideGlasses() {
        bitField1_ = (bitField1_ & ~0x00000008);
        hideGlasses_ = false;
        onChanged();
        return this;
      }
      
      // required bool hideSuit = 38;
      private boolean hideSuit_ ;
      public boolean hasHideSuit() {
        return ((bitField1_ & 0x00000010) == 0x00000010);
      }
      public boolean getHideSuit() {
        return hideSuit_;
      }
      public Builder setHideSuit(boolean value) {
        bitField1_ |= 0x00000010;
        hideSuit_ = value;
        onChanged();
        return this;
      }
      public Builder clearHideSuit() {
        bitField1_ = (bitField1_ & ~0x00000010);
        hideSuit_ = false;
        onChanged();
        return this;
      }
      
      // required int32 battleCount = 39;
      private int battleCount_ ;
      public boolean hasBattleCount() {
        return ((bitField1_ & 0x00000020) == 0x00000020);
      }
      public int getBattleCount() {
        return battleCount_;
      }
      public Builder setBattleCount(int value) {
        bitField1_ |= 0x00000020;
        battleCount_ = value;
        onChanged();
        return this;
      }
      public Builder clearBattleCount() {
        bitField1_ = (bitField1_ & ~0x00000020);
        battleCount_ = 0;
        onChanged();
        return this;
      }
      
      // required uint32 battleRoomIdx = 40;
      private int battleRoomIdx_ ;
      public boolean hasBattleRoomIdx() {
        return ((bitField1_ & 0x00000040) == 0x00000040);
      }
      public int getBattleRoomIdx() {
        return battleRoomIdx_;
      }
      public Builder setBattleRoomIdx(int value) {
        bitField1_ |= 0x00000040;
        battleRoomIdx_ = value;
        onChanged();
        return this;
      }
      public Builder clearBattleRoomIdx() {
        bitField1_ = (bitField1_ & ~0x00000040);
        battleRoomIdx_ = 0;
        onChanged();
        return this;
      }
      
      // optional bool yellowDmd = 41 [default = false];
      private boolean yellowDmd_ ;
      public boolean hasYellowDmd() {
        return ((bitField1_ & 0x00000080) == 0x00000080);
      }
      public boolean getYellowDmd() {
        return yellowDmd_;
      }
      public Builder setYellowDmd(boolean value) {
        bitField1_ |= 0x00000080;
        yellowDmd_ = value;
        onChanged();
        return this;
      }
      public Builder clearYellowDmd() {
        bitField1_ = (bitField1_ & ~0x00000080);
        yellowDmd_ = false;
        onChanged();
        return this;
      }
      
      // optional bool yellowDmdYear = 42 [default = false];
      private boolean yellowDmdYear_ ;
      public boolean hasYellowDmdYear() {
        return ((bitField1_ & 0x00000100) == 0x00000100);
      }
      public boolean getYellowDmdYear() {
        return yellowDmdYear_;
      }
      public Builder setYellowDmdYear(boolean value) {
        bitField1_ |= 0x00000100;
        yellowDmdYear_ = value;
        onChanged();
        return this;
      }
      public Builder clearYellowDmdYear() {
        bitField1_ = (bitField1_ & ~0x00000100);
        yellowDmdYear_ = false;
        onChanged();
        return this;
      }
      
      // optional int32 yellowDmdLv = 43 [default = 0];
      private int yellowDmdLv_ ;
      public boolean hasYellowDmdLv() {
        return ((bitField1_ & 0x00000200) == 0x00000200);
      }
      public int getYellowDmdLv() {
        return yellowDmdLv_;
      }
      public Builder setYellowDmdLv(int value) {
        bitField1_ |= 0x00000200;
        yellowDmdLv_ = value;
        onChanged();
        return this;
      }
      public Builder clearYellowDmdLv() {
        bitField1_ = (bitField1_ & ~0x00000200);
        yellowDmdLv_ = 0;
        onChanged();
        return this;
      }
      
      // optional bool doubleexp = 44 [default = false];
      private boolean doubleexp_ ;
      public boolean hasDoubleexp() {
        return ((bitField1_ & 0x00000400) == 0x00000400);
      }
      public boolean getDoubleexp() {
        return doubleexp_;
      }
      public Builder setDoubleexp(boolean value) {
        bitField1_ |= 0x00000400;
        doubleexp_ = value;
        onChanged();
        return this;
      }
      public Builder clearDoubleexp() {
        bitField1_ = (bitField1_ & ~0x00000400);
        doubleexp_ = false;
        onChanged();
        return this;
      }
      
      // optional int32 startPosX = 45 [default = 0];
      private int startPosX_ ;
      public boolean hasStartPosX() {
        return ((bitField1_ & 0x00000800) == 0x00000800);
      }
      public int getStartPosX() {
        return startPosX_;
      }
      public Builder setStartPosX(int value) {
        bitField1_ |= 0x00000800;
        startPosX_ = value;
        onChanged();
        return this;
      }
      public Builder clearStartPosX() {
        bitField1_ = (bitField1_ & ~0x00000800);
        startPosX_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 startPosY = 46 [default = 0];
      private int startPosY_ ;
      public boolean hasStartPosY() {
        return ((bitField1_ & 0x00001000) == 0x00001000);
      }
      public int getStartPosY() {
        return startPosY_;
      }
      public Builder setStartPosY(int value) {
        bitField1_ |= 0x00001000;
        startPosY_ = value;
        onChanged();
        return this;
      }
      public Builder clearStartPosY() {
        bitField1_ = (bitField1_ & ~0x00001000);
        startPosY_ = 0;
        onChanged();
        return this;
      }
      
      // optional bool lessLv5 = 47 [default = false];
      private boolean lessLv5_ ;
      public boolean hasLessLv5() {
        return ((bitField1_ & 0x00002000) == 0x00002000);
      }
      public boolean getLessLv5() {
        return lessLv5_;
      }
      public Builder setLessLv5(boolean value) {
        bitField1_ |= 0x00002000;
        lessLv5_ = value;
        onChanged();
        return this;
      }
      public Builder clearLessLv5() {
        bitField1_ = (bitField1_ & ~0x00002000);
        lessLv5_ = false;
        onChanged();
        return this;
      }
      
      // optional int32 roleTypeID = 48 [default = 0];
      private int roleTypeID_ ;
      public boolean hasRoleTypeID() {
        return ((bitField1_ & 0x00004000) == 0x00004000);
      }
      public int getRoleTypeID() {
        return roleTypeID_;
      }
      public Builder setRoleTypeID(int value) {
        bitField1_ |= 0x00004000;
        roleTypeID_ = value;
        onChanged();
        return this;
      }
      public Builder clearRoleTypeID() {
        bitField1_ = (bitField1_ & ~0x00004000);
        roleTypeID_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 guildID = 49 [default = 0];
      private int guildID_ ;
      public boolean hasGuildID() {
        return ((bitField1_ & 0x00008000) == 0x00008000);
      }
      public int getGuildID() {
        return guildID_;
      }
      public Builder setGuildID(int value) {
        bitField1_ |= 0x00008000;
        guildID_ = value;
        onChanged();
        return this;
      }
      public Builder clearGuildID() {
        bitField1_ = (bitField1_ & ~0x00008000);
        guildID_ = 0;
        onChanged();
        return this;
      }
      
      // optional string guildName = 50 [default = ""];
      private java.lang.Object guildName_ = "";
      public boolean hasGuildName() {
        return ((bitField1_ & 0x00010000) == 0x00010000);
      }
      public String getGuildName() {
        java.lang.Object ref = guildName_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          guildName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setGuildName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00010000;
        guildName_ = value;
        onChanged();
        return this;
      }
      public Builder clearGuildName() {
        bitField1_ = (bitField1_ & ~0x00010000);
        guildName_ = getDefaultInstance().getGuildName();
        onChanged();
        return this;
      }
      void setGuildName(com.google.protobuf.ByteString value) {
        bitField1_ |= 0x00010000;
        guildName_ = value;
        onChanged();
      }
      
      // optional uint32 guildAttack = 60;
      private int guildAttack_ ;
      public boolean hasGuildAttack() {
        return ((bitField1_ & 0x00020000) == 0x00020000);
      }
      public int getGuildAttack() {
        return guildAttack_;
      }
      public Builder setGuildAttack(int value) {
        bitField1_ |= 0x00020000;
        guildAttack_ = value;
        onChanged();
        return this;
      }
      public Builder clearGuildAttack() {
        bitField1_ = (bitField1_ & ~0x00020000);
        guildAttack_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 guildDefend = 61;
      private int guildDefend_ ;
      public boolean hasGuildDefend() {
        return ((bitField1_ & 0x00040000) == 0x00040000);
      }
      public int getGuildDefend() {
        return guildDefend_;
      }
      public Builder setGuildDefend(int value) {
        bitField1_ |= 0x00040000;
        guildDefend_ = value;
        onChanged();
        return this;
      }
      public Builder clearGuildDefend() {
        bitField1_ = (bitField1_ & ~0x00040000);
        guildDefend_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 guildAgility = 62;
      private int guildAgility_ ;
      public boolean hasGuildAgility() {
        return ((bitField1_ & 0x00080000) == 0x00080000);
      }
      public int getGuildAgility() {
        return guildAgility_;
      }
      public Builder setGuildAgility(int value) {
        bitField1_ |= 0x00080000;
        guildAgility_ = value;
        onChanged();
        return this;
      }
      public Builder clearGuildAgility() {
        bitField1_ = (bitField1_ & ~0x00080000);
        guildAgility_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 guildLuck = 63;
      private int guildLuck_ ;
      public boolean hasGuildLuck() {
        return ((bitField1_ & 0x00100000) == 0x00100000);
      }
      public int getGuildLuck() {
        return guildLuck_;
      }
      public Builder setGuildLuck(int value) {
        bitField1_ |= 0x00100000;
        guildLuck_ = value;
        onChanged();
        return this;
      }
      public Builder clearGuildLuck() {
        bitField1_ = (bitField1_ & ~0x00100000);
        guildLuck_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 guildBlood = 64;
      private int guildBlood_ ;
      public boolean hasGuildBlood() {
        return ((bitField1_ & 0x00200000) == 0x00200000);
      }
      public int getGuildBlood() {
        return guildBlood_;
      }
      public Builder setGuildBlood(int value) {
        bitField1_ |= 0x00200000;
        guildBlood_ = value;
        onChanged();
        return this;
      }
      public Builder clearGuildBlood() {
        bitField1_ = (bitField1_ & ~0x00200000);
        guildBlood_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 guildThew = 65;
      private int guildThew_ ;
      public boolean hasGuildThew() {
        return ((bitField1_ & 0x00400000) == 0x00400000);
      }
      public int getGuildThew() {
        return guildThew_;
      }
      public Builder setGuildThew(int value) {
        bitField1_ |= 0x00400000;
        guildThew_ = value;
        onChanged();
        return this;
      }
      public Builder clearGuildThew() {
        bitField1_ = (bitField1_ & ~0x00400000);
        guildThew_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 guildPower = 66;
      private int guildPower_ ;
      public boolean hasGuildPower() {
        return ((bitField1_ & 0x00800000) == 0x00800000);
      }
      public int getGuildPower() {
        return guildPower_;
      }
      public Builder setGuildPower(int value) {
        bitField1_ |= 0x00800000;
        guildPower_ = value;
        onChanged();
        return this;
      }
      public Builder clearGuildPower() {
        bitField1_ = (bitField1_ & ~0x00800000);
        guildPower_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.xinqihd.sns.gameserver.proto.RoleInfo)
    }
    
    static {
      defaultInstance = new RoleInfo(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.xinqihd.sns.gameserver.proto.RoleInfo)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_xinqihd_sns_gameserver_proto_RoleInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_xinqihd_sns_gameserver_proto_RoleInfo_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016RoleInfo.proto\022 com.xinqihd.sns.gamese" +
      "rver.proto\032\016PropData.proto\"\310\010\n\010RoleInfo\022" +
      "\021\n\tsessionId\030\001 \002(\t\022\016\n\006userId\030\002 \002(\t\022\016\n\006ca" +
      "mpId\030\003 \002(\r\022\020\n\010userName\030\004 \002(\t\022\016\n\006gender\030\005" +
      " \002(\r\022\r\n\005level\030\006 \002(\r\022\013\n\003exp\030\007 \002(\r\022\017\n\007winO" +
      "dds\030\010 \002(\r\022\014\n\004wins\030\t \002(\r\022\017\n\007roomIdx\030\n \002(\r" +
      "\022\023\n\010startPos\030\013 \001(\005:\0010\022\021\n\tmoveSpeed\030\014 \002(\r" +
      "\022\r\n\005tool1\030\r \002(\r\022\r\n\005tool2\030\016 \002(\r\022\r\n\005tool3\030" +
      "\017 \002(\r\022\016\n\006attack\030\020 \002(\r\022\016\n\006defend\030\021 \002(\r\022\017\n" +
      "\007agility\030\022 \002(\r\022\014\n\004luck\030\023 \002(\r\022\r\n\005blood\030\024 ",
      "\002(\r\022\014\n\004thew\030\025 \002(\r\022\016\n\006damage\030\026 \002(\r\022\014\n\004ski" +
      "n\030\027 \002(\r\022\r\n\005power\030\030 \002(\r\022\021\n\taddAttack\030\031 \001(" +
      "\r\022\021\n\taddDefend\030\032 \001(\r\022\022\n\naddAgility\030\033 \001(\r" +
      "\022\017\n\007addLuck\030\034 \001(\r\022\020\n\010addBlood\030\035 \001(\r\022\017\n\007a" +
      "ddThew\030\036 \001(\r\022\021\n\taddDamage\030\037 \001(\r\022\017\n\007addSk" +
      "in\030  \001(\r\022\020\n\010addPower\030! \001(\r\0229\n\005equip\030# \003(" +
      "\0132*.com.xinqihd.sns.gameserver.proto.Pro" +
      "pData\022\017\n\007hideHat\030$ \002(\010\022\023\n\013hideGlasses\030% " +
      "\002(\010\022\020\n\010hideSuit\030& \002(\010\022\023\n\013battleCount\030\' \002" +
      "(\005\022\025\n\rbattleRoomIdx\030( \002(\r\022\030\n\tyellowDmd\030)",
      " \001(\010:\005false\022\034\n\ryellowDmdYear\030* \001(\010:\005fals" +
      "e\022\026\n\013yellowDmdLv\030+ \001(\005:\0010\022\030\n\tdoubleexp\030," +
      " \001(\010:\005false\022\024\n\tstartPosX\030- \001(\005:\0010\022\024\n\tsta" +
      "rtPosY\030. \001(\005:\0010\022\026\n\007lessLv5\030/ \001(\010:\005false\022" +
      "\025\n\nroleTypeID\0300 \001(\005:\0010\022\022\n\007guildID\0301 \001(\005:" +
      "\0010\022\023\n\tguildName\0302 \001(\t:\000\022\023\n\013guildAttack\030<" +
      " \001(\r\022\023\n\013guildDefend\030= \001(\r\022\024\n\014guildAgilit" +
      "y\030> \001(\r\022\021\n\tguildLuck\030? \001(\r\022\022\n\nguildBlood" +
      "\030@ \001(\r\022\021\n\tguildThew\030A \001(\r\022\022\n\nguildPower\030" +
      "B \001(\rB\017B\rXinqiRoleInfo"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_xinqihd_sns_gameserver_proto_RoleInfo_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_xinqihd_sns_gameserver_proto_RoleInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_xinqihd_sns_gameserver_proto_RoleInfo_descriptor,
              new java.lang.String[] { "SessionId", "UserId", "CampId", "UserName", "Gender", "Level", "Exp", "WinOdds", "Wins", "RoomIdx", "StartPos", "MoveSpeed", "Tool1", "Tool2", "Tool3", "Attack", "Defend", "Agility", "Luck", "Blood", "Thew", "Damage", "Skin", "Power", "AddAttack", "AddDefend", "AddAgility", "AddLuck", "AddBlood", "AddThew", "AddDamage", "AddSkin", "AddPower", "Equip", "HideHat", "HideGlasses", "HideSuit", "BattleCount", "BattleRoomIdx", "YellowDmd", "YellowDmdYear", "YellowDmdLv", "Doubleexp", "StartPosX", "StartPosY", "LessLv5", "RoleTypeID", "GuildID", "GuildName", "GuildAttack", "GuildDefend", "GuildAgility", "GuildLuck", "GuildBlood", "GuildThew", "GuildPower", },
              com.xinqihd.sns.gameserver.proto.XinqiRoleInfo.RoleInfo.class,
              com.xinqihd.sns.gameserver.proto.XinqiRoleInfo.RoleInfo.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.xinqihd.sns.gameserver.proto.XinqiPropData.getDescriptor(),
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
