// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BceRobotOver.proto

package com.xinqihd.sns.gameserver.proto;

public final class XinqiBceRobotOver {
  private XinqiBceRobotOver() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface BceRobotOverOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // repeated string userId = 1;
    java.util.List<String> getUserIdList();
    int getUserIdCount();
    String getUserId(int index);
    
    // repeated bool dead = 2;
    java.util.List<java.lang.Boolean> getDeadList();
    int getDeadCount();
    boolean getDead(int index);
    
    // repeated int32 attackCounts = 3;
    java.util.List<java.lang.Integer> getAttackCountsList();
    int getAttackCountsCount();
    int getAttackCounts(int index);
    
    // repeated int32 hitCounts = 4;
    java.util.List<java.lang.Integer> getHitCountsList();
    int getHitCountsCount();
    int getHitCounts(int index);
    
    // repeated int32 damage = 5;
    java.util.List<java.lang.Integer> getDamageList();
    int getDamageCount();
    int getDamage(int index);
    
    // repeated int32 killCounts = 6;
    java.util.List<java.lang.Integer> getKillCountsList();
    int getKillCountsCount();
    int getKillCounts(int index);
    
    // repeated int32 userTools = 7;
    java.util.List<java.lang.Integer> getUserToolsList();
    int getUserToolsCount();
    int getUserTools(int index);
    
    // repeated int32 useSkill = 8;
    java.util.List<java.lang.Integer> getUseSkillList();
    int getUseSkillCount();
    int getUseSkill(int index);
  }
  public static final class BceRobotOver extends
      com.google.protobuf.GeneratedMessage
      implements BceRobotOverOrBuilder {
    // Use BceRobotOver.newBuilder() to construct.
    private BceRobotOver(Builder builder) {
      super(builder);
    }
    private BceRobotOver(boolean noInit) {}
    
    private static final BceRobotOver defaultInstance;
    public static BceRobotOver getDefaultInstance() {
      return defaultInstance;
    }
    
    public BceRobotOver getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.xinqihd.sns.gameserver.proto.XinqiBceRobotOver.internal_static_com_xinqihd_sns_gameserver_proto_BceRobotOver_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.xinqihd.sns.gameserver.proto.XinqiBceRobotOver.internal_static_com_xinqihd_sns_gameserver_proto_BceRobotOver_fieldAccessorTable;
    }
    
    // repeated string userId = 1;
    public static final int USERID_FIELD_NUMBER = 1;
    private com.google.protobuf.LazyStringList userId_;
    public java.util.List<String>
        getUserIdList() {
      return userId_;
    }
    public int getUserIdCount() {
      return userId_.size();
    }
    public String getUserId(int index) {
      return userId_.get(index);
    }
    
    // repeated bool dead = 2;
    public static final int DEAD_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Boolean> dead_;
    public java.util.List<java.lang.Boolean>
        getDeadList() {
      return dead_;
    }
    public int getDeadCount() {
      return dead_.size();
    }
    public boolean getDead(int index) {
      return dead_.get(index);
    }
    
    // repeated int32 attackCounts = 3;
    public static final int ATTACKCOUNTS_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> attackCounts_;
    public java.util.List<java.lang.Integer>
        getAttackCountsList() {
      return attackCounts_;
    }
    public int getAttackCountsCount() {
      return attackCounts_.size();
    }
    public int getAttackCounts(int index) {
      return attackCounts_.get(index);
    }
    
    // repeated int32 hitCounts = 4;
    public static final int HITCOUNTS_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> hitCounts_;
    public java.util.List<java.lang.Integer>
        getHitCountsList() {
      return hitCounts_;
    }
    public int getHitCountsCount() {
      return hitCounts_.size();
    }
    public int getHitCounts(int index) {
      return hitCounts_.get(index);
    }
    
    // repeated int32 damage = 5;
    public static final int DAMAGE_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> damage_;
    public java.util.List<java.lang.Integer>
        getDamageList() {
      return damage_;
    }
    public int getDamageCount() {
      return damage_.size();
    }
    public int getDamage(int index) {
      return damage_.get(index);
    }
    
    // repeated int32 killCounts = 6;
    public static final int KILLCOUNTS_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> killCounts_;
    public java.util.List<java.lang.Integer>
        getKillCountsList() {
      return killCounts_;
    }
    public int getKillCountsCount() {
      return killCounts_.size();
    }
    public int getKillCounts(int index) {
      return killCounts_.get(index);
    }
    
    // repeated int32 userTools = 7;
    public static final int USERTOOLS_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> userTools_;
    public java.util.List<java.lang.Integer>
        getUserToolsList() {
      return userTools_;
    }
    public int getUserToolsCount() {
      return userTools_.size();
    }
    public int getUserTools(int index) {
      return userTools_.get(index);
    }
    
    // repeated int32 useSkill = 8;
    public static final int USESKILL_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Integer> useSkill_;
    public java.util.List<java.lang.Integer>
        getUseSkillList() {
      return useSkill_;
    }
    public int getUseSkillCount() {
      return useSkill_.size();
    }
    public int getUseSkill(int index) {
      return useSkill_.get(index);
    }
    
    private void initFields() {
      userId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      dead_ = java.util.Collections.emptyList();;
      attackCounts_ = java.util.Collections.emptyList();;
      hitCounts_ = java.util.Collections.emptyList();;
      damage_ = java.util.Collections.emptyList();;
      killCounts_ = java.util.Collections.emptyList();;
      userTools_ = java.util.Collections.emptyList();;
      useSkill_ = java.util.Collections.emptyList();;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < userId_.size(); i++) {
        output.writeBytes(1, userId_.getByteString(i));
      }
      for (int i = 0; i < dead_.size(); i++) {
        output.writeBool(2, dead_.get(i));
      }
      for (int i = 0; i < attackCounts_.size(); i++) {
        output.writeInt32(3, attackCounts_.get(i));
      }
      for (int i = 0; i < hitCounts_.size(); i++) {
        output.writeInt32(4, hitCounts_.get(i));
      }
      for (int i = 0; i < damage_.size(); i++) {
        output.writeInt32(5, damage_.get(i));
      }
      for (int i = 0; i < killCounts_.size(); i++) {
        output.writeInt32(6, killCounts_.get(i));
      }
      for (int i = 0; i < userTools_.size(); i++) {
        output.writeInt32(7, userTools_.get(i));
      }
      for (int i = 0; i < useSkill_.size(); i++) {
        output.writeInt32(8, useSkill_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < userId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(userId_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getUserIdList().size();
      }
      {
        int dataSize = 0;
        dataSize = 1 * getDeadList().size();
        size += dataSize;
        size += 1 * getDeadList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < attackCounts_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(attackCounts_.get(i));
        }
        size += dataSize;
        size += 1 * getAttackCountsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < hitCounts_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(hitCounts_.get(i));
        }
        size += dataSize;
        size += 1 * getHitCountsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < damage_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(damage_.get(i));
        }
        size += dataSize;
        size += 1 * getDamageList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < killCounts_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(killCounts_.get(i));
        }
        size += dataSize;
        size += 1 * getKillCountsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < userTools_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(userTools_.get(i));
        }
        size += dataSize;
        size += 1 * getUserToolsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < useSkill_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(useSkill_.get(i));
        }
        size += dataSize;
        size += 1 * getUseSkillList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.xinqihd.sns.gameserver.proto.XinqiBceRobotOver.BceRobotOver parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiBceRobotOver.BceRobotOver parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiBceRobotOver.BceRobotOver parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiBceRobotOver.BceRobotOver parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiBceRobotOver.BceRobotOver parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiBceRobotOver.BceRobotOver parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiBceRobotOver.BceRobotOver parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiBceRobotOver.BceRobotOver parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiBceRobotOver.BceRobotOver parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiBceRobotOver.BceRobotOver parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.xinqihd.sns.gameserver.proto.XinqiBceRobotOver.BceRobotOver prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.xinqihd.sns.gameserver.proto.XinqiBceRobotOver.BceRobotOverOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.xinqihd.sns.gameserver.proto.XinqiBceRobotOver.internal_static_com_xinqihd_sns_gameserver_proto_BceRobotOver_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.xinqihd.sns.gameserver.proto.XinqiBceRobotOver.internal_static_com_xinqihd_sns_gameserver_proto_BceRobotOver_fieldAccessorTable;
      }
      
      // Construct using com.xinqihd.sns.gameserver.proto.XinqiBceRobotOver.BceRobotOver.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        userId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        dead_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000002);
        attackCounts_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000004);
        hitCounts_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000008);
        damage_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000010);
        killCounts_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000020);
        userTools_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000040);
        useSkill_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.xinqihd.sns.gameserver.proto.XinqiBceRobotOver.BceRobotOver.getDescriptor();
      }
      
      public com.xinqihd.sns.gameserver.proto.XinqiBceRobotOver.BceRobotOver getDefaultInstanceForType() {
        return com.xinqihd.sns.gameserver.proto.XinqiBceRobotOver.BceRobotOver.getDefaultInstance();
      }
      
      public com.xinqihd.sns.gameserver.proto.XinqiBceRobotOver.BceRobotOver build() {
        com.xinqihd.sns.gameserver.proto.XinqiBceRobotOver.BceRobotOver result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.xinqihd.sns.gameserver.proto.XinqiBceRobotOver.BceRobotOver buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.xinqihd.sns.gameserver.proto.XinqiBceRobotOver.BceRobotOver result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.xinqihd.sns.gameserver.proto.XinqiBceRobotOver.BceRobotOver buildPartial() {
        com.xinqihd.sns.gameserver.proto.XinqiBceRobotOver.BceRobotOver result = new com.xinqihd.sns.gameserver.proto.XinqiBceRobotOver.BceRobotOver(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          userId_ = new com.google.protobuf.UnmodifiableLazyStringList(
              userId_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.userId_ = userId_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          dead_ = java.util.Collections.unmodifiableList(dead_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.dead_ = dead_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          attackCounts_ = java.util.Collections.unmodifiableList(attackCounts_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.attackCounts_ = attackCounts_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          hitCounts_ = java.util.Collections.unmodifiableList(hitCounts_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.hitCounts_ = hitCounts_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          damage_ = java.util.Collections.unmodifiableList(damage_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.damage_ = damage_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          killCounts_ = java.util.Collections.unmodifiableList(killCounts_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.killCounts_ = killCounts_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          userTools_ = java.util.Collections.unmodifiableList(userTools_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.userTools_ = userTools_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          useSkill_ = java.util.Collections.unmodifiableList(useSkill_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.useSkill_ = useSkill_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.xinqihd.sns.gameserver.proto.XinqiBceRobotOver.BceRobotOver) {
          return mergeFrom((com.xinqihd.sns.gameserver.proto.XinqiBceRobotOver.BceRobotOver)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.xinqihd.sns.gameserver.proto.XinqiBceRobotOver.BceRobotOver other) {
        if (other == com.xinqihd.sns.gameserver.proto.XinqiBceRobotOver.BceRobotOver.getDefaultInstance()) return this;
        if (!other.userId_.isEmpty()) {
          if (userId_.isEmpty()) {
            userId_ = other.userId_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureUserIdIsMutable();
            userId_.addAll(other.userId_);
          }
          onChanged();
        }
        if (!other.dead_.isEmpty()) {
          if (dead_.isEmpty()) {
            dead_ = other.dead_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureDeadIsMutable();
            dead_.addAll(other.dead_);
          }
          onChanged();
        }
        if (!other.attackCounts_.isEmpty()) {
          if (attackCounts_.isEmpty()) {
            attackCounts_ = other.attackCounts_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureAttackCountsIsMutable();
            attackCounts_.addAll(other.attackCounts_);
          }
          onChanged();
        }
        if (!other.hitCounts_.isEmpty()) {
          if (hitCounts_.isEmpty()) {
            hitCounts_ = other.hitCounts_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureHitCountsIsMutable();
            hitCounts_.addAll(other.hitCounts_);
          }
          onChanged();
        }
        if (!other.damage_.isEmpty()) {
          if (damage_.isEmpty()) {
            damage_ = other.damage_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureDamageIsMutable();
            damage_.addAll(other.damage_);
          }
          onChanged();
        }
        if (!other.killCounts_.isEmpty()) {
          if (killCounts_.isEmpty()) {
            killCounts_ = other.killCounts_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureKillCountsIsMutable();
            killCounts_.addAll(other.killCounts_);
          }
          onChanged();
        }
        if (!other.userTools_.isEmpty()) {
          if (userTools_.isEmpty()) {
            userTools_ = other.userTools_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureUserToolsIsMutable();
            userTools_.addAll(other.userTools_);
          }
          onChanged();
        }
        if (!other.useSkill_.isEmpty()) {
          if (useSkill_.isEmpty()) {
            useSkill_ = other.useSkill_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureUseSkillIsMutable();
            useSkill_.addAll(other.useSkill_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              ensureUserIdIsMutable();
              userId_.add(input.readBytes());
              break;
            }
            case 16: {
              ensureDeadIsMutable();
              dead_.add(input.readBool());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addDead(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              ensureAttackCountsIsMutable();
              attackCounts_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addAttackCounts(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              ensureHitCountsIsMutable();
              hitCounts_.add(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addHitCounts(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              ensureDamageIsMutable();
              damage_.add(input.readInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addDamage(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 48: {
              ensureKillCountsIsMutable();
              killCounts_.add(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addKillCounts(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              ensureUserToolsIsMutable();
              userTools_.add(input.readInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addUserTools(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              ensureUseSkillIsMutable();
              useSkill_.add(input.readInt32());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addUseSkill(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated string userId = 1;
      private com.google.protobuf.LazyStringList userId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureUserIdIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          userId_ = new com.google.protobuf.LazyStringArrayList(userId_);
          bitField0_ |= 0x00000001;
         }
      }
      public java.util.List<String>
          getUserIdList() {
        return java.util.Collections.unmodifiableList(userId_);
      }
      public int getUserIdCount() {
        return userId_.size();
      }
      public String getUserId(int index) {
        return userId_.get(index);
      }
      public Builder setUserId(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureUserIdIsMutable();
        userId_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addUserId(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureUserIdIsMutable();
        userId_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllUserId(
          java.lang.Iterable<String> values) {
        ensureUserIdIsMutable();
        super.addAll(values, userId_);
        onChanged();
        return this;
      }
      public Builder clearUserId() {
        userId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      void addUserId(com.google.protobuf.ByteString value) {
        ensureUserIdIsMutable();
        userId_.add(value);
        onChanged();
      }
      
      // repeated bool dead = 2;
      private java.util.List<java.lang.Boolean> dead_ = java.util.Collections.emptyList();;
      private void ensureDeadIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          dead_ = new java.util.ArrayList<java.lang.Boolean>(dead_);
          bitField0_ |= 0x00000002;
         }
      }
      public java.util.List<java.lang.Boolean>
          getDeadList() {
        return java.util.Collections.unmodifiableList(dead_);
      }
      public int getDeadCount() {
        return dead_.size();
      }
      public boolean getDead(int index) {
        return dead_.get(index);
      }
      public Builder setDead(
          int index, boolean value) {
        ensureDeadIsMutable();
        dead_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addDead(boolean value) {
        ensureDeadIsMutable();
        dead_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllDead(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureDeadIsMutable();
        super.addAll(values, dead_);
        onChanged();
        return this;
      }
      public Builder clearDead() {
        dead_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      
      // repeated int32 attackCounts = 3;
      private java.util.List<java.lang.Integer> attackCounts_ = java.util.Collections.emptyList();;
      private void ensureAttackCountsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          attackCounts_ = new java.util.ArrayList<java.lang.Integer>(attackCounts_);
          bitField0_ |= 0x00000004;
         }
      }
      public java.util.List<java.lang.Integer>
          getAttackCountsList() {
        return java.util.Collections.unmodifiableList(attackCounts_);
      }
      public int getAttackCountsCount() {
        return attackCounts_.size();
      }
      public int getAttackCounts(int index) {
        return attackCounts_.get(index);
      }
      public Builder setAttackCounts(
          int index, int value) {
        ensureAttackCountsIsMutable();
        attackCounts_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addAttackCounts(int value) {
        ensureAttackCountsIsMutable();
        attackCounts_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllAttackCounts(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureAttackCountsIsMutable();
        super.addAll(values, attackCounts_);
        onChanged();
        return this;
      }
      public Builder clearAttackCounts() {
        attackCounts_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      
      // repeated int32 hitCounts = 4;
      private java.util.List<java.lang.Integer> hitCounts_ = java.util.Collections.emptyList();;
      private void ensureHitCountsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          hitCounts_ = new java.util.ArrayList<java.lang.Integer>(hitCounts_);
          bitField0_ |= 0x00000008;
         }
      }
      public java.util.List<java.lang.Integer>
          getHitCountsList() {
        return java.util.Collections.unmodifiableList(hitCounts_);
      }
      public int getHitCountsCount() {
        return hitCounts_.size();
      }
      public int getHitCounts(int index) {
        return hitCounts_.get(index);
      }
      public Builder setHitCounts(
          int index, int value) {
        ensureHitCountsIsMutable();
        hitCounts_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addHitCounts(int value) {
        ensureHitCountsIsMutable();
        hitCounts_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllHitCounts(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureHitCountsIsMutable();
        super.addAll(values, hitCounts_);
        onChanged();
        return this;
      }
      public Builder clearHitCounts() {
        hitCounts_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      
      // repeated int32 damage = 5;
      private java.util.List<java.lang.Integer> damage_ = java.util.Collections.emptyList();;
      private void ensureDamageIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          damage_ = new java.util.ArrayList<java.lang.Integer>(damage_);
          bitField0_ |= 0x00000010;
         }
      }
      public java.util.List<java.lang.Integer>
          getDamageList() {
        return java.util.Collections.unmodifiableList(damage_);
      }
      public int getDamageCount() {
        return damage_.size();
      }
      public int getDamage(int index) {
        return damage_.get(index);
      }
      public Builder setDamage(
          int index, int value) {
        ensureDamageIsMutable();
        damage_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addDamage(int value) {
        ensureDamageIsMutable();
        damage_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllDamage(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureDamageIsMutable();
        super.addAll(values, damage_);
        onChanged();
        return this;
      }
      public Builder clearDamage() {
        damage_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      
      // repeated int32 killCounts = 6;
      private java.util.List<java.lang.Integer> killCounts_ = java.util.Collections.emptyList();;
      private void ensureKillCountsIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          killCounts_ = new java.util.ArrayList<java.lang.Integer>(killCounts_);
          bitField0_ |= 0x00000020;
         }
      }
      public java.util.List<java.lang.Integer>
          getKillCountsList() {
        return java.util.Collections.unmodifiableList(killCounts_);
      }
      public int getKillCountsCount() {
        return killCounts_.size();
      }
      public int getKillCounts(int index) {
        return killCounts_.get(index);
      }
      public Builder setKillCounts(
          int index, int value) {
        ensureKillCountsIsMutable();
        killCounts_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addKillCounts(int value) {
        ensureKillCountsIsMutable();
        killCounts_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllKillCounts(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureKillCountsIsMutable();
        super.addAll(values, killCounts_);
        onChanged();
        return this;
      }
      public Builder clearKillCounts() {
        killCounts_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }
      
      // repeated int32 userTools = 7;
      private java.util.List<java.lang.Integer> userTools_ = java.util.Collections.emptyList();;
      private void ensureUserToolsIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          userTools_ = new java.util.ArrayList<java.lang.Integer>(userTools_);
          bitField0_ |= 0x00000040;
         }
      }
      public java.util.List<java.lang.Integer>
          getUserToolsList() {
        return java.util.Collections.unmodifiableList(userTools_);
      }
      public int getUserToolsCount() {
        return userTools_.size();
      }
      public int getUserTools(int index) {
        return userTools_.get(index);
      }
      public Builder setUserTools(
          int index, int value) {
        ensureUserToolsIsMutable();
        userTools_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addUserTools(int value) {
        ensureUserToolsIsMutable();
        userTools_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllUserTools(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureUserToolsIsMutable();
        super.addAll(values, userTools_);
        onChanged();
        return this;
      }
      public Builder clearUserTools() {
        userTools_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }
      
      // repeated int32 useSkill = 8;
      private java.util.List<java.lang.Integer> useSkill_ = java.util.Collections.emptyList();;
      private void ensureUseSkillIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          useSkill_ = new java.util.ArrayList<java.lang.Integer>(useSkill_);
          bitField0_ |= 0x00000080;
         }
      }
      public java.util.List<java.lang.Integer>
          getUseSkillList() {
        return java.util.Collections.unmodifiableList(useSkill_);
      }
      public int getUseSkillCount() {
        return useSkill_.size();
      }
      public int getUseSkill(int index) {
        return useSkill_.get(index);
      }
      public Builder setUseSkill(
          int index, int value) {
        ensureUseSkillIsMutable();
        useSkill_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addUseSkill(int value) {
        ensureUseSkillIsMutable();
        useSkill_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllUseSkill(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureUseSkillIsMutable();
        super.addAll(values, useSkill_);
        onChanged();
        return this;
      }
      public Builder clearUseSkill() {
        useSkill_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.xinqihd.sns.gameserver.proto.BceRobotOver)
    }
    
    static {
      defaultInstance = new BceRobotOver(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.xinqihd.sns.gameserver.proto.BceRobotOver)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_xinqihd_sns_gameserver_proto_BceRobotOver_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_xinqihd_sns_gameserver_proto_BceRobotOver_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\022BceRobotOver.proto\022 com.xinqihd.sns.ga" +
      "meserver.proto\"\236\001\n\014BceRobotOver\022\016\n\006userI" +
      "d\030\001 \003(\t\022\014\n\004dead\030\002 \003(\010\022\024\n\014attackCounts\030\003 " +
      "\003(\005\022\021\n\thitCounts\030\004 \003(\005\022\016\n\006damage\030\005 \003(\005\022\022" +
      "\n\nkillCounts\030\006 \003(\005\022\021\n\tuserTools\030\007 \003(\005\022\020\n" +
      "\010useSkill\030\010 \003(\005B\023B\021XinqiBceRobotOver"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_xinqihd_sns_gameserver_proto_BceRobotOver_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_xinqihd_sns_gameserver_proto_BceRobotOver_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_xinqihd_sns_gameserver_proto_BceRobotOver_descriptor,
              new java.lang.String[] { "UserId", "Dead", "AttackCounts", "HitCounts", "Damage", "KillCounts", "UserTools", "UseSkill", },
              com.xinqihd.sns.gameserver.proto.XinqiBceRobotOver.BceRobotOver.class,
              com.xinqihd.sns.gameserver.proto.XinqiBceRobotOver.BceRobotOver.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
