// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: UserData.proto

package com.xinqihd.sns.gameserver.proto;

public final class XinqiUserData {
  private XinqiUserData() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface UserDataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int32 roleLevel = 1;
    boolean hasRoleLevel();
    int getRoleLevel();
    
    // required int32 roleMaxExp = 2;
    boolean hasRoleMaxExp();
    int getRoleMaxExp();
    
    // required int32 roleAttack = 3;
    boolean hasRoleAttack();
    int getRoleAttack();
    
    // required int32 roleDefend = 4;
    boolean hasRoleDefend();
    int getRoleDefend();
    
    // required int32 roleAgility = 5;
    boolean hasRoleAgility();
    int getRoleAgility();
    
    // required int32 roleLuck = 6;
    boolean hasRoleLuck();
    int getRoleLuck();
    
    // required int32 roleBlood = 7;
    boolean hasRoleBlood();
    int getRoleBlood();
    
    // required int32 roleThew = 8;
    boolean hasRoleThew();
    int getRoleThew();
    
    // required int32 roleDamage = 9;
    boolean hasRoleDamage();
    int getRoleDamage();
    
    // required int32 roleSkin = 10;
    boolean hasRoleSkin();
    int getRoleSkin();
    
    // required int32 rolePower = 11;
    boolean hasRolePower();
    int getRolePower();
    
    // optional int32 winodds = 12;
    boolean hasWinodds();
    int getWinodds();
    
    // optional int32 viplevel = 13;
    boolean hasViplevel();
    int getViplevel();
    
    // optional bool hideHat = 14;
    boolean hasHideHat();
    boolean getHideHat();
    
    // optional bool hideGlasses = 15;
    boolean hasHideGlasses();
    boolean getHideGlasses();
    
    // optional bool hideSuit = 16;
    boolean hasHideSuit();
    boolean getHideSuit();
  }
  public static final class UserData extends
      com.google.protobuf.GeneratedMessage
      implements UserDataOrBuilder {
    // Use UserData.newBuilder() to construct.
    private UserData(Builder builder) {
      super(builder);
    }
    private UserData(boolean noInit) {}
    
    private static final UserData defaultInstance;
    public static UserData getDefaultInstance() {
      return defaultInstance;
    }
    
    public UserData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.xinqihd.sns.gameserver.proto.XinqiUserData.internal_static_com_xinqihd_sns_gameserver_proto_UserData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.xinqihd.sns.gameserver.proto.XinqiUserData.internal_static_com_xinqihd_sns_gameserver_proto_UserData_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int32 roleLevel = 1;
    public static final int ROLELEVEL_FIELD_NUMBER = 1;
    private int roleLevel_;
    public boolean hasRoleLevel() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getRoleLevel() {
      return roleLevel_;
    }
    
    // required int32 roleMaxExp = 2;
    public static final int ROLEMAXEXP_FIELD_NUMBER = 2;
    private int roleMaxExp_;
    public boolean hasRoleMaxExp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getRoleMaxExp() {
      return roleMaxExp_;
    }
    
    // required int32 roleAttack = 3;
    public static final int ROLEATTACK_FIELD_NUMBER = 3;
    private int roleAttack_;
    public boolean hasRoleAttack() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getRoleAttack() {
      return roleAttack_;
    }
    
    // required int32 roleDefend = 4;
    public static final int ROLEDEFEND_FIELD_NUMBER = 4;
    private int roleDefend_;
    public boolean hasRoleDefend() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getRoleDefend() {
      return roleDefend_;
    }
    
    // required int32 roleAgility = 5;
    public static final int ROLEAGILITY_FIELD_NUMBER = 5;
    private int roleAgility_;
    public boolean hasRoleAgility() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getRoleAgility() {
      return roleAgility_;
    }
    
    // required int32 roleLuck = 6;
    public static final int ROLELUCK_FIELD_NUMBER = 6;
    private int roleLuck_;
    public boolean hasRoleLuck() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getRoleLuck() {
      return roleLuck_;
    }
    
    // required int32 roleBlood = 7;
    public static final int ROLEBLOOD_FIELD_NUMBER = 7;
    private int roleBlood_;
    public boolean hasRoleBlood() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public int getRoleBlood() {
      return roleBlood_;
    }
    
    // required int32 roleThew = 8;
    public static final int ROLETHEW_FIELD_NUMBER = 8;
    private int roleThew_;
    public boolean hasRoleThew() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public int getRoleThew() {
      return roleThew_;
    }
    
    // required int32 roleDamage = 9;
    public static final int ROLEDAMAGE_FIELD_NUMBER = 9;
    private int roleDamage_;
    public boolean hasRoleDamage() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public int getRoleDamage() {
      return roleDamage_;
    }
    
    // required int32 roleSkin = 10;
    public static final int ROLESKIN_FIELD_NUMBER = 10;
    private int roleSkin_;
    public boolean hasRoleSkin() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public int getRoleSkin() {
      return roleSkin_;
    }
    
    // required int32 rolePower = 11;
    public static final int ROLEPOWER_FIELD_NUMBER = 11;
    private int rolePower_;
    public boolean hasRolePower() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    public int getRolePower() {
      return rolePower_;
    }
    
    // optional int32 winodds = 12;
    public static final int WINODDS_FIELD_NUMBER = 12;
    private int winodds_;
    public boolean hasWinodds() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    public int getWinodds() {
      return winodds_;
    }
    
    // optional int32 viplevel = 13;
    public static final int VIPLEVEL_FIELD_NUMBER = 13;
    private int viplevel_;
    public boolean hasViplevel() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    public int getViplevel() {
      return viplevel_;
    }
    
    // optional bool hideHat = 14;
    public static final int HIDEHAT_FIELD_NUMBER = 14;
    private boolean hideHat_;
    public boolean hasHideHat() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    public boolean getHideHat() {
      return hideHat_;
    }
    
    // optional bool hideGlasses = 15;
    public static final int HIDEGLASSES_FIELD_NUMBER = 15;
    private boolean hideGlasses_;
    public boolean hasHideGlasses() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    public boolean getHideGlasses() {
      return hideGlasses_;
    }
    
    // optional bool hideSuit = 16;
    public static final int HIDESUIT_FIELD_NUMBER = 16;
    private boolean hideSuit_;
    public boolean hasHideSuit() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    public boolean getHideSuit() {
      return hideSuit_;
    }
    
    private void initFields() {
      roleLevel_ = 0;
      roleMaxExp_ = 0;
      roleAttack_ = 0;
      roleDefend_ = 0;
      roleAgility_ = 0;
      roleLuck_ = 0;
      roleBlood_ = 0;
      roleThew_ = 0;
      roleDamage_ = 0;
      roleSkin_ = 0;
      rolePower_ = 0;
      winodds_ = 0;
      viplevel_ = 0;
      hideHat_ = false;
      hideGlasses_ = false;
      hideSuit_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasRoleLevel()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRoleMaxExp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRoleAttack()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRoleDefend()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRoleAgility()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRoleLuck()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRoleBlood()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRoleThew()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRoleDamage()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRoleSkin()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRolePower()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, roleLevel_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, roleMaxExp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, roleAttack_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, roleDefend_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, roleAgility_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, roleLuck_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, roleBlood_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, roleThew_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, roleDamage_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, roleSkin_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, rolePower_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(12, winodds_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(13, viplevel_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeBool(14, hideHat_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeBool(15, hideGlasses_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeBool(16, hideSuit_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, roleLevel_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, roleMaxExp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, roleAttack_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, roleDefend_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, roleAgility_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, roleLuck_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, roleBlood_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, roleThew_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, roleDamage_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, roleSkin_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, rolePower_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, winodds_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, viplevel_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(14, hideHat_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(15, hideGlasses_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(16, hideSuit_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.xinqihd.sns.gameserver.proto.XinqiUserData.UserData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiUserData.UserData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiUserData.UserData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiUserData.UserData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiUserData.UserData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiUserData.UserData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiUserData.UserData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiUserData.UserData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiUserData.UserData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiUserData.UserData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.xinqihd.sns.gameserver.proto.XinqiUserData.UserData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.xinqihd.sns.gameserver.proto.XinqiUserData.UserDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.xinqihd.sns.gameserver.proto.XinqiUserData.internal_static_com_xinqihd_sns_gameserver_proto_UserData_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.xinqihd.sns.gameserver.proto.XinqiUserData.internal_static_com_xinqihd_sns_gameserver_proto_UserData_fieldAccessorTable;
      }
      
      // Construct using com.xinqihd.sns.gameserver.proto.XinqiUserData.UserData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        roleLevel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        roleMaxExp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        roleAttack_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        roleDefend_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        roleAgility_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        roleLuck_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        roleBlood_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        roleThew_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        roleDamage_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        roleSkin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        rolePower_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        winodds_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        viplevel_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        hideHat_ = false;
        bitField0_ = (bitField0_ & ~0x00002000);
        hideGlasses_ = false;
        bitField0_ = (bitField0_ & ~0x00004000);
        hideSuit_ = false;
        bitField0_ = (bitField0_ & ~0x00008000);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.xinqihd.sns.gameserver.proto.XinqiUserData.UserData.getDescriptor();
      }
      
      public com.xinqihd.sns.gameserver.proto.XinqiUserData.UserData getDefaultInstanceForType() {
        return com.xinqihd.sns.gameserver.proto.XinqiUserData.UserData.getDefaultInstance();
      }
      
      public com.xinqihd.sns.gameserver.proto.XinqiUserData.UserData build() {
        com.xinqihd.sns.gameserver.proto.XinqiUserData.UserData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.xinqihd.sns.gameserver.proto.XinqiUserData.UserData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.xinqihd.sns.gameserver.proto.XinqiUserData.UserData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.xinqihd.sns.gameserver.proto.XinqiUserData.UserData buildPartial() {
        com.xinqihd.sns.gameserver.proto.XinqiUserData.UserData result = new com.xinqihd.sns.gameserver.proto.XinqiUserData.UserData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.roleLevel_ = roleLevel_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.roleMaxExp_ = roleMaxExp_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.roleAttack_ = roleAttack_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.roleDefend_ = roleDefend_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.roleAgility_ = roleAgility_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.roleLuck_ = roleLuck_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.roleBlood_ = roleBlood_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.roleThew_ = roleThew_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.roleDamage_ = roleDamage_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.roleSkin_ = roleSkin_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.rolePower_ = rolePower_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.winodds_ = winodds_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.viplevel_ = viplevel_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.hideHat_ = hideHat_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.hideGlasses_ = hideGlasses_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.hideSuit_ = hideSuit_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.xinqihd.sns.gameserver.proto.XinqiUserData.UserData) {
          return mergeFrom((com.xinqihd.sns.gameserver.proto.XinqiUserData.UserData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.xinqihd.sns.gameserver.proto.XinqiUserData.UserData other) {
        if (other == com.xinqihd.sns.gameserver.proto.XinqiUserData.UserData.getDefaultInstance()) return this;
        if (other.hasRoleLevel()) {
          setRoleLevel(other.getRoleLevel());
        }
        if (other.hasRoleMaxExp()) {
          setRoleMaxExp(other.getRoleMaxExp());
        }
        if (other.hasRoleAttack()) {
          setRoleAttack(other.getRoleAttack());
        }
        if (other.hasRoleDefend()) {
          setRoleDefend(other.getRoleDefend());
        }
        if (other.hasRoleAgility()) {
          setRoleAgility(other.getRoleAgility());
        }
        if (other.hasRoleLuck()) {
          setRoleLuck(other.getRoleLuck());
        }
        if (other.hasRoleBlood()) {
          setRoleBlood(other.getRoleBlood());
        }
        if (other.hasRoleThew()) {
          setRoleThew(other.getRoleThew());
        }
        if (other.hasRoleDamage()) {
          setRoleDamage(other.getRoleDamage());
        }
        if (other.hasRoleSkin()) {
          setRoleSkin(other.getRoleSkin());
        }
        if (other.hasRolePower()) {
          setRolePower(other.getRolePower());
        }
        if (other.hasWinodds()) {
          setWinodds(other.getWinodds());
        }
        if (other.hasViplevel()) {
          setViplevel(other.getViplevel());
        }
        if (other.hasHideHat()) {
          setHideHat(other.getHideHat());
        }
        if (other.hasHideGlasses()) {
          setHideGlasses(other.getHideGlasses());
        }
        if (other.hasHideSuit()) {
          setHideSuit(other.getHideSuit());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasRoleLevel()) {
          
          return false;
        }
        if (!hasRoleMaxExp()) {
          
          return false;
        }
        if (!hasRoleAttack()) {
          
          return false;
        }
        if (!hasRoleDefend()) {
          
          return false;
        }
        if (!hasRoleAgility()) {
          
          return false;
        }
        if (!hasRoleLuck()) {
          
          return false;
        }
        if (!hasRoleBlood()) {
          
          return false;
        }
        if (!hasRoleThew()) {
          
          return false;
        }
        if (!hasRoleDamage()) {
          
          return false;
        }
        if (!hasRoleSkin()) {
          
          return false;
        }
        if (!hasRolePower()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              roleLevel_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              roleMaxExp_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              roleAttack_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              roleDefend_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              roleAgility_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              roleLuck_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              roleBlood_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              roleThew_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              roleDamage_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              roleSkin_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              rolePower_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              winodds_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              viplevel_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              hideHat_ = input.readBool();
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              hideGlasses_ = input.readBool();
              break;
            }
            case 128: {
              bitField0_ |= 0x00008000;
              hideSuit_ = input.readBool();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 roleLevel = 1;
      private int roleLevel_ ;
      public boolean hasRoleLevel() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getRoleLevel() {
        return roleLevel_;
      }
      public Builder setRoleLevel(int value) {
        bitField0_ |= 0x00000001;
        roleLevel_ = value;
        onChanged();
        return this;
      }
      public Builder clearRoleLevel() {
        bitField0_ = (bitField0_ & ~0x00000001);
        roleLevel_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 roleMaxExp = 2;
      private int roleMaxExp_ ;
      public boolean hasRoleMaxExp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getRoleMaxExp() {
        return roleMaxExp_;
      }
      public Builder setRoleMaxExp(int value) {
        bitField0_ |= 0x00000002;
        roleMaxExp_ = value;
        onChanged();
        return this;
      }
      public Builder clearRoleMaxExp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        roleMaxExp_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 roleAttack = 3;
      private int roleAttack_ ;
      public boolean hasRoleAttack() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getRoleAttack() {
        return roleAttack_;
      }
      public Builder setRoleAttack(int value) {
        bitField0_ |= 0x00000004;
        roleAttack_ = value;
        onChanged();
        return this;
      }
      public Builder clearRoleAttack() {
        bitField0_ = (bitField0_ & ~0x00000004);
        roleAttack_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 roleDefend = 4;
      private int roleDefend_ ;
      public boolean hasRoleDefend() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getRoleDefend() {
        return roleDefend_;
      }
      public Builder setRoleDefend(int value) {
        bitField0_ |= 0x00000008;
        roleDefend_ = value;
        onChanged();
        return this;
      }
      public Builder clearRoleDefend() {
        bitField0_ = (bitField0_ & ~0x00000008);
        roleDefend_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 roleAgility = 5;
      private int roleAgility_ ;
      public boolean hasRoleAgility() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getRoleAgility() {
        return roleAgility_;
      }
      public Builder setRoleAgility(int value) {
        bitField0_ |= 0x00000010;
        roleAgility_ = value;
        onChanged();
        return this;
      }
      public Builder clearRoleAgility() {
        bitField0_ = (bitField0_ & ~0x00000010);
        roleAgility_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 roleLuck = 6;
      private int roleLuck_ ;
      public boolean hasRoleLuck() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getRoleLuck() {
        return roleLuck_;
      }
      public Builder setRoleLuck(int value) {
        bitField0_ |= 0x00000020;
        roleLuck_ = value;
        onChanged();
        return this;
      }
      public Builder clearRoleLuck() {
        bitField0_ = (bitField0_ & ~0x00000020);
        roleLuck_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 roleBlood = 7;
      private int roleBlood_ ;
      public boolean hasRoleBlood() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public int getRoleBlood() {
        return roleBlood_;
      }
      public Builder setRoleBlood(int value) {
        bitField0_ |= 0x00000040;
        roleBlood_ = value;
        onChanged();
        return this;
      }
      public Builder clearRoleBlood() {
        bitField0_ = (bitField0_ & ~0x00000040);
        roleBlood_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 roleThew = 8;
      private int roleThew_ ;
      public boolean hasRoleThew() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public int getRoleThew() {
        return roleThew_;
      }
      public Builder setRoleThew(int value) {
        bitField0_ |= 0x00000080;
        roleThew_ = value;
        onChanged();
        return this;
      }
      public Builder clearRoleThew() {
        bitField0_ = (bitField0_ & ~0x00000080);
        roleThew_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 roleDamage = 9;
      private int roleDamage_ ;
      public boolean hasRoleDamage() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public int getRoleDamage() {
        return roleDamage_;
      }
      public Builder setRoleDamage(int value) {
        bitField0_ |= 0x00000100;
        roleDamage_ = value;
        onChanged();
        return this;
      }
      public Builder clearRoleDamage() {
        bitField0_ = (bitField0_ & ~0x00000100);
        roleDamage_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 roleSkin = 10;
      private int roleSkin_ ;
      public boolean hasRoleSkin() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public int getRoleSkin() {
        return roleSkin_;
      }
      public Builder setRoleSkin(int value) {
        bitField0_ |= 0x00000200;
        roleSkin_ = value;
        onChanged();
        return this;
      }
      public Builder clearRoleSkin() {
        bitField0_ = (bitField0_ & ~0x00000200);
        roleSkin_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 rolePower = 11;
      private int rolePower_ ;
      public boolean hasRolePower() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public int getRolePower() {
        return rolePower_;
      }
      public Builder setRolePower(int value) {
        bitField0_ |= 0x00000400;
        rolePower_ = value;
        onChanged();
        return this;
      }
      public Builder clearRolePower() {
        bitField0_ = (bitField0_ & ~0x00000400);
        rolePower_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 winodds = 12;
      private int winodds_ ;
      public boolean hasWinodds() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      public int getWinodds() {
        return winodds_;
      }
      public Builder setWinodds(int value) {
        bitField0_ |= 0x00000800;
        winodds_ = value;
        onChanged();
        return this;
      }
      public Builder clearWinodds() {
        bitField0_ = (bitField0_ & ~0x00000800);
        winodds_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 viplevel = 13;
      private int viplevel_ ;
      public boolean hasViplevel() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      public int getViplevel() {
        return viplevel_;
      }
      public Builder setViplevel(int value) {
        bitField0_ |= 0x00001000;
        viplevel_ = value;
        onChanged();
        return this;
      }
      public Builder clearViplevel() {
        bitField0_ = (bitField0_ & ~0x00001000);
        viplevel_ = 0;
        onChanged();
        return this;
      }
      
      // optional bool hideHat = 14;
      private boolean hideHat_ ;
      public boolean hasHideHat() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      public boolean getHideHat() {
        return hideHat_;
      }
      public Builder setHideHat(boolean value) {
        bitField0_ |= 0x00002000;
        hideHat_ = value;
        onChanged();
        return this;
      }
      public Builder clearHideHat() {
        bitField0_ = (bitField0_ & ~0x00002000);
        hideHat_ = false;
        onChanged();
        return this;
      }
      
      // optional bool hideGlasses = 15;
      private boolean hideGlasses_ ;
      public boolean hasHideGlasses() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      public boolean getHideGlasses() {
        return hideGlasses_;
      }
      public Builder setHideGlasses(boolean value) {
        bitField0_ |= 0x00004000;
        hideGlasses_ = value;
        onChanged();
        return this;
      }
      public Builder clearHideGlasses() {
        bitField0_ = (bitField0_ & ~0x00004000);
        hideGlasses_ = false;
        onChanged();
        return this;
      }
      
      // optional bool hideSuit = 16;
      private boolean hideSuit_ ;
      public boolean hasHideSuit() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      public boolean getHideSuit() {
        return hideSuit_;
      }
      public Builder setHideSuit(boolean value) {
        bitField0_ |= 0x00008000;
        hideSuit_ = value;
        onChanged();
        return this;
      }
      public Builder clearHideSuit() {
        bitField0_ = (bitField0_ & ~0x00008000);
        hideSuit_ = false;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.xinqihd.sns.gameserver.proto.UserData)
    }
    
    static {
      defaultInstance = new UserData(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.xinqihd.sns.gameserver.proto.UserData)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_xinqihd_sns_gameserver_proto_UserData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_xinqihd_sns_gameserver_proto_UserData_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016UserData.proto\022 com.xinqihd.sns.gamese" +
      "rver.proto\"\271\002\n\010UserData\022\021\n\troleLevel\030\001 \002" +
      "(\005\022\022\n\nroleMaxExp\030\002 \002(\005\022\022\n\nroleAttack\030\003 \002" +
      "(\005\022\022\n\nroleDefend\030\004 \002(\005\022\023\n\013roleAgility\030\005 " +
      "\002(\005\022\020\n\010roleLuck\030\006 \002(\005\022\021\n\troleBlood\030\007 \002(\005" +
      "\022\020\n\010roleThew\030\010 \002(\005\022\022\n\nroleDamage\030\t \002(\005\022\020" +
      "\n\010roleSkin\030\n \002(\005\022\021\n\trolePower\030\013 \002(\005\022\017\n\007w" +
      "inodds\030\014 \001(\005\022\020\n\010viplevel\030\r \001(\005\022\017\n\007hideHa" +
      "t\030\016 \001(\010\022\023\n\013hideGlasses\030\017 \001(\010\022\020\n\010hideSuit" +
      "\030\020 \001(\010B\017B\rXinqiUserData"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_xinqihd_sns_gameserver_proto_UserData_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_xinqihd_sns_gameserver_proto_UserData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_xinqihd_sns_gameserver_proto_UserData_descriptor,
              new java.lang.String[] { "RoleLevel", "RoleMaxExp", "RoleAttack", "RoleDefend", "RoleAgility", "RoleLuck", "RoleBlood", "RoleThew", "RoleDamage", "RoleSkin", "RolePower", "Winodds", "Viplevel", "HideHat", "HideGlasses", "HideSuit", },
              com.xinqihd.sns.gameserver.proto.XinqiUserData.UserData.class,
              com.xinqihd.sns.gameserver.proto.XinqiUserData.UserData.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
