// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BseGameDataKey.proto

package com.xinqihd.sns.gameserver.proto;

public final class XinqiBseGameDataKey {
  private XinqiBseGameDataKey() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface BseGameDataKeyOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int32 battle_attack_k = 1 [default = 591];
    boolean hasBattleAttackK();
    int getBattleAttackK();
    
    // optional int32 battle_attack_F = 2 [default = 750];
    boolean hasBattleAttackF();
    int getBattleAttackF();
    
    // optional int32 battle_attack_G = 3 [default = 760];
    boolean hasBattleAttackG();
    int getBattleAttackG();
    
    // optional int32 thew_role_move = 7 [default = 5];
    boolean hasThewRoleMove();
    int getThewRoleMove();
    
    // optional int32 thew_attacktwomoretimes = 8 [default = 110];
    boolean hasThewAttacktwomoretimes();
    int getThewAttacktwomoretimes();
    
    // optional int32 thew_attackthreebranch = 9 [default = 110];
    boolean hasThewAttackthreebranch();
    int getThewAttackthreebranch();
    
    // optional int32 thew_attackonemoretimes = 10 [default = 110];
    boolean hasThewAttackonemoretimes();
    int getThewAttackonemoretimes();
    
    // optional int32 thew_hurtadd50 = 11 [default = 85];
    boolean hasThewHurtadd50();
    int getThewHurtadd50();
    
    // optional int32 thew_hurtadd40 = 12 [default = 80];
    boolean hasThewHurtadd40();
    int getThewHurtadd40();
    
    // optional int32 thew_hurtadd30 = 13 [default = 70];
    boolean hasThewHurtadd30();
    int getThewHurtadd30();
    
    // optional int32 thew_hurtadd20 = 14 [default = 55];
    boolean hasThewHurtadd20();
    int getThewHurtadd20();
    
    // optional int32 thew_hurtadd10 = 15 [default = 50];
    boolean hasThewHurtadd10();
    int getThewHurtadd10();
    
    // optional int32 thew_tool_recover = 16 [default = 150];
    boolean hasThewToolRecover();
    int getThewToolRecover();
    
    // optional int32 thew_tool_allrecover = 17 [default = 170];
    boolean hasThewToolAllrecover();
    int getThewToolAllrecover();
    
    // optional int32 thew_tool_hidden = 18 [default = 50];
    boolean hasThewToolHidden();
    int getThewToolHidden();
    
    // optional int32 thew_tool_allhidden = 19 [default = 150];
    boolean hasThewToolAllhidden();
    int getThewToolAllhidden();
    
    // optional int32 thew_tool_wind = 20 [default = 50];
    boolean hasThewToolWind();
    int getThewToolWind();
    
    // optional int32 thew_tool_ice = 21 [default = 150];
    boolean hasThewToolIce();
    int getThewToolIce();
    
    // optional int32 thew_tool_fly = 22 [default = 150];
    boolean hasThewToolFly();
    int getThewToolFly();
    
    // optional int32 thew_tool_guide = 23 [default = 120];
    boolean hasThewToolGuide();
    int getThewToolGuide();
    
    // optional int32 thew_tool_energy = 24 [default = 120];
    boolean hasThewToolEnergy();
    int getThewToolEnergy();
    
    // optional int32 thew_tool_atom = 25 [default = 110];
    boolean hasThewToolAtom();
    int getThewToolAtom();
    
    // optional int32 thew_tool_nohole = 26 [default = 50];
    boolean hasThewToolNohole();
    int getThewToolNohole();
    
    // optional int32 craft_stone_luck = 27 [default = 20001];
    boolean hasCraftStoneLuck();
    int getCraftStoneLuck();
    
    // optional int32 craft_stone_defend = 28 [default = 20002];
    boolean hasCraftStoneDefend();
    int getCraftStoneDefend();
    
    // optional int32 craft_stone_agility = 29 [default = 20003];
    boolean hasCraftStoneAgility();
    int getCraftStoneAgility();
    
    // optional int32 craft_stone_attack = 30 [default = 20004];
    boolean hasCraftStoneAttack();
    int getCraftStoneAttack();
    
    // optional int32 craft_stone_strength = 31 [default = 20005];
    boolean hasCraftStoneStrength();
    int getCraftStoneStrength();
    
    // optional int32 craft_stone_lucky1 = 32 [default = 24002];
    boolean hasCraftStoneLucky1();
    int getCraftStoneLucky1();
    
    // optional int32 craft_stone_lucky2 = 33 [default = 24004];
    boolean hasCraftStoneLucky2();
    int getCraftStoneLucky2();
    
    // optional int32 craft_stone_god = 34 [default = 24001];
    boolean hasCraftStoneGod();
    int getCraftStoneGod();
    
    // optional int32 price_tool_AttackTwoMoreTimes = 35 [default = 1200];
    boolean hasPriceToolAttackTwoMoreTimes();
    int getPriceToolAttackTwoMoreTimes();
    
    // optional int32 price_tool_AttackThreeBranch = 36 [default = 1200];
    boolean hasPriceToolAttackThreeBranch();
    int getPriceToolAttackThreeBranch();
    
    // optional int32 price_tool_AttackOneMoreTimes = 37 [default = 1200];
    boolean hasPriceToolAttackOneMoreTimes();
    int getPriceToolAttackOneMoreTimes();
    
    // optional int32 price_tool_HurtAdd50 = 38 [default = 1200];
    boolean hasPriceToolHurtAdd50();
    int getPriceToolHurtAdd50();
    
    // optional int32 price_tool_HurtAdd40 = 39 [default = 1200];
    boolean hasPriceToolHurtAdd40();
    int getPriceToolHurtAdd40();
    
    // optional int32 price_tool_HurtAdd30 = 40 [default = 1200];
    boolean hasPriceToolHurtAdd30();
    int getPriceToolHurtAdd30();
    
    // optional int32 price_tool_HurtAdd20 = 41 [default = 1200];
    boolean hasPriceToolHurtAdd20();
    int getPriceToolHurtAdd20();
    
    // optional int32 price_tool_HurtAdd10 = 42 [default = 1200];
    boolean hasPriceToolHurtAdd10();
    int getPriceToolHurtAdd10();
    
    // optional int32 price_tool_Recover = 43 [default = 1200];
    boolean hasPriceToolRecover();
    int getPriceToolRecover();
    
    // optional int32 price_tool_AllRecover = 44 [default = 120];
    boolean hasPriceToolAllRecover();
    int getPriceToolAllRecover();
    
    // optional int32 price_tool_Hidden = 45 [default = 1200];
    boolean hasPriceToolHidden();
    int getPriceToolHidden();
    
    // optional int32 price_tool_AllHidden = 46 [default = 1200];
    boolean hasPriceToolAllHidden();
    int getPriceToolAllHidden();
    
    // optional int32 price_tool_Wind = 47 [default = 1200];
    boolean hasPriceToolWind();
    int getPriceToolWind();
    
    // optional int32 price_tool_Ice = 48 [default = 1200];
    boolean hasPriceToolIce();
    int getPriceToolIce();
    
    // optional int32 price_tool_Fly = 49 [default = 1200];
    boolean hasPriceToolFly();
    int getPriceToolFly();
    
    // optional int32 price_tool_Guide = 50 [default = 1200];
    boolean hasPriceToolGuide();
    int getPriceToolGuide();
    
    // optional int32 price_tool_Energy = 51 [default = 1200];
    boolean hasPriceToolEnergy();
    int getPriceToolEnergy();
    
    // optional int32 price_tool_Atom = 52 [default = 1200];
    boolean hasPriceToolAtom();
    int getPriceToolAtom();
    
    // optional int32 price_tool_NoHole = 53 [default = 1200];
    boolean hasPriceToolNoHole();
    int getPriceToolNoHole();
    
    // optional int32 sell_tool_ = 54 [default = 85];
    boolean hasSellTool();
    int getSellTool();
    
    // optional int32 price_craft_compose = 55 [default = 2000];
    boolean hasPriceCraftCompose();
    int getPriceCraftCompose();
    
    // optional int32 price_craft_forge = 56 [default = 2000];
    boolean hasPriceCraftForge();
    int getPriceCraftForge();
    
    // optional int32 price_craft_transfer = 57 [default = 5000];
    boolean hasPriceCraftTransfer();
    int getPriceCraftTransfer();
    
    // optional int32 stone_water_typeid = 58 [default = 20001];
    boolean hasStoneWaterTypeid();
    int getStoneWaterTypeid();
    
    // optional int32 stone_earth_typeid = 59 [default = 20002];
    boolean hasStoneEarthTypeid();
    int getStoneEarthTypeid();
    
    // optional int32 stone_wing_typeid = 60 [default = 20003];
    boolean hasStoneWingTypeid();
    int getStoneWingTypeid();
    
    // optional int32 stone_fire_typeid = 61 [default = 20004];
    boolean hasStoneFireTypeid();
    int getStoneFireTypeid();
    
    // optional int32 stone_strength_typeid = 62 [default = 20005];
    boolean hasStoneStrengthTypeid();
    int getStoneStrengthTypeid();
    
    // optional int32 stone_lucky_typeid = 63 [default = 24002];
    boolean hasStoneLuckyTypeid();
    int getStoneLuckyTypeid();
    
    // optional int32 stone_god_typeid = 64 [default = 24001];
    boolean hasStoneGodTypeid();
    int getStoneGodTypeid();
    
    // optional int32 stone_func_typeid = 65 [default = 21001];
    boolean hasStoneFuncTypeid();
    int getStoneFuncTypeid();
    
    // optional int32 stone_ring_typeid = 66 [default = 21006];
    boolean hasStoneRingTypeid();
    int getStoneRingTypeid();
    
    // optional int32 tool_recover_value = 67 [default = 500];
    boolean hasToolRecoverValue();
    int getToolRecoverValue();
    
    // optional int32 tool_all_recover_value = 68 [default = 300];
    boolean hasToolAllRecoverValue();
    int getToolAllRecoverValue();
    
    // optional int32 tool_energy_value = 69 [default = 100];
    boolean hasToolEnergyValue();
    int getToolEnergyValue();
    
    // optional int32 tool_iced_value = 70 [default = 3];
    boolean hasToolIcedValue();
    int getToolIcedValue();
    
    // optional int32 tool_hidden_value = 71 [default = 3];
    boolean hasToolHiddenValue();
    int getToolHiddenValue();
    
    // optional int32 normal_shop_discount = 72 [default = 100];
    boolean hasNormalShopDiscount();
    int getNormalShopDiscount();
    
    // optional int32 vip_shop_discount = 73 [default = 80];
    boolean hasVipShopDiscount();
    int getVipShopDiscount();
    
    // optional int32 craft_stone_win = 74 [default = 24005];
    boolean hasCraftStoneWin();
    int getCraftStoneWin();
    
    // optional int32 newbie_battle_guide = 75 [default = 5];
    boolean hasNewbieBattleGuide();
    int getNewbieBattleGuide();
    
    // optional int32 craft_stone_diamond = 76 [default = 20031];
    boolean hasCraftStoneDiamond();
    int getCraftStoneDiamond();
    
    // optional int32 craft_stone_crystal = 77 [default = 20041];
    boolean hasCraftStoneCrystal();
    int getCraftStoneCrystal();
  }
  public static final class BseGameDataKey extends
      com.google.protobuf.GeneratedMessage
      implements BseGameDataKeyOrBuilder {
    // Use BseGameDataKey.newBuilder() to construct.
    private BseGameDataKey(Builder builder) {
      super(builder);
    }
    private BseGameDataKey(boolean noInit) {}
    
    private static final BseGameDataKey defaultInstance;
    public static BseGameDataKey getDefaultInstance() {
      return defaultInstance;
    }
    
    public BseGameDataKey getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.xinqihd.sns.gameserver.proto.XinqiBseGameDataKey.internal_static_com_xinqihd_sns_gameserver_proto_BseGameDataKey_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.xinqihd.sns.gameserver.proto.XinqiBseGameDataKey.internal_static_com_xinqihd_sns_gameserver_proto_BseGameDataKey_fieldAccessorTable;
    }
    
    private int bitField0_;
    private int bitField1_;
    private int bitField2_;
    // optional int32 battle_attack_k = 1 [default = 591];
    public static final int BATTLE_ATTACK_K_FIELD_NUMBER = 1;
    private int battleAttackK_;
    public boolean hasBattleAttackK() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getBattleAttackK() {
      return battleAttackK_;
    }
    
    // optional int32 battle_attack_F = 2 [default = 750];
    public static final int BATTLE_ATTACK_F_FIELD_NUMBER = 2;
    private int battleAttackF_;
    public boolean hasBattleAttackF() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getBattleAttackF() {
      return battleAttackF_;
    }
    
    // optional int32 battle_attack_G = 3 [default = 760];
    public static final int BATTLE_ATTACK_G_FIELD_NUMBER = 3;
    private int battleAttackG_;
    public boolean hasBattleAttackG() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getBattleAttackG() {
      return battleAttackG_;
    }
    
    // optional int32 thew_role_move = 7 [default = 5];
    public static final int THEW_ROLE_MOVE_FIELD_NUMBER = 7;
    private int thewRoleMove_;
    public boolean hasThewRoleMove() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getThewRoleMove() {
      return thewRoleMove_;
    }
    
    // optional int32 thew_attacktwomoretimes = 8 [default = 110];
    public static final int THEW_ATTACKTWOMORETIMES_FIELD_NUMBER = 8;
    private int thewAttacktwomoretimes_;
    public boolean hasThewAttacktwomoretimes() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getThewAttacktwomoretimes() {
      return thewAttacktwomoretimes_;
    }
    
    // optional int32 thew_attackthreebranch = 9 [default = 110];
    public static final int THEW_ATTACKTHREEBRANCH_FIELD_NUMBER = 9;
    private int thewAttackthreebranch_;
    public boolean hasThewAttackthreebranch() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getThewAttackthreebranch() {
      return thewAttackthreebranch_;
    }
    
    // optional int32 thew_attackonemoretimes = 10 [default = 110];
    public static final int THEW_ATTACKONEMORETIMES_FIELD_NUMBER = 10;
    private int thewAttackonemoretimes_;
    public boolean hasThewAttackonemoretimes() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public int getThewAttackonemoretimes() {
      return thewAttackonemoretimes_;
    }
    
    // optional int32 thew_hurtadd50 = 11 [default = 85];
    public static final int THEW_HURTADD50_FIELD_NUMBER = 11;
    private int thewHurtadd50_;
    public boolean hasThewHurtadd50() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public int getThewHurtadd50() {
      return thewHurtadd50_;
    }
    
    // optional int32 thew_hurtadd40 = 12 [default = 80];
    public static final int THEW_HURTADD40_FIELD_NUMBER = 12;
    private int thewHurtadd40_;
    public boolean hasThewHurtadd40() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public int getThewHurtadd40() {
      return thewHurtadd40_;
    }
    
    // optional int32 thew_hurtadd30 = 13 [default = 70];
    public static final int THEW_HURTADD30_FIELD_NUMBER = 13;
    private int thewHurtadd30_;
    public boolean hasThewHurtadd30() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public int getThewHurtadd30() {
      return thewHurtadd30_;
    }
    
    // optional int32 thew_hurtadd20 = 14 [default = 55];
    public static final int THEW_HURTADD20_FIELD_NUMBER = 14;
    private int thewHurtadd20_;
    public boolean hasThewHurtadd20() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    public int getThewHurtadd20() {
      return thewHurtadd20_;
    }
    
    // optional int32 thew_hurtadd10 = 15 [default = 50];
    public static final int THEW_HURTADD10_FIELD_NUMBER = 15;
    private int thewHurtadd10_;
    public boolean hasThewHurtadd10() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    public int getThewHurtadd10() {
      return thewHurtadd10_;
    }
    
    // optional int32 thew_tool_recover = 16 [default = 150];
    public static final int THEW_TOOL_RECOVER_FIELD_NUMBER = 16;
    private int thewToolRecover_;
    public boolean hasThewToolRecover() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    public int getThewToolRecover() {
      return thewToolRecover_;
    }
    
    // optional int32 thew_tool_allrecover = 17 [default = 170];
    public static final int THEW_TOOL_ALLRECOVER_FIELD_NUMBER = 17;
    private int thewToolAllrecover_;
    public boolean hasThewToolAllrecover() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    public int getThewToolAllrecover() {
      return thewToolAllrecover_;
    }
    
    // optional int32 thew_tool_hidden = 18 [default = 50];
    public static final int THEW_TOOL_HIDDEN_FIELD_NUMBER = 18;
    private int thewToolHidden_;
    public boolean hasThewToolHidden() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    public int getThewToolHidden() {
      return thewToolHidden_;
    }
    
    // optional int32 thew_tool_allhidden = 19 [default = 150];
    public static final int THEW_TOOL_ALLHIDDEN_FIELD_NUMBER = 19;
    private int thewToolAllhidden_;
    public boolean hasThewToolAllhidden() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    public int getThewToolAllhidden() {
      return thewToolAllhidden_;
    }
    
    // optional int32 thew_tool_wind = 20 [default = 50];
    public static final int THEW_TOOL_WIND_FIELD_NUMBER = 20;
    private int thewToolWind_;
    public boolean hasThewToolWind() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    public int getThewToolWind() {
      return thewToolWind_;
    }
    
    // optional int32 thew_tool_ice = 21 [default = 150];
    public static final int THEW_TOOL_ICE_FIELD_NUMBER = 21;
    private int thewToolIce_;
    public boolean hasThewToolIce() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    public int getThewToolIce() {
      return thewToolIce_;
    }
    
    // optional int32 thew_tool_fly = 22 [default = 150];
    public static final int THEW_TOOL_FLY_FIELD_NUMBER = 22;
    private int thewToolFly_;
    public boolean hasThewToolFly() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    public int getThewToolFly() {
      return thewToolFly_;
    }
    
    // optional int32 thew_tool_guide = 23 [default = 120];
    public static final int THEW_TOOL_GUIDE_FIELD_NUMBER = 23;
    private int thewToolGuide_;
    public boolean hasThewToolGuide() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    public int getThewToolGuide() {
      return thewToolGuide_;
    }
    
    // optional int32 thew_tool_energy = 24 [default = 120];
    public static final int THEW_TOOL_ENERGY_FIELD_NUMBER = 24;
    private int thewToolEnergy_;
    public boolean hasThewToolEnergy() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    public int getThewToolEnergy() {
      return thewToolEnergy_;
    }
    
    // optional int32 thew_tool_atom = 25 [default = 110];
    public static final int THEW_TOOL_ATOM_FIELD_NUMBER = 25;
    private int thewToolAtom_;
    public boolean hasThewToolAtom() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    public int getThewToolAtom() {
      return thewToolAtom_;
    }
    
    // optional int32 thew_tool_nohole = 26 [default = 50];
    public static final int THEW_TOOL_NOHOLE_FIELD_NUMBER = 26;
    private int thewToolNohole_;
    public boolean hasThewToolNohole() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    public int getThewToolNohole() {
      return thewToolNohole_;
    }
    
    // optional int32 craft_stone_luck = 27 [default = 20001];
    public static final int CRAFT_STONE_LUCK_FIELD_NUMBER = 27;
    private int craftStoneLuck_;
    public boolean hasCraftStoneLuck() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    public int getCraftStoneLuck() {
      return craftStoneLuck_;
    }
    
    // optional int32 craft_stone_defend = 28 [default = 20002];
    public static final int CRAFT_STONE_DEFEND_FIELD_NUMBER = 28;
    private int craftStoneDefend_;
    public boolean hasCraftStoneDefend() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    public int getCraftStoneDefend() {
      return craftStoneDefend_;
    }
    
    // optional int32 craft_stone_agility = 29 [default = 20003];
    public static final int CRAFT_STONE_AGILITY_FIELD_NUMBER = 29;
    private int craftStoneAgility_;
    public boolean hasCraftStoneAgility() {
      return ((bitField0_ & 0x02000000) == 0x02000000);
    }
    public int getCraftStoneAgility() {
      return craftStoneAgility_;
    }
    
    // optional int32 craft_stone_attack = 30 [default = 20004];
    public static final int CRAFT_STONE_ATTACK_FIELD_NUMBER = 30;
    private int craftStoneAttack_;
    public boolean hasCraftStoneAttack() {
      return ((bitField0_ & 0x04000000) == 0x04000000);
    }
    public int getCraftStoneAttack() {
      return craftStoneAttack_;
    }
    
    // optional int32 craft_stone_strength = 31 [default = 20005];
    public static final int CRAFT_STONE_STRENGTH_FIELD_NUMBER = 31;
    private int craftStoneStrength_;
    public boolean hasCraftStoneStrength() {
      return ((bitField0_ & 0x08000000) == 0x08000000);
    }
    public int getCraftStoneStrength() {
      return craftStoneStrength_;
    }
    
    // optional int32 craft_stone_lucky1 = 32 [default = 24002];
    public static final int CRAFT_STONE_LUCKY1_FIELD_NUMBER = 32;
    private int craftStoneLucky1_;
    public boolean hasCraftStoneLucky1() {
      return ((bitField0_ & 0x10000000) == 0x10000000);
    }
    public int getCraftStoneLucky1() {
      return craftStoneLucky1_;
    }
    
    // optional int32 craft_stone_lucky2 = 33 [default = 24004];
    public static final int CRAFT_STONE_LUCKY2_FIELD_NUMBER = 33;
    private int craftStoneLucky2_;
    public boolean hasCraftStoneLucky2() {
      return ((bitField0_ & 0x20000000) == 0x20000000);
    }
    public int getCraftStoneLucky2() {
      return craftStoneLucky2_;
    }
    
    // optional int32 craft_stone_god = 34 [default = 24001];
    public static final int CRAFT_STONE_GOD_FIELD_NUMBER = 34;
    private int craftStoneGod_;
    public boolean hasCraftStoneGod() {
      return ((bitField0_ & 0x40000000) == 0x40000000);
    }
    public int getCraftStoneGod() {
      return craftStoneGod_;
    }
    
    // optional int32 price_tool_AttackTwoMoreTimes = 35 [default = 1200];
    public static final int PRICE_TOOL_ATTACKTWOMORETIMES_FIELD_NUMBER = 35;
    private int priceToolAttackTwoMoreTimes_;
    public boolean hasPriceToolAttackTwoMoreTimes() {
      return ((bitField0_ & 0x80000000) == 0x80000000);
    }
    public int getPriceToolAttackTwoMoreTimes() {
      return priceToolAttackTwoMoreTimes_;
    }
    
    // optional int32 price_tool_AttackThreeBranch = 36 [default = 1200];
    public static final int PRICE_TOOL_ATTACKTHREEBRANCH_FIELD_NUMBER = 36;
    private int priceToolAttackThreeBranch_;
    public boolean hasPriceToolAttackThreeBranch() {
      return ((bitField1_ & 0x00000001) == 0x00000001);
    }
    public int getPriceToolAttackThreeBranch() {
      return priceToolAttackThreeBranch_;
    }
    
    // optional int32 price_tool_AttackOneMoreTimes = 37 [default = 1200];
    public static final int PRICE_TOOL_ATTACKONEMORETIMES_FIELD_NUMBER = 37;
    private int priceToolAttackOneMoreTimes_;
    public boolean hasPriceToolAttackOneMoreTimes() {
      return ((bitField1_ & 0x00000002) == 0x00000002);
    }
    public int getPriceToolAttackOneMoreTimes() {
      return priceToolAttackOneMoreTimes_;
    }
    
    // optional int32 price_tool_HurtAdd50 = 38 [default = 1200];
    public static final int PRICE_TOOL_HURTADD50_FIELD_NUMBER = 38;
    private int priceToolHurtAdd50_;
    public boolean hasPriceToolHurtAdd50() {
      return ((bitField1_ & 0x00000004) == 0x00000004);
    }
    public int getPriceToolHurtAdd50() {
      return priceToolHurtAdd50_;
    }
    
    // optional int32 price_tool_HurtAdd40 = 39 [default = 1200];
    public static final int PRICE_TOOL_HURTADD40_FIELD_NUMBER = 39;
    private int priceToolHurtAdd40_;
    public boolean hasPriceToolHurtAdd40() {
      return ((bitField1_ & 0x00000008) == 0x00000008);
    }
    public int getPriceToolHurtAdd40() {
      return priceToolHurtAdd40_;
    }
    
    // optional int32 price_tool_HurtAdd30 = 40 [default = 1200];
    public static final int PRICE_TOOL_HURTADD30_FIELD_NUMBER = 40;
    private int priceToolHurtAdd30_;
    public boolean hasPriceToolHurtAdd30() {
      return ((bitField1_ & 0x00000010) == 0x00000010);
    }
    public int getPriceToolHurtAdd30() {
      return priceToolHurtAdd30_;
    }
    
    // optional int32 price_tool_HurtAdd20 = 41 [default = 1200];
    public static final int PRICE_TOOL_HURTADD20_FIELD_NUMBER = 41;
    private int priceToolHurtAdd20_;
    public boolean hasPriceToolHurtAdd20() {
      return ((bitField1_ & 0x00000020) == 0x00000020);
    }
    public int getPriceToolHurtAdd20() {
      return priceToolHurtAdd20_;
    }
    
    // optional int32 price_tool_HurtAdd10 = 42 [default = 1200];
    public static final int PRICE_TOOL_HURTADD10_FIELD_NUMBER = 42;
    private int priceToolHurtAdd10_;
    public boolean hasPriceToolHurtAdd10() {
      return ((bitField1_ & 0x00000040) == 0x00000040);
    }
    public int getPriceToolHurtAdd10() {
      return priceToolHurtAdd10_;
    }
    
    // optional int32 price_tool_Recover = 43 [default = 1200];
    public static final int PRICE_TOOL_RECOVER_FIELD_NUMBER = 43;
    private int priceToolRecover_;
    public boolean hasPriceToolRecover() {
      return ((bitField1_ & 0x00000080) == 0x00000080);
    }
    public int getPriceToolRecover() {
      return priceToolRecover_;
    }
    
    // optional int32 price_tool_AllRecover = 44 [default = 120];
    public static final int PRICE_TOOL_ALLRECOVER_FIELD_NUMBER = 44;
    private int priceToolAllRecover_;
    public boolean hasPriceToolAllRecover() {
      return ((bitField1_ & 0x00000100) == 0x00000100);
    }
    public int getPriceToolAllRecover() {
      return priceToolAllRecover_;
    }
    
    // optional int32 price_tool_Hidden = 45 [default = 1200];
    public static final int PRICE_TOOL_HIDDEN_FIELD_NUMBER = 45;
    private int priceToolHidden_;
    public boolean hasPriceToolHidden() {
      return ((bitField1_ & 0x00000200) == 0x00000200);
    }
    public int getPriceToolHidden() {
      return priceToolHidden_;
    }
    
    // optional int32 price_tool_AllHidden = 46 [default = 1200];
    public static final int PRICE_TOOL_ALLHIDDEN_FIELD_NUMBER = 46;
    private int priceToolAllHidden_;
    public boolean hasPriceToolAllHidden() {
      return ((bitField1_ & 0x00000400) == 0x00000400);
    }
    public int getPriceToolAllHidden() {
      return priceToolAllHidden_;
    }
    
    // optional int32 price_tool_Wind = 47 [default = 1200];
    public static final int PRICE_TOOL_WIND_FIELD_NUMBER = 47;
    private int priceToolWind_;
    public boolean hasPriceToolWind() {
      return ((bitField1_ & 0x00000800) == 0x00000800);
    }
    public int getPriceToolWind() {
      return priceToolWind_;
    }
    
    // optional int32 price_tool_Ice = 48 [default = 1200];
    public static final int PRICE_TOOL_ICE_FIELD_NUMBER = 48;
    private int priceToolIce_;
    public boolean hasPriceToolIce() {
      return ((bitField1_ & 0x00001000) == 0x00001000);
    }
    public int getPriceToolIce() {
      return priceToolIce_;
    }
    
    // optional int32 price_tool_Fly = 49 [default = 1200];
    public static final int PRICE_TOOL_FLY_FIELD_NUMBER = 49;
    private int priceToolFly_;
    public boolean hasPriceToolFly() {
      return ((bitField1_ & 0x00002000) == 0x00002000);
    }
    public int getPriceToolFly() {
      return priceToolFly_;
    }
    
    // optional int32 price_tool_Guide = 50 [default = 1200];
    public static final int PRICE_TOOL_GUIDE_FIELD_NUMBER = 50;
    private int priceToolGuide_;
    public boolean hasPriceToolGuide() {
      return ((bitField1_ & 0x00004000) == 0x00004000);
    }
    public int getPriceToolGuide() {
      return priceToolGuide_;
    }
    
    // optional int32 price_tool_Energy = 51 [default = 1200];
    public static final int PRICE_TOOL_ENERGY_FIELD_NUMBER = 51;
    private int priceToolEnergy_;
    public boolean hasPriceToolEnergy() {
      return ((bitField1_ & 0x00008000) == 0x00008000);
    }
    public int getPriceToolEnergy() {
      return priceToolEnergy_;
    }
    
    // optional int32 price_tool_Atom = 52 [default = 1200];
    public static final int PRICE_TOOL_ATOM_FIELD_NUMBER = 52;
    private int priceToolAtom_;
    public boolean hasPriceToolAtom() {
      return ((bitField1_ & 0x00010000) == 0x00010000);
    }
    public int getPriceToolAtom() {
      return priceToolAtom_;
    }
    
    // optional int32 price_tool_NoHole = 53 [default = 1200];
    public static final int PRICE_TOOL_NOHOLE_FIELD_NUMBER = 53;
    private int priceToolNoHole_;
    public boolean hasPriceToolNoHole() {
      return ((bitField1_ & 0x00020000) == 0x00020000);
    }
    public int getPriceToolNoHole() {
      return priceToolNoHole_;
    }
    
    // optional int32 sell_tool_ = 54 [default = 85];
    public static final int SELL_TOOL__FIELD_NUMBER = 54;
    private int sellTool_;
    public boolean hasSellTool() {
      return ((bitField1_ & 0x00040000) == 0x00040000);
    }
    public int getSellTool() {
      return sellTool_;
    }
    
    // optional int32 price_craft_compose = 55 [default = 2000];
    public static final int PRICE_CRAFT_COMPOSE_FIELD_NUMBER = 55;
    private int priceCraftCompose_;
    public boolean hasPriceCraftCompose() {
      return ((bitField1_ & 0x00080000) == 0x00080000);
    }
    public int getPriceCraftCompose() {
      return priceCraftCompose_;
    }
    
    // optional int32 price_craft_forge = 56 [default = 2000];
    public static final int PRICE_CRAFT_FORGE_FIELD_NUMBER = 56;
    private int priceCraftForge_;
    public boolean hasPriceCraftForge() {
      return ((bitField1_ & 0x00100000) == 0x00100000);
    }
    public int getPriceCraftForge() {
      return priceCraftForge_;
    }
    
    // optional int32 price_craft_transfer = 57 [default = 5000];
    public static final int PRICE_CRAFT_TRANSFER_FIELD_NUMBER = 57;
    private int priceCraftTransfer_;
    public boolean hasPriceCraftTransfer() {
      return ((bitField1_ & 0x00200000) == 0x00200000);
    }
    public int getPriceCraftTransfer() {
      return priceCraftTransfer_;
    }
    
    // optional int32 stone_water_typeid = 58 [default = 20001];
    public static final int STONE_WATER_TYPEID_FIELD_NUMBER = 58;
    private int stoneWaterTypeid_;
    public boolean hasStoneWaterTypeid() {
      return ((bitField1_ & 0x00400000) == 0x00400000);
    }
    public int getStoneWaterTypeid() {
      return stoneWaterTypeid_;
    }
    
    // optional int32 stone_earth_typeid = 59 [default = 20002];
    public static final int STONE_EARTH_TYPEID_FIELD_NUMBER = 59;
    private int stoneEarthTypeid_;
    public boolean hasStoneEarthTypeid() {
      return ((bitField1_ & 0x00800000) == 0x00800000);
    }
    public int getStoneEarthTypeid() {
      return stoneEarthTypeid_;
    }
    
    // optional int32 stone_wing_typeid = 60 [default = 20003];
    public static final int STONE_WING_TYPEID_FIELD_NUMBER = 60;
    private int stoneWingTypeid_;
    public boolean hasStoneWingTypeid() {
      return ((bitField1_ & 0x01000000) == 0x01000000);
    }
    public int getStoneWingTypeid() {
      return stoneWingTypeid_;
    }
    
    // optional int32 stone_fire_typeid = 61 [default = 20004];
    public static final int STONE_FIRE_TYPEID_FIELD_NUMBER = 61;
    private int stoneFireTypeid_;
    public boolean hasStoneFireTypeid() {
      return ((bitField1_ & 0x02000000) == 0x02000000);
    }
    public int getStoneFireTypeid() {
      return stoneFireTypeid_;
    }
    
    // optional int32 stone_strength_typeid = 62 [default = 20005];
    public static final int STONE_STRENGTH_TYPEID_FIELD_NUMBER = 62;
    private int stoneStrengthTypeid_;
    public boolean hasStoneStrengthTypeid() {
      return ((bitField1_ & 0x04000000) == 0x04000000);
    }
    public int getStoneStrengthTypeid() {
      return stoneStrengthTypeid_;
    }
    
    // optional int32 stone_lucky_typeid = 63 [default = 24002];
    public static final int STONE_LUCKY_TYPEID_FIELD_NUMBER = 63;
    private int stoneLuckyTypeid_;
    public boolean hasStoneLuckyTypeid() {
      return ((bitField1_ & 0x08000000) == 0x08000000);
    }
    public int getStoneLuckyTypeid() {
      return stoneLuckyTypeid_;
    }
    
    // optional int32 stone_god_typeid = 64 [default = 24001];
    public static final int STONE_GOD_TYPEID_FIELD_NUMBER = 64;
    private int stoneGodTypeid_;
    public boolean hasStoneGodTypeid() {
      return ((bitField1_ & 0x10000000) == 0x10000000);
    }
    public int getStoneGodTypeid() {
      return stoneGodTypeid_;
    }
    
    // optional int32 stone_func_typeid = 65 [default = 21001];
    public static final int STONE_FUNC_TYPEID_FIELD_NUMBER = 65;
    private int stoneFuncTypeid_;
    public boolean hasStoneFuncTypeid() {
      return ((bitField1_ & 0x20000000) == 0x20000000);
    }
    public int getStoneFuncTypeid() {
      return stoneFuncTypeid_;
    }
    
    // optional int32 stone_ring_typeid = 66 [default = 21006];
    public static final int STONE_RING_TYPEID_FIELD_NUMBER = 66;
    private int stoneRingTypeid_;
    public boolean hasStoneRingTypeid() {
      return ((bitField1_ & 0x40000000) == 0x40000000);
    }
    public int getStoneRingTypeid() {
      return stoneRingTypeid_;
    }
    
    // optional int32 tool_recover_value = 67 [default = 500];
    public static final int TOOL_RECOVER_VALUE_FIELD_NUMBER = 67;
    private int toolRecoverValue_;
    public boolean hasToolRecoverValue() {
      return ((bitField1_ & 0x80000000) == 0x80000000);
    }
    public int getToolRecoverValue() {
      return toolRecoverValue_;
    }
    
    // optional int32 tool_all_recover_value = 68 [default = 300];
    public static final int TOOL_ALL_RECOVER_VALUE_FIELD_NUMBER = 68;
    private int toolAllRecoverValue_;
    public boolean hasToolAllRecoverValue() {
      return ((bitField2_ & 0x00000001) == 0x00000001);
    }
    public int getToolAllRecoverValue() {
      return toolAllRecoverValue_;
    }
    
    // optional int32 tool_energy_value = 69 [default = 100];
    public static final int TOOL_ENERGY_VALUE_FIELD_NUMBER = 69;
    private int toolEnergyValue_;
    public boolean hasToolEnergyValue() {
      return ((bitField2_ & 0x00000002) == 0x00000002);
    }
    public int getToolEnergyValue() {
      return toolEnergyValue_;
    }
    
    // optional int32 tool_iced_value = 70 [default = 3];
    public static final int TOOL_ICED_VALUE_FIELD_NUMBER = 70;
    private int toolIcedValue_;
    public boolean hasToolIcedValue() {
      return ((bitField2_ & 0x00000004) == 0x00000004);
    }
    public int getToolIcedValue() {
      return toolIcedValue_;
    }
    
    // optional int32 tool_hidden_value = 71 [default = 3];
    public static final int TOOL_HIDDEN_VALUE_FIELD_NUMBER = 71;
    private int toolHiddenValue_;
    public boolean hasToolHiddenValue() {
      return ((bitField2_ & 0x00000008) == 0x00000008);
    }
    public int getToolHiddenValue() {
      return toolHiddenValue_;
    }
    
    // optional int32 normal_shop_discount = 72 [default = 100];
    public static final int NORMAL_SHOP_DISCOUNT_FIELD_NUMBER = 72;
    private int normalShopDiscount_;
    public boolean hasNormalShopDiscount() {
      return ((bitField2_ & 0x00000010) == 0x00000010);
    }
    public int getNormalShopDiscount() {
      return normalShopDiscount_;
    }
    
    // optional int32 vip_shop_discount = 73 [default = 80];
    public static final int VIP_SHOP_DISCOUNT_FIELD_NUMBER = 73;
    private int vipShopDiscount_;
    public boolean hasVipShopDiscount() {
      return ((bitField2_ & 0x00000020) == 0x00000020);
    }
    public int getVipShopDiscount() {
      return vipShopDiscount_;
    }
    
    // optional int32 craft_stone_win = 74 [default = 24005];
    public static final int CRAFT_STONE_WIN_FIELD_NUMBER = 74;
    private int craftStoneWin_;
    public boolean hasCraftStoneWin() {
      return ((bitField2_ & 0x00000040) == 0x00000040);
    }
    public int getCraftStoneWin() {
      return craftStoneWin_;
    }
    
    // optional int32 newbie_battle_guide = 75 [default = 5];
    public static final int NEWBIE_BATTLE_GUIDE_FIELD_NUMBER = 75;
    private int newbieBattleGuide_;
    public boolean hasNewbieBattleGuide() {
      return ((bitField2_ & 0x00000080) == 0x00000080);
    }
    public int getNewbieBattleGuide() {
      return newbieBattleGuide_;
    }
    
    // optional int32 craft_stone_diamond = 76 [default = 20031];
    public static final int CRAFT_STONE_DIAMOND_FIELD_NUMBER = 76;
    private int craftStoneDiamond_;
    public boolean hasCraftStoneDiamond() {
      return ((bitField2_ & 0x00000100) == 0x00000100);
    }
    public int getCraftStoneDiamond() {
      return craftStoneDiamond_;
    }
    
    // optional int32 craft_stone_crystal = 77 [default = 20041];
    public static final int CRAFT_STONE_CRYSTAL_FIELD_NUMBER = 77;
    private int craftStoneCrystal_;
    public boolean hasCraftStoneCrystal() {
      return ((bitField2_ & 0x00000200) == 0x00000200);
    }
    public int getCraftStoneCrystal() {
      return craftStoneCrystal_;
    }
    
    private void initFields() {
      battleAttackK_ = 591;
      battleAttackF_ = 750;
      battleAttackG_ = 760;
      thewRoleMove_ = 5;
      thewAttacktwomoretimes_ = 110;
      thewAttackthreebranch_ = 110;
      thewAttackonemoretimes_ = 110;
      thewHurtadd50_ = 85;
      thewHurtadd40_ = 80;
      thewHurtadd30_ = 70;
      thewHurtadd20_ = 55;
      thewHurtadd10_ = 50;
      thewToolRecover_ = 150;
      thewToolAllrecover_ = 170;
      thewToolHidden_ = 50;
      thewToolAllhidden_ = 150;
      thewToolWind_ = 50;
      thewToolIce_ = 150;
      thewToolFly_ = 150;
      thewToolGuide_ = 120;
      thewToolEnergy_ = 120;
      thewToolAtom_ = 110;
      thewToolNohole_ = 50;
      craftStoneLuck_ = 20001;
      craftStoneDefend_ = 20002;
      craftStoneAgility_ = 20003;
      craftStoneAttack_ = 20004;
      craftStoneStrength_ = 20005;
      craftStoneLucky1_ = 24002;
      craftStoneLucky2_ = 24004;
      craftStoneGod_ = 24001;
      priceToolAttackTwoMoreTimes_ = 1200;
      priceToolAttackThreeBranch_ = 1200;
      priceToolAttackOneMoreTimes_ = 1200;
      priceToolHurtAdd50_ = 1200;
      priceToolHurtAdd40_ = 1200;
      priceToolHurtAdd30_ = 1200;
      priceToolHurtAdd20_ = 1200;
      priceToolHurtAdd10_ = 1200;
      priceToolRecover_ = 1200;
      priceToolAllRecover_ = 120;
      priceToolHidden_ = 1200;
      priceToolAllHidden_ = 1200;
      priceToolWind_ = 1200;
      priceToolIce_ = 1200;
      priceToolFly_ = 1200;
      priceToolGuide_ = 1200;
      priceToolEnergy_ = 1200;
      priceToolAtom_ = 1200;
      priceToolNoHole_ = 1200;
      sellTool_ = 85;
      priceCraftCompose_ = 2000;
      priceCraftForge_ = 2000;
      priceCraftTransfer_ = 5000;
      stoneWaterTypeid_ = 20001;
      stoneEarthTypeid_ = 20002;
      stoneWingTypeid_ = 20003;
      stoneFireTypeid_ = 20004;
      stoneStrengthTypeid_ = 20005;
      stoneLuckyTypeid_ = 24002;
      stoneGodTypeid_ = 24001;
      stoneFuncTypeid_ = 21001;
      stoneRingTypeid_ = 21006;
      toolRecoverValue_ = 500;
      toolAllRecoverValue_ = 300;
      toolEnergyValue_ = 100;
      toolIcedValue_ = 3;
      toolHiddenValue_ = 3;
      normalShopDiscount_ = 100;
      vipShopDiscount_ = 80;
      craftStoneWin_ = 24005;
      newbieBattleGuide_ = 5;
      craftStoneDiamond_ = 20031;
      craftStoneCrystal_ = 20041;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, battleAttackK_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, battleAttackF_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, battleAttackG_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(7, thewRoleMove_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(8, thewAttacktwomoretimes_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(9, thewAttackthreebranch_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(10, thewAttackonemoretimes_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(11, thewHurtadd50_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(12, thewHurtadd40_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(13, thewHurtadd30_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(14, thewHurtadd20_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(15, thewHurtadd10_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(16, thewToolRecover_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(17, thewToolAllrecover_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(18, thewToolHidden_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(19, thewToolAllhidden_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeInt32(20, thewToolWind_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeInt32(21, thewToolIce_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeInt32(22, thewToolFly_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeInt32(23, thewToolGuide_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeInt32(24, thewToolEnergy_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeInt32(25, thewToolAtom_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeInt32(26, thewToolNohole_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeInt32(27, craftStoneLuck_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        output.writeInt32(28, craftStoneDefend_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        output.writeInt32(29, craftStoneAgility_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        output.writeInt32(30, craftStoneAttack_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        output.writeInt32(31, craftStoneStrength_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        output.writeInt32(32, craftStoneLucky1_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        output.writeInt32(33, craftStoneLucky2_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        output.writeInt32(34, craftStoneGod_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        output.writeInt32(35, priceToolAttackTwoMoreTimes_);
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(36, priceToolAttackThreeBranch_);
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(37, priceToolAttackOneMoreTimes_);
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(38, priceToolHurtAdd50_);
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(39, priceToolHurtAdd40_);
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(40, priceToolHurtAdd30_);
      }
      if (((bitField1_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(41, priceToolHurtAdd20_);
      }
      if (((bitField1_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(42, priceToolHurtAdd10_);
      }
      if (((bitField1_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(43, priceToolRecover_);
      }
      if (((bitField1_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(44, priceToolAllRecover_);
      }
      if (((bitField1_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(45, priceToolHidden_);
      }
      if (((bitField1_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(46, priceToolAllHidden_);
      }
      if (((bitField1_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(47, priceToolWind_);
      }
      if (((bitField1_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(48, priceToolIce_);
      }
      if (((bitField1_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(49, priceToolFly_);
      }
      if (((bitField1_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(50, priceToolGuide_);
      }
      if (((bitField1_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(51, priceToolEnergy_);
      }
      if (((bitField1_ & 0x00010000) == 0x00010000)) {
        output.writeInt32(52, priceToolAtom_);
      }
      if (((bitField1_ & 0x00020000) == 0x00020000)) {
        output.writeInt32(53, priceToolNoHole_);
      }
      if (((bitField1_ & 0x00040000) == 0x00040000)) {
        output.writeInt32(54, sellTool_);
      }
      if (((bitField1_ & 0x00080000) == 0x00080000)) {
        output.writeInt32(55, priceCraftCompose_);
      }
      if (((bitField1_ & 0x00100000) == 0x00100000)) {
        output.writeInt32(56, priceCraftForge_);
      }
      if (((bitField1_ & 0x00200000) == 0x00200000)) {
        output.writeInt32(57, priceCraftTransfer_);
      }
      if (((bitField1_ & 0x00400000) == 0x00400000)) {
        output.writeInt32(58, stoneWaterTypeid_);
      }
      if (((bitField1_ & 0x00800000) == 0x00800000)) {
        output.writeInt32(59, stoneEarthTypeid_);
      }
      if (((bitField1_ & 0x01000000) == 0x01000000)) {
        output.writeInt32(60, stoneWingTypeid_);
      }
      if (((bitField1_ & 0x02000000) == 0x02000000)) {
        output.writeInt32(61, stoneFireTypeid_);
      }
      if (((bitField1_ & 0x04000000) == 0x04000000)) {
        output.writeInt32(62, stoneStrengthTypeid_);
      }
      if (((bitField1_ & 0x08000000) == 0x08000000)) {
        output.writeInt32(63, stoneLuckyTypeid_);
      }
      if (((bitField1_ & 0x10000000) == 0x10000000)) {
        output.writeInt32(64, stoneGodTypeid_);
      }
      if (((bitField1_ & 0x20000000) == 0x20000000)) {
        output.writeInt32(65, stoneFuncTypeid_);
      }
      if (((bitField1_ & 0x40000000) == 0x40000000)) {
        output.writeInt32(66, stoneRingTypeid_);
      }
      if (((bitField1_ & 0x80000000) == 0x80000000)) {
        output.writeInt32(67, toolRecoverValue_);
      }
      if (((bitField2_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(68, toolAllRecoverValue_);
      }
      if (((bitField2_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(69, toolEnergyValue_);
      }
      if (((bitField2_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(70, toolIcedValue_);
      }
      if (((bitField2_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(71, toolHiddenValue_);
      }
      if (((bitField2_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(72, normalShopDiscount_);
      }
      if (((bitField2_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(73, vipShopDiscount_);
      }
      if (((bitField2_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(74, craftStoneWin_);
      }
      if (((bitField2_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(75, newbieBattleGuide_);
      }
      if (((bitField2_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(76, craftStoneDiamond_);
      }
      if (((bitField2_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(77, craftStoneCrystal_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, battleAttackK_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, battleAttackF_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, battleAttackG_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, thewRoleMove_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, thewAttacktwomoretimes_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, thewAttackthreebranch_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, thewAttackonemoretimes_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, thewHurtadd50_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, thewHurtadd40_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, thewHurtadd30_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, thewHurtadd20_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, thewHurtadd10_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, thewToolRecover_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, thewToolAllrecover_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, thewToolHidden_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, thewToolAllhidden_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(20, thewToolWind_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(21, thewToolIce_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(22, thewToolFly_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(23, thewToolGuide_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(24, thewToolEnergy_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(25, thewToolAtom_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(26, thewToolNohole_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(27, craftStoneLuck_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(28, craftStoneDefend_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(29, craftStoneAgility_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(30, craftStoneAttack_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(31, craftStoneStrength_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(32, craftStoneLucky1_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(33, craftStoneLucky2_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(34, craftStoneGod_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(35, priceToolAttackTwoMoreTimes_);
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(36, priceToolAttackThreeBranch_);
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(37, priceToolAttackOneMoreTimes_);
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(38, priceToolHurtAdd50_);
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(39, priceToolHurtAdd40_);
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(40, priceToolHurtAdd30_);
      }
      if (((bitField1_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(41, priceToolHurtAdd20_);
      }
      if (((bitField1_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(42, priceToolHurtAdd10_);
      }
      if (((bitField1_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(43, priceToolRecover_);
      }
      if (((bitField1_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(44, priceToolAllRecover_);
      }
      if (((bitField1_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(45, priceToolHidden_);
      }
      if (((bitField1_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(46, priceToolAllHidden_);
      }
      if (((bitField1_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(47, priceToolWind_);
      }
      if (((bitField1_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(48, priceToolIce_);
      }
      if (((bitField1_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(49, priceToolFly_);
      }
      if (((bitField1_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(50, priceToolGuide_);
      }
      if (((bitField1_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(51, priceToolEnergy_);
      }
      if (((bitField1_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(52, priceToolAtom_);
      }
      if (((bitField1_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(53, priceToolNoHole_);
      }
      if (((bitField1_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(54, sellTool_);
      }
      if (((bitField1_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(55, priceCraftCompose_);
      }
      if (((bitField1_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(56, priceCraftForge_);
      }
      if (((bitField1_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(57, priceCraftTransfer_);
      }
      if (((bitField1_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(58, stoneWaterTypeid_);
      }
      if (((bitField1_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(59, stoneEarthTypeid_);
      }
      if (((bitField1_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(60, stoneWingTypeid_);
      }
      if (((bitField1_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(61, stoneFireTypeid_);
      }
      if (((bitField1_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(62, stoneStrengthTypeid_);
      }
      if (((bitField1_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(63, stoneLuckyTypeid_);
      }
      if (((bitField1_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(64, stoneGodTypeid_);
      }
      if (((bitField1_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(65, stoneFuncTypeid_);
      }
      if (((bitField1_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(66, stoneRingTypeid_);
      }
      if (((bitField1_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(67, toolRecoverValue_);
      }
      if (((bitField2_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(68, toolAllRecoverValue_);
      }
      if (((bitField2_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(69, toolEnergyValue_);
      }
      if (((bitField2_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(70, toolIcedValue_);
      }
      if (((bitField2_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(71, toolHiddenValue_);
      }
      if (((bitField2_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(72, normalShopDiscount_);
      }
      if (((bitField2_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(73, vipShopDiscount_);
      }
      if (((bitField2_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(74, craftStoneWin_);
      }
      if (((bitField2_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(75, newbieBattleGuide_);
      }
      if (((bitField2_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(76, craftStoneDiamond_);
      }
      if (((bitField2_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(77, craftStoneCrystal_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.xinqihd.sns.gameserver.proto.XinqiBseGameDataKey.BseGameDataKey parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiBseGameDataKey.BseGameDataKey parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiBseGameDataKey.BseGameDataKey parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiBseGameDataKey.BseGameDataKey parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiBseGameDataKey.BseGameDataKey parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiBseGameDataKey.BseGameDataKey parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiBseGameDataKey.BseGameDataKey parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiBseGameDataKey.BseGameDataKey parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiBseGameDataKey.BseGameDataKey parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiBseGameDataKey.BseGameDataKey parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.xinqihd.sns.gameserver.proto.XinqiBseGameDataKey.BseGameDataKey prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.xinqihd.sns.gameserver.proto.XinqiBseGameDataKey.BseGameDataKeyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.xinqihd.sns.gameserver.proto.XinqiBseGameDataKey.internal_static_com_xinqihd_sns_gameserver_proto_BseGameDataKey_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.xinqihd.sns.gameserver.proto.XinqiBseGameDataKey.internal_static_com_xinqihd_sns_gameserver_proto_BseGameDataKey_fieldAccessorTable;
      }
      
      // Construct using com.xinqihd.sns.gameserver.proto.XinqiBseGameDataKey.BseGameDataKey.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        battleAttackK_ = 591;
        bitField0_ = (bitField0_ & ~0x00000001);
        battleAttackF_ = 750;
        bitField0_ = (bitField0_ & ~0x00000002);
        battleAttackG_ = 760;
        bitField0_ = (bitField0_ & ~0x00000004);
        thewRoleMove_ = 5;
        bitField0_ = (bitField0_ & ~0x00000008);
        thewAttacktwomoretimes_ = 110;
        bitField0_ = (bitField0_ & ~0x00000010);
        thewAttackthreebranch_ = 110;
        bitField0_ = (bitField0_ & ~0x00000020);
        thewAttackonemoretimes_ = 110;
        bitField0_ = (bitField0_ & ~0x00000040);
        thewHurtadd50_ = 85;
        bitField0_ = (bitField0_ & ~0x00000080);
        thewHurtadd40_ = 80;
        bitField0_ = (bitField0_ & ~0x00000100);
        thewHurtadd30_ = 70;
        bitField0_ = (bitField0_ & ~0x00000200);
        thewHurtadd20_ = 55;
        bitField0_ = (bitField0_ & ~0x00000400);
        thewHurtadd10_ = 50;
        bitField0_ = (bitField0_ & ~0x00000800);
        thewToolRecover_ = 150;
        bitField0_ = (bitField0_ & ~0x00001000);
        thewToolAllrecover_ = 170;
        bitField0_ = (bitField0_ & ~0x00002000);
        thewToolHidden_ = 50;
        bitField0_ = (bitField0_ & ~0x00004000);
        thewToolAllhidden_ = 150;
        bitField0_ = (bitField0_ & ~0x00008000);
        thewToolWind_ = 50;
        bitField0_ = (bitField0_ & ~0x00010000);
        thewToolIce_ = 150;
        bitField0_ = (bitField0_ & ~0x00020000);
        thewToolFly_ = 150;
        bitField0_ = (bitField0_ & ~0x00040000);
        thewToolGuide_ = 120;
        bitField0_ = (bitField0_ & ~0x00080000);
        thewToolEnergy_ = 120;
        bitField0_ = (bitField0_ & ~0x00100000);
        thewToolAtom_ = 110;
        bitField0_ = (bitField0_ & ~0x00200000);
        thewToolNohole_ = 50;
        bitField0_ = (bitField0_ & ~0x00400000);
        craftStoneLuck_ = 20001;
        bitField0_ = (bitField0_ & ~0x00800000);
        craftStoneDefend_ = 20002;
        bitField0_ = (bitField0_ & ~0x01000000);
        craftStoneAgility_ = 20003;
        bitField0_ = (bitField0_ & ~0x02000000);
        craftStoneAttack_ = 20004;
        bitField0_ = (bitField0_ & ~0x04000000);
        craftStoneStrength_ = 20005;
        bitField0_ = (bitField0_ & ~0x08000000);
        craftStoneLucky1_ = 24002;
        bitField0_ = (bitField0_ & ~0x10000000);
        craftStoneLucky2_ = 24004;
        bitField0_ = (bitField0_ & ~0x20000000);
        craftStoneGod_ = 24001;
        bitField0_ = (bitField0_ & ~0x40000000);
        priceToolAttackTwoMoreTimes_ = 1200;
        bitField0_ = (bitField0_ & ~0x80000000);
        priceToolAttackThreeBranch_ = 1200;
        bitField1_ = (bitField1_ & ~0x00000001);
        priceToolAttackOneMoreTimes_ = 1200;
        bitField1_ = (bitField1_ & ~0x00000002);
        priceToolHurtAdd50_ = 1200;
        bitField1_ = (bitField1_ & ~0x00000004);
        priceToolHurtAdd40_ = 1200;
        bitField1_ = (bitField1_ & ~0x00000008);
        priceToolHurtAdd30_ = 1200;
        bitField1_ = (bitField1_ & ~0x00000010);
        priceToolHurtAdd20_ = 1200;
        bitField1_ = (bitField1_ & ~0x00000020);
        priceToolHurtAdd10_ = 1200;
        bitField1_ = (bitField1_ & ~0x00000040);
        priceToolRecover_ = 1200;
        bitField1_ = (bitField1_ & ~0x00000080);
        priceToolAllRecover_ = 120;
        bitField1_ = (bitField1_ & ~0x00000100);
        priceToolHidden_ = 1200;
        bitField1_ = (bitField1_ & ~0x00000200);
        priceToolAllHidden_ = 1200;
        bitField1_ = (bitField1_ & ~0x00000400);
        priceToolWind_ = 1200;
        bitField1_ = (bitField1_ & ~0x00000800);
        priceToolIce_ = 1200;
        bitField1_ = (bitField1_ & ~0x00001000);
        priceToolFly_ = 1200;
        bitField1_ = (bitField1_ & ~0x00002000);
        priceToolGuide_ = 1200;
        bitField1_ = (bitField1_ & ~0x00004000);
        priceToolEnergy_ = 1200;
        bitField1_ = (bitField1_ & ~0x00008000);
        priceToolAtom_ = 1200;
        bitField1_ = (bitField1_ & ~0x00010000);
        priceToolNoHole_ = 1200;
        bitField1_ = (bitField1_ & ~0x00020000);
        sellTool_ = 85;
        bitField1_ = (bitField1_ & ~0x00040000);
        priceCraftCompose_ = 2000;
        bitField1_ = (bitField1_ & ~0x00080000);
        priceCraftForge_ = 2000;
        bitField1_ = (bitField1_ & ~0x00100000);
        priceCraftTransfer_ = 5000;
        bitField1_ = (bitField1_ & ~0x00200000);
        stoneWaterTypeid_ = 20001;
        bitField1_ = (bitField1_ & ~0x00400000);
        stoneEarthTypeid_ = 20002;
        bitField1_ = (bitField1_ & ~0x00800000);
        stoneWingTypeid_ = 20003;
        bitField1_ = (bitField1_ & ~0x01000000);
        stoneFireTypeid_ = 20004;
        bitField1_ = (bitField1_ & ~0x02000000);
        stoneStrengthTypeid_ = 20005;
        bitField1_ = (bitField1_ & ~0x04000000);
        stoneLuckyTypeid_ = 24002;
        bitField1_ = (bitField1_ & ~0x08000000);
        stoneGodTypeid_ = 24001;
        bitField1_ = (bitField1_ & ~0x10000000);
        stoneFuncTypeid_ = 21001;
        bitField1_ = (bitField1_ & ~0x20000000);
        stoneRingTypeid_ = 21006;
        bitField1_ = (bitField1_ & ~0x40000000);
        toolRecoverValue_ = 500;
        bitField1_ = (bitField1_ & ~0x80000000);
        toolAllRecoverValue_ = 300;
        bitField2_ = (bitField2_ & ~0x00000001);
        toolEnergyValue_ = 100;
        bitField2_ = (bitField2_ & ~0x00000002);
        toolIcedValue_ = 3;
        bitField2_ = (bitField2_ & ~0x00000004);
        toolHiddenValue_ = 3;
        bitField2_ = (bitField2_ & ~0x00000008);
        normalShopDiscount_ = 100;
        bitField2_ = (bitField2_ & ~0x00000010);
        vipShopDiscount_ = 80;
        bitField2_ = (bitField2_ & ~0x00000020);
        craftStoneWin_ = 24005;
        bitField2_ = (bitField2_ & ~0x00000040);
        newbieBattleGuide_ = 5;
        bitField2_ = (bitField2_ & ~0x00000080);
        craftStoneDiamond_ = 20031;
        bitField2_ = (bitField2_ & ~0x00000100);
        craftStoneCrystal_ = 20041;
        bitField2_ = (bitField2_ & ~0x00000200);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.xinqihd.sns.gameserver.proto.XinqiBseGameDataKey.BseGameDataKey.getDescriptor();
      }
      
      public com.xinqihd.sns.gameserver.proto.XinqiBseGameDataKey.BseGameDataKey getDefaultInstanceForType() {
        return com.xinqihd.sns.gameserver.proto.XinqiBseGameDataKey.BseGameDataKey.getDefaultInstance();
      }
      
      public com.xinqihd.sns.gameserver.proto.XinqiBseGameDataKey.BseGameDataKey build() {
        com.xinqihd.sns.gameserver.proto.XinqiBseGameDataKey.BseGameDataKey result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.xinqihd.sns.gameserver.proto.XinqiBseGameDataKey.BseGameDataKey buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.xinqihd.sns.gameserver.proto.XinqiBseGameDataKey.BseGameDataKey result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.xinqihd.sns.gameserver.proto.XinqiBseGameDataKey.BseGameDataKey buildPartial() {
        com.xinqihd.sns.gameserver.proto.XinqiBseGameDataKey.BseGameDataKey result = new com.xinqihd.sns.gameserver.proto.XinqiBseGameDataKey.BseGameDataKey(this);
        int from_bitField0_ = bitField0_;
        int from_bitField1_ = bitField1_;
        int from_bitField2_ = bitField2_;
        int to_bitField0_ = 0;
        int to_bitField1_ = 0;
        int to_bitField2_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.battleAttackK_ = battleAttackK_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.battleAttackF_ = battleAttackF_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.battleAttackG_ = battleAttackG_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.thewRoleMove_ = thewRoleMove_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.thewAttacktwomoretimes_ = thewAttacktwomoretimes_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.thewAttackthreebranch_ = thewAttackthreebranch_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.thewAttackonemoretimes_ = thewAttackonemoretimes_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.thewHurtadd50_ = thewHurtadd50_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.thewHurtadd40_ = thewHurtadd40_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.thewHurtadd30_ = thewHurtadd30_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.thewHurtadd20_ = thewHurtadd20_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.thewHurtadd10_ = thewHurtadd10_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.thewToolRecover_ = thewToolRecover_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.thewToolAllrecover_ = thewToolAllrecover_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.thewToolHidden_ = thewToolHidden_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.thewToolAllhidden_ = thewToolAllhidden_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.thewToolWind_ = thewToolWind_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.thewToolIce_ = thewToolIce_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.thewToolFly_ = thewToolFly_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.thewToolGuide_ = thewToolGuide_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.thewToolEnergy_ = thewToolEnergy_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.thewToolAtom_ = thewToolAtom_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00400000;
        }
        result.thewToolNohole_ = thewToolNohole_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00800000;
        }
        result.craftStoneLuck_ = craftStoneLuck_;
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x01000000;
        }
        result.craftStoneDefend_ = craftStoneDefend_;
        if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
          to_bitField0_ |= 0x02000000;
        }
        result.craftStoneAgility_ = craftStoneAgility_;
        if (((from_bitField0_ & 0x04000000) == 0x04000000)) {
          to_bitField0_ |= 0x04000000;
        }
        result.craftStoneAttack_ = craftStoneAttack_;
        if (((from_bitField0_ & 0x08000000) == 0x08000000)) {
          to_bitField0_ |= 0x08000000;
        }
        result.craftStoneStrength_ = craftStoneStrength_;
        if (((from_bitField0_ & 0x10000000) == 0x10000000)) {
          to_bitField0_ |= 0x10000000;
        }
        result.craftStoneLucky1_ = craftStoneLucky1_;
        if (((from_bitField0_ & 0x20000000) == 0x20000000)) {
          to_bitField0_ |= 0x20000000;
        }
        result.craftStoneLucky2_ = craftStoneLucky2_;
        if (((from_bitField0_ & 0x40000000) == 0x40000000)) {
          to_bitField0_ |= 0x40000000;
        }
        result.craftStoneGod_ = craftStoneGod_;
        if (((from_bitField0_ & 0x80000000) == 0x80000000)) {
          to_bitField0_ |= 0x80000000;
        }
        result.priceToolAttackTwoMoreTimes_ = priceToolAttackTwoMoreTimes_;
        if (((from_bitField1_ & 0x00000001) == 0x00000001)) {
          to_bitField1_ |= 0x00000001;
        }
        result.priceToolAttackThreeBranch_ = priceToolAttackThreeBranch_;
        if (((from_bitField1_ & 0x00000002) == 0x00000002)) {
          to_bitField1_ |= 0x00000002;
        }
        result.priceToolAttackOneMoreTimes_ = priceToolAttackOneMoreTimes_;
        if (((from_bitField1_ & 0x00000004) == 0x00000004)) {
          to_bitField1_ |= 0x00000004;
        }
        result.priceToolHurtAdd50_ = priceToolHurtAdd50_;
        if (((from_bitField1_ & 0x00000008) == 0x00000008)) {
          to_bitField1_ |= 0x00000008;
        }
        result.priceToolHurtAdd40_ = priceToolHurtAdd40_;
        if (((from_bitField1_ & 0x00000010) == 0x00000010)) {
          to_bitField1_ |= 0x00000010;
        }
        result.priceToolHurtAdd30_ = priceToolHurtAdd30_;
        if (((from_bitField1_ & 0x00000020) == 0x00000020)) {
          to_bitField1_ |= 0x00000020;
        }
        result.priceToolHurtAdd20_ = priceToolHurtAdd20_;
        if (((from_bitField1_ & 0x00000040) == 0x00000040)) {
          to_bitField1_ |= 0x00000040;
        }
        result.priceToolHurtAdd10_ = priceToolHurtAdd10_;
        if (((from_bitField1_ & 0x00000080) == 0x00000080)) {
          to_bitField1_ |= 0x00000080;
        }
        result.priceToolRecover_ = priceToolRecover_;
        if (((from_bitField1_ & 0x00000100) == 0x00000100)) {
          to_bitField1_ |= 0x00000100;
        }
        result.priceToolAllRecover_ = priceToolAllRecover_;
        if (((from_bitField1_ & 0x00000200) == 0x00000200)) {
          to_bitField1_ |= 0x00000200;
        }
        result.priceToolHidden_ = priceToolHidden_;
        if (((from_bitField1_ & 0x00000400) == 0x00000400)) {
          to_bitField1_ |= 0x00000400;
        }
        result.priceToolAllHidden_ = priceToolAllHidden_;
        if (((from_bitField1_ & 0x00000800) == 0x00000800)) {
          to_bitField1_ |= 0x00000800;
        }
        result.priceToolWind_ = priceToolWind_;
        if (((from_bitField1_ & 0x00001000) == 0x00001000)) {
          to_bitField1_ |= 0x00001000;
        }
        result.priceToolIce_ = priceToolIce_;
        if (((from_bitField1_ & 0x00002000) == 0x00002000)) {
          to_bitField1_ |= 0x00002000;
        }
        result.priceToolFly_ = priceToolFly_;
        if (((from_bitField1_ & 0x00004000) == 0x00004000)) {
          to_bitField1_ |= 0x00004000;
        }
        result.priceToolGuide_ = priceToolGuide_;
        if (((from_bitField1_ & 0x00008000) == 0x00008000)) {
          to_bitField1_ |= 0x00008000;
        }
        result.priceToolEnergy_ = priceToolEnergy_;
        if (((from_bitField1_ & 0x00010000) == 0x00010000)) {
          to_bitField1_ |= 0x00010000;
        }
        result.priceToolAtom_ = priceToolAtom_;
        if (((from_bitField1_ & 0x00020000) == 0x00020000)) {
          to_bitField1_ |= 0x00020000;
        }
        result.priceToolNoHole_ = priceToolNoHole_;
        if (((from_bitField1_ & 0x00040000) == 0x00040000)) {
          to_bitField1_ |= 0x00040000;
        }
        result.sellTool_ = sellTool_;
        if (((from_bitField1_ & 0x00080000) == 0x00080000)) {
          to_bitField1_ |= 0x00080000;
        }
        result.priceCraftCompose_ = priceCraftCompose_;
        if (((from_bitField1_ & 0x00100000) == 0x00100000)) {
          to_bitField1_ |= 0x00100000;
        }
        result.priceCraftForge_ = priceCraftForge_;
        if (((from_bitField1_ & 0x00200000) == 0x00200000)) {
          to_bitField1_ |= 0x00200000;
        }
        result.priceCraftTransfer_ = priceCraftTransfer_;
        if (((from_bitField1_ & 0x00400000) == 0x00400000)) {
          to_bitField1_ |= 0x00400000;
        }
        result.stoneWaterTypeid_ = stoneWaterTypeid_;
        if (((from_bitField1_ & 0x00800000) == 0x00800000)) {
          to_bitField1_ |= 0x00800000;
        }
        result.stoneEarthTypeid_ = stoneEarthTypeid_;
        if (((from_bitField1_ & 0x01000000) == 0x01000000)) {
          to_bitField1_ |= 0x01000000;
        }
        result.stoneWingTypeid_ = stoneWingTypeid_;
        if (((from_bitField1_ & 0x02000000) == 0x02000000)) {
          to_bitField1_ |= 0x02000000;
        }
        result.stoneFireTypeid_ = stoneFireTypeid_;
        if (((from_bitField1_ & 0x04000000) == 0x04000000)) {
          to_bitField1_ |= 0x04000000;
        }
        result.stoneStrengthTypeid_ = stoneStrengthTypeid_;
        if (((from_bitField1_ & 0x08000000) == 0x08000000)) {
          to_bitField1_ |= 0x08000000;
        }
        result.stoneLuckyTypeid_ = stoneLuckyTypeid_;
        if (((from_bitField1_ & 0x10000000) == 0x10000000)) {
          to_bitField1_ |= 0x10000000;
        }
        result.stoneGodTypeid_ = stoneGodTypeid_;
        if (((from_bitField1_ & 0x20000000) == 0x20000000)) {
          to_bitField1_ |= 0x20000000;
        }
        result.stoneFuncTypeid_ = stoneFuncTypeid_;
        if (((from_bitField1_ & 0x40000000) == 0x40000000)) {
          to_bitField1_ |= 0x40000000;
        }
        result.stoneRingTypeid_ = stoneRingTypeid_;
        if (((from_bitField1_ & 0x80000000) == 0x80000000)) {
          to_bitField1_ |= 0x80000000;
        }
        result.toolRecoverValue_ = toolRecoverValue_;
        if (((from_bitField2_ & 0x00000001) == 0x00000001)) {
          to_bitField2_ |= 0x00000001;
        }
        result.toolAllRecoverValue_ = toolAllRecoverValue_;
        if (((from_bitField2_ & 0x00000002) == 0x00000002)) {
          to_bitField2_ |= 0x00000002;
        }
        result.toolEnergyValue_ = toolEnergyValue_;
        if (((from_bitField2_ & 0x00000004) == 0x00000004)) {
          to_bitField2_ |= 0x00000004;
        }
        result.toolIcedValue_ = toolIcedValue_;
        if (((from_bitField2_ & 0x00000008) == 0x00000008)) {
          to_bitField2_ |= 0x00000008;
        }
        result.toolHiddenValue_ = toolHiddenValue_;
        if (((from_bitField2_ & 0x00000010) == 0x00000010)) {
          to_bitField2_ |= 0x00000010;
        }
        result.normalShopDiscount_ = normalShopDiscount_;
        if (((from_bitField2_ & 0x00000020) == 0x00000020)) {
          to_bitField2_ |= 0x00000020;
        }
        result.vipShopDiscount_ = vipShopDiscount_;
        if (((from_bitField2_ & 0x00000040) == 0x00000040)) {
          to_bitField2_ |= 0x00000040;
        }
        result.craftStoneWin_ = craftStoneWin_;
        if (((from_bitField2_ & 0x00000080) == 0x00000080)) {
          to_bitField2_ |= 0x00000080;
        }
        result.newbieBattleGuide_ = newbieBattleGuide_;
        if (((from_bitField2_ & 0x00000100) == 0x00000100)) {
          to_bitField2_ |= 0x00000100;
        }
        result.craftStoneDiamond_ = craftStoneDiamond_;
        if (((from_bitField2_ & 0x00000200) == 0x00000200)) {
          to_bitField2_ |= 0x00000200;
        }
        result.craftStoneCrystal_ = craftStoneCrystal_;
        result.bitField0_ = to_bitField0_;
        result.bitField1_ = to_bitField1_;
        result.bitField2_ = to_bitField2_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.xinqihd.sns.gameserver.proto.XinqiBseGameDataKey.BseGameDataKey) {
          return mergeFrom((com.xinqihd.sns.gameserver.proto.XinqiBseGameDataKey.BseGameDataKey)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.xinqihd.sns.gameserver.proto.XinqiBseGameDataKey.BseGameDataKey other) {
        if (other == com.xinqihd.sns.gameserver.proto.XinqiBseGameDataKey.BseGameDataKey.getDefaultInstance()) return this;
        if (other.hasBattleAttackK()) {
          setBattleAttackK(other.getBattleAttackK());
        }
        if (other.hasBattleAttackF()) {
          setBattleAttackF(other.getBattleAttackF());
        }
        if (other.hasBattleAttackG()) {
          setBattleAttackG(other.getBattleAttackG());
        }
        if (other.hasThewRoleMove()) {
          setThewRoleMove(other.getThewRoleMove());
        }
        if (other.hasThewAttacktwomoretimes()) {
          setThewAttacktwomoretimes(other.getThewAttacktwomoretimes());
        }
        if (other.hasThewAttackthreebranch()) {
          setThewAttackthreebranch(other.getThewAttackthreebranch());
        }
        if (other.hasThewAttackonemoretimes()) {
          setThewAttackonemoretimes(other.getThewAttackonemoretimes());
        }
        if (other.hasThewHurtadd50()) {
          setThewHurtadd50(other.getThewHurtadd50());
        }
        if (other.hasThewHurtadd40()) {
          setThewHurtadd40(other.getThewHurtadd40());
        }
        if (other.hasThewHurtadd30()) {
          setThewHurtadd30(other.getThewHurtadd30());
        }
        if (other.hasThewHurtadd20()) {
          setThewHurtadd20(other.getThewHurtadd20());
        }
        if (other.hasThewHurtadd10()) {
          setThewHurtadd10(other.getThewHurtadd10());
        }
        if (other.hasThewToolRecover()) {
          setThewToolRecover(other.getThewToolRecover());
        }
        if (other.hasThewToolAllrecover()) {
          setThewToolAllrecover(other.getThewToolAllrecover());
        }
        if (other.hasThewToolHidden()) {
          setThewToolHidden(other.getThewToolHidden());
        }
        if (other.hasThewToolAllhidden()) {
          setThewToolAllhidden(other.getThewToolAllhidden());
        }
        if (other.hasThewToolWind()) {
          setThewToolWind(other.getThewToolWind());
        }
        if (other.hasThewToolIce()) {
          setThewToolIce(other.getThewToolIce());
        }
        if (other.hasThewToolFly()) {
          setThewToolFly(other.getThewToolFly());
        }
        if (other.hasThewToolGuide()) {
          setThewToolGuide(other.getThewToolGuide());
        }
        if (other.hasThewToolEnergy()) {
          setThewToolEnergy(other.getThewToolEnergy());
        }
        if (other.hasThewToolAtom()) {
          setThewToolAtom(other.getThewToolAtom());
        }
        if (other.hasThewToolNohole()) {
          setThewToolNohole(other.getThewToolNohole());
        }
        if (other.hasCraftStoneLuck()) {
          setCraftStoneLuck(other.getCraftStoneLuck());
        }
        if (other.hasCraftStoneDefend()) {
          setCraftStoneDefend(other.getCraftStoneDefend());
        }
        if (other.hasCraftStoneAgility()) {
          setCraftStoneAgility(other.getCraftStoneAgility());
        }
        if (other.hasCraftStoneAttack()) {
          setCraftStoneAttack(other.getCraftStoneAttack());
        }
        if (other.hasCraftStoneStrength()) {
          setCraftStoneStrength(other.getCraftStoneStrength());
        }
        if (other.hasCraftStoneLucky1()) {
          setCraftStoneLucky1(other.getCraftStoneLucky1());
        }
        if (other.hasCraftStoneLucky2()) {
          setCraftStoneLucky2(other.getCraftStoneLucky2());
        }
        if (other.hasCraftStoneGod()) {
          setCraftStoneGod(other.getCraftStoneGod());
        }
        if (other.hasPriceToolAttackTwoMoreTimes()) {
          setPriceToolAttackTwoMoreTimes(other.getPriceToolAttackTwoMoreTimes());
        }
        if (other.hasPriceToolAttackThreeBranch()) {
          setPriceToolAttackThreeBranch(other.getPriceToolAttackThreeBranch());
        }
        if (other.hasPriceToolAttackOneMoreTimes()) {
          setPriceToolAttackOneMoreTimes(other.getPriceToolAttackOneMoreTimes());
        }
        if (other.hasPriceToolHurtAdd50()) {
          setPriceToolHurtAdd50(other.getPriceToolHurtAdd50());
        }
        if (other.hasPriceToolHurtAdd40()) {
          setPriceToolHurtAdd40(other.getPriceToolHurtAdd40());
        }
        if (other.hasPriceToolHurtAdd30()) {
          setPriceToolHurtAdd30(other.getPriceToolHurtAdd30());
        }
        if (other.hasPriceToolHurtAdd20()) {
          setPriceToolHurtAdd20(other.getPriceToolHurtAdd20());
        }
        if (other.hasPriceToolHurtAdd10()) {
          setPriceToolHurtAdd10(other.getPriceToolHurtAdd10());
        }
        if (other.hasPriceToolRecover()) {
          setPriceToolRecover(other.getPriceToolRecover());
        }
        if (other.hasPriceToolAllRecover()) {
          setPriceToolAllRecover(other.getPriceToolAllRecover());
        }
        if (other.hasPriceToolHidden()) {
          setPriceToolHidden(other.getPriceToolHidden());
        }
        if (other.hasPriceToolAllHidden()) {
          setPriceToolAllHidden(other.getPriceToolAllHidden());
        }
        if (other.hasPriceToolWind()) {
          setPriceToolWind(other.getPriceToolWind());
        }
        if (other.hasPriceToolIce()) {
          setPriceToolIce(other.getPriceToolIce());
        }
        if (other.hasPriceToolFly()) {
          setPriceToolFly(other.getPriceToolFly());
        }
        if (other.hasPriceToolGuide()) {
          setPriceToolGuide(other.getPriceToolGuide());
        }
        if (other.hasPriceToolEnergy()) {
          setPriceToolEnergy(other.getPriceToolEnergy());
        }
        if (other.hasPriceToolAtom()) {
          setPriceToolAtom(other.getPriceToolAtom());
        }
        if (other.hasPriceToolNoHole()) {
          setPriceToolNoHole(other.getPriceToolNoHole());
        }
        if (other.hasSellTool()) {
          setSellTool(other.getSellTool());
        }
        if (other.hasPriceCraftCompose()) {
          setPriceCraftCompose(other.getPriceCraftCompose());
        }
        if (other.hasPriceCraftForge()) {
          setPriceCraftForge(other.getPriceCraftForge());
        }
        if (other.hasPriceCraftTransfer()) {
          setPriceCraftTransfer(other.getPriceCraftTransfer());
        }
        if (other.hasStoneWaterTypeid()) {
          setStoneWaterTypeid(other.getStoneWaterTypeid());
        }
        if (other.hasStoneEarthTypeid()) {
          setStoneEarthTypeid(other.getStoneEarthTypeid());
        }
        if (other.hasStoneWingTypeid()) {
          setStoneWingTypeid(other.getStoneWingTypeid());
        }
        if (other.hasStoneFireTypeid()) {
          setStoneFireTypeid(other.getStoneFireTypeid());
        }
        if (other.hasStoneStrengthTypeid()) {
          setStoneStrengthTypeid(other.getStoneStrengthTypeid());
        }
        if (other.hasStoneLuckyTypeid()) {
          setStoneLuckyTypeid(other.getStoneLuckyTypeid());
        }
        if (other.hasStoneGodTypeid()) {
          setStoneGodTypeid(other.getStoneGodTypeid());
        }
        if (other.hasStoneFuncTypeid()) {
          setStoneFuncTypeid(other.getStoneFuncTypeid());
        }
        if (other.hasStoneRingTypeid()) {
          setStoneRingTypeid(other.getStoneRingTypeid());
        }
        if (other.hasToolRecoverValue()) {
          setToolRecoverValue(other.getToolRecoverValue());
        }
        if (other.hasToolAllRecoverValue()) {
          setToolAllRecoverValue(other.getToolAllRecoverValue());
        }
        if (other.hasToolEnergyValue()) {
          setToolEnergyValue(other.getToolEnergyValue());
        }
        if (other.hasToolIcedValue()) {
          setToolIcedValue(other.getToolIcedValue());
        }
        if (other.hasToolHiddenValue()) {
          setToolHiddenValue(other.getToolHiddenValue());
        }
        if (other.hasNormalShopDiscount()) {
          setNormalShopDiscount(other.getNormalShopDiscount());
        }
        if (other.hasVipShopDiscount()) {
          setVipShopDiscount(other.getVipShopDiscount());
        }
        if (other.hasCraftStoneWin()) {
          setCraftStoneWin(other.getCraftStoneWin());
        }
        if (other.hasNewbieBattleGuide()) {
          setNewbieBattleGuide(other.getNewbieBattleGuide());
        }
        if (other.hasCraftStoneDiamond()) {
          setCraftStoneDiamond(other.getCraftStoneDiamond());
        }
        if (other.hasCraftStoneCrystal()) {
          setCraftStoneCrystal(other.getCraftStoneCrystal());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              battleAttackK_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              battleAttackF_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              battleAttackG_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000008;
              thewRoleMove_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000010;
              thewAttacktwomoretimes_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000020;
              thewAttackthreebranch_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000040;
              thewAttackonemoretimes_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000080;
              thewHurtadd50_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000100;
              thewHurtadd40_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00000200;
              thewHurtadd30_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00000400;
              thewHurtadd20_ = input.readInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00000800;
              thewHurtadd10_ = input.readInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00001000;
              thewToolRecover_ = input.readInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00002000;
              thewToolAllrecover_ = input.readInt32();
              break;
            }
            case 144: {
              bitField0_ |= 0x00004000;
              thewToolHidden_ = input.readInt32();
              break;
            }
            case 152: {
              bitField0_ |= 0x00008000;
              thewToolAllhidden_ = input.readInt32();
              break;
            }
            case 160: {
              bitField0_ |= 0x00010000;
              thewToolWind_ = input.readInt32();
              break;
            }
            case 168: {
              bitField0_ |= 0x00020000;
              thewToolIce_ = input.readInt32();
              break;
            }
            case 176: {
              bitField0_ |= 0x00040000;
              thewToolFly_ = input.readInt32();
              break;
            }
            case 184: {
              bitField0_ |= 0x00080000;
              thewToolGuide_ = input.readInt32();
              break;
            }
            case 192: {
              bitField0_ |= 0x00100000;
              thewToolEnergy_ = input.readInt32();
              break;
            }
            case 200: {
              bitField0_ |= 0x00200000;
              thewToolAtom_ = input.readInt32();
              break;
            }
            case 208: {
              bitField0_ |= 0x00400000;
              thewToolNohole_ = input.readInt32();
              break;
            }
            case 216: {
              bitField0_ |= 0x00800000;
              craftStoneLuck_ = input.readInt32();
              break;
            }
            case 224: {
              bitField0_ |= 0x01000000;
              craftStoneDefend_ = input.readInt32();
              break;
            }
            case 232: {
              bitField0_ |= 0x02000000;
              craftStoneAgility_ = input.readInt32();
              break;
            }
            case 240: {
              bitField0_ |= 0x04000000;
              craftStoneAttack_ = input.readInt32();
              break;
            }
            case 248: {
              bitField0_ |= 0x08000000;
              craftStoneStrength_ = input.readInt32();
              break;
            }
            case 256: {
              bitField0_ |= 0x10000000;
              craftStoneLucky1_ = input.readInt32();
              break;
            }
            case 264: {
              bitField0_ |= 0x20000000;
              craftStoneLucky2_ = input.readInt32();
              break;
            }
            case 272: {
              bitField0_ |= 0x40000000;
              craftStoneGod_ = input.readInt32();
              break;
            }
            case 280: {
              bitField0_ |= 0x80000000;
              priceToolAttackTwoMoreTimes_ = input.readInt32();
              break;
            }
            case 288: {
              bitField1_ |= 0x00000001;
              priceToolAttackThreeBranch_ = input.readInt32();
              break;
            }
            case 296: {
              bitField1_ |= 0x00000002;
              priceToolAttackOneMoreTimes_ = input.readInt32();
              break;
            }
            case 304: {
              bitField1_ |= 0x00000004;
              priceToolHurtAdd50_ = input.readInt32();
              break;
            }
            case 312: {
              bitField1_ |= 0x00000008;
              priceToolHurtAdd40_ = input.readInt32();
              break;
            }
            case 320: {
              bitField1_ |= 0x00000010;
              priceToolHurtAdd30_ = input.readInt32();
              break;
            }
            case 328: {
              bitField1_ |= 0x00000020;
              priceToolHurtAdd20_ = input.readInt32();
              break;
            }
            case 336: {
              bitField1_ |= 0x00000040;
              priceToolHurtAdd10_ = input.readInt32();
              break;
            }
            case 344: {
              bitField1_ |= 0x00000080;
              priceToolRecover_ = input.readInt32();
              break;
            }
            case 352: {
              bitField1_ |= 0x00000100;
              priceToolAllRecover_ = input.readInt32();
              break;
            }
            case 360: {
              bitField1_ |= 0x00000200;
              priceToolHidden_ = input.readInt32();
              break;
            }
            case 368: {
              bitField1_ |= 0x00000400;
              priceToolAllHidden_ = input.readInt32();
              break;
            }
            case 376: {
              bitField1_ |= 0x00000800;
              priceToolWind_ = input.readInt32();
              break;
            }
            case 384: {
              bitField1_ |= 0x00001000;
              priceToolIce_ = input.readInt32();
              break;
            }
            case 392: {
              bitField1_ |= 0x00002000;
              priceToolFly_ = input.readInt32();
              break;
            }
            case 400: {
              bitField1_ |= 0x00004000;
              priceToolGuide_ = input.readInt32();
              break;
            }
            case 408: {
              bitField1_ |= 0x00008000;
              priceToolEnergy_ = input.readInt32();
              break;
            }
            case 416: {
              bitField1_ |= 0x00010000;
              priceToolAtom_ = input.readInt32();
              break;
            }
            case 424: {
              bitField1_ |= 0x00020000;
              priceToolNoHole_ = input.readInt32();
              break;
            }
            case 432: {
              bitField1_ |= 0x00040000;
              sellTool_ = input.readInt32();
              break;
            }
            case 440: {
              bitField1_ |= 0x00080000;
              priceCraftCompose_ = input.readInt32();
              break;
            }
            case 448: {
              bitField1_ |= 0x00100000;
              priceCraftForge_ = input.readInt32();
              break;
            }
            case 456: {
              bitField1_ |= 0x00200000;
              priceCraftTransfer_ = input.readInt32();
              break;
            }
            case 464: {
              bitField1_ |= 0x00400000;
              stoneWaterTypeid_ = input.readInt32();
              break;
            }
            case 472: {
              bitField1_ |= 0x00800000;
              stoneEarthTypeid_ = input.readInt32();
              break;
            }
            case 480: {
              bitField1_ |= 0x01000000;
              stoneWingTypeid_ = input.readInt32();
              break;
            }
            case 488: {
              bitField1_ |= 0x02000000;
              stoneFireTypeid_ = input.readInt32();
              break;
            }
            case 496: {
              bitField1_ |= 0x04000000;
              stoneStrengthTypeid_ = input.readInt32();
              break;
            }
            case 504: {
              bitField1_ |= 0x08000000;
              stoneLuckyTypeid_ = input.readInt32();
              break;
            }
            case 512: {
              bitField1_ |= 0x10000000;
              stoneGodTypeid_ = input.readInt32();
              break;
            }
            case 520: {
              bitField1_ |= 0x20000000;
              stoneFuncTypeid_ = input.readInt32();
              break;
            }
            case 528: {
              bitField1_ |= 0x40000000;
              stoneRingTypeid_ = input.readInt32();
              break;
            }
            case 536: {
              bitField1_ |= 0x80000000;
              toolRecoverValue_ = input.readInt32();
              break;
            }
            case 544: {
              bitField2_ |= 0x00000001;
              toolAllRecoverValue_ = input.readInt32();
              break;
            }
            case 552: {
              bitField2_ |= 0x00000002;
              toolEnergyValue_ = input.readInt32();
              break;
            }
            case 560: {
              bitField2_ |= 0x00000004;
              toolIcedValue_ = input.readInt32();
              break;
            }
            case 568: {
              bitField2_ |= 0x00000008;
              toolHiddenValue_ = input.readInt32();
              break;
            }
            case 576: {
              bitField2_ |= 0x00000010;
              normalShopDiscount_ = input.readInt32();
              break;
            }
            case 584: {
              bitField2_ |= 0x00000020;
              vipShopDiscount_ = input.readInt32();
              break;
            }
            case 592: {
              bitField2_ |= 0x00000040;
              craftStoneWin_ = input.readInt32();
              break;
            }
            case 600: {
              bitField2_ |= 0x00000080;
              newbieBattleGuide_ = input.readInt32();
              break;
            }
            case 608: {
              bitField2_ |= 0x00000100;
              craftStoneDiamond_ = input.readInt32();
              break;
            }
            case 616: {
              bitField2_ |= 0x00000200;
              craftStoneCrystal_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      private int bitField1_;
      private int bitField2_;
      
      // optional int32 battle_attack_k = 1 [default = 591];
      private int battleAttackK_ = 591;
      public boolean hasBattleAttackK() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getBattleAttackK() {
        return battleAttackK_;
      }
      public Builder setBattleAttackK(int value) {
        bitField0_ |= 0x00000001;
        battleAttackK_ = value;
        onChanged();
        return this;
      }
      public Builder clearBattleAttackK() {
        bitField0_ = (bitField0_ & ~0x00000001);
        battleAttackK_ = 591;
        onChanged();
        return this;
      }
      
      // optional int32 battle_attack_F = 2 [default = 750];
      private int battleAttackF_ = 750;
      public boolean hasBattleAttackF() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getBattleAttackF() {
        return battleAttackF_;
      }
      public Builder setBattleAttackF(int value) {
        bitField0_ |= 0x00000002;
        battleAttackF_ = value;
        onChanged();
        return this;
      }
      public Builder clearBattleAttackF() {
        bitField0_ = (bitField0_ & ~0x00000002);
        battleAttackF_ = 750;
        onChanged();
        return this;
      }
      
      // optional int32 battle_attack_G = 3 [default = 760];
      private int battleAttackG_ = 760;
      public boolean hasBattleAttackG() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getBattleAttackG() {
        return battleAttackG_;
      }
      public Builder setBattleAttackG(int value) {
        bitField0_ |= 0x00000004;
        battleAttackG_ = value;
        onChanged();
        return this;
      }
      public Builder clearBattleAttackG() {
        bitField0_ = (bitField0_ & ~0x00000004);
        battleAttackG_ = 760;
        onChanged();
        return this;
      }
      
      // optional int32 thew_role_move = 7 [default = 5];
      private int thewRoleMove_ = 5;
      public boolean hasThewRoleMove() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getThewRoleMove() {
        return thewRoleMove_;
      }
      public Builder setThewRoleMove(int value) {
        bitField0_ |= 0x00000008;
        thewRoleMove_ = value;
        onChanged();
        return this;
      }
      public Builder clearThewRoleMove() {
        bitField0_ = (bitField0_ & ~0x00000008);
        thewRoleMove_ = 5;
        onChanged();
        return this;
      }
      
      // optional int32 thew_attacktwomoretimes = 8 [default = 110];
      private int thewAttacktwomoretimes_ = 110;
      public boolean hasThewAttacktwomoretimes() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getThewAttacktwomoretimes() {
        return thewAttacktwomoretimes_;
      }
      public Builder setThewAttacktwomoretimes(int value) {
        bitField0_ |= 0x00000010;
        thewAttacktwomoretimes_ = value;
        onChanged();
        return this;
      }
      public Builder clearThewAttacktwomoretimes() {
        bitField0_ = (bitField0_ & ~0x00000010);
        thewAttacktwomoretimes_ = 110;
        onChanged();
        return this;
      }
      
      // optional int32 thew_attackthreebranch = 9 [default = 110];
      private int thewAttackthreebranch_ = 110;
      public boolean hasThewAttackthreebranch() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getThewAttackthreebranch() {
        return thewAttackthreebranch_;
      }
      public Builder setThewAttackthreebranch(int value) {
        bitField0_ |= 0x00000020;
        thewAttackthreebranch_ = value;
        onChanged();
        return this;
      }
      public Builder clearThewAttackthreebranch() {
        bitField0_ = (bitField0_ & ~0x00000020);
        thewAttackthreebranch_ = 110;
        onChanged();
        return this;
      }
      
      // optional int32 thew_attackonemoretimes = 10 [default = 110];
      private int thewAttackonemoretimes_ = 110;
      public boolean hasThewAttackonemoretimes() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public int getThewAttackonemoretimes() {
        return thewAttackonemoretimes_;
      }
      public Builder setThewAttackonemoretimes(int value) {
        bitField0_ |= 0x00000040;
        thewAttackonemoretimes_ = value;
        onChanged();
        return this;
      }
      public Builder clearThewAttackonemoretimes() {
        bitField0_ = (bitField0_ & ~0x00000040);
        thewAttackonemoretimes_ = 110;
        onChanged();
        return this;
      }
      
      // optional int32 thew_hurtadd50 = 11 [default = 85];
      private int thewHurtadd50_ = 85;
      public boolean hasThewHurtadd50() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public int getThewHurtadd50() {
        return thewHurtadd50_;
      }
      public Builder setThewHurtadd50(int value) {
        bitField0_ |= 0x00000080;
        thewHurtadd50_ = value;
        onChanged();
        return this;
      }
      public Builder clearThewHurtadd50() {
        bitField0_ = (bitField0_ & ~0x00000080);
        thewHurtadd50_ = 85;
        onChanged();
        return this;
      }
      
      // optional int32 thew_hurtadd40 = 12 [default = 80];
      private int thewHurtadd40_ = 80;
      public boolean hasThewHurtadd40() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public int getThewHurtadd40() {
        return thewHurtadd40_;
      }
      public Builder setThewHurtadd40(int value) {
        bitField0_ |= 0x00000100;
        thewHurtadd40_ = value;
        onChanged();
        return this;
      }
      public Builder clearThewHurtadd40() {
        bitField0_ = (bitField0_ & ~0x00000100);
        thewHurtadd40_ = 80;
        onChanged();
        return this;
      }
      
      // optional int32 thew_hurtadd30 = 13 [default = 70];
      private int thewHurtadd30_ = 70;
      public boolean hasThewHurtadd30() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public int getThewHurtadd30() {
        return thewHurtadd30_;
      }
      public Builder setThewHurtadd30(int value) {
        bitField0_ |= 0x00000200;
        thewHurtadd30_ = value;
        onChanged();
        return this;
      }
      public Builder clearThewHurtadd30() {
        bitField0_ = (bitField0_ & ~0x00000200);
        thewHurtadd30_ = 70;
        onChanged();
        return this;
      }
      
      // optional int32 thew_hurtadd20 = 14 [default = 55];
      private int thewHurtadd20_ = 55;
      public boolean hasThewHurtadd20() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public int getThewHurtadd20() {
        return thewHurtadd20_;
      }
      public Builder setThewHurtadd20(int value) {
        bitField0_ |= 0x00000400;
        thewHurtadd20_ = value;
        onChanged();
        return this;
      }
      public Builder clearThewHurtadd20() {
        bitField0_ = (bitField0_ & ~0x00000400);
        thewHurtadd20_ = 55;
        onChanged();
        return this;
      }
      
      // optional int32 thew_hurtadd10 = 15 [default = 50];
      private int thewHurtadd10_ = 50;
      public boolean hasThewHurtadd10() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      public int getThewHurtadd10() {
        return thewHurtadd10_;
      }
      public Builder setThewHurtadd10(int value) {
        bitField0_ |= 0x00000800;
        thewHurtadd10_ = value;
        onChanged();
        return this;
      }
      public Builder clearThewHurtadd10() {
        bitField0_ = (bitField0_ & ~0x00000800);
        thewHurtadd10_ = 50;
        onChanged();
        return this;
      }
      
      // optional int32 thew_tool_recover = 16 [default = 150];
      private int thewToolRecover_ = 150;
      public boolean hasThewToolRecover() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      public int getThewToolRecover() {
        return thewToolRecover_;
      }
      public Builder setThewToolRecover(int value) {
        bitField0_ |= 0x00001000;
        thewToolRecover_ = value;
        onChanged();
        return this;
      }
      public Builder clearThewToolRecover() {
        bitField0_ = (bitField0_ & ~0x00001000);
        thewToolRecover_ = 150;
        onChanged();
        return this;
      }
      
      // optional int32 thew_tool_allrecover = 17 [default = 170];
      private int thewToolAllrecover_ = 170;
      public boolean hasThewToolAllrecover() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      public int getThewToolAllrecover() {
        return thewToolAllrecover_;
      }
      public Builder setThewToolAllrecover(int value) {
        bitField0_ |= 0x00002000;
        thewToolAllrecover_ = value;
        onChanged();
        return this;
      }
      public Builder clearThewToolAllrecover() {
        bitField0_ = (bitField0_ & ~0x00002000);
        thewToolAllrecover_ = 170;
        onChanged();
        return this;
      }
      
      // optional int32 thew_tool_hidden = 18 [default = 50];
      private int thewToolHidden_ = 50;
      public boolean hasThewToolHidden() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      public int getThewToolHidden() {
        return thewToolHidden_;
      }
      public Builder setThewToolHidden(int value) {
        bitField0_ |= 0x00004000;
        thewToolHidden_ = value;
        onChanged();
        return this;
      }
      public Builder clearThewToolHidden() {
        bitField0_ = (bitField0_ & ~0x00004000);
        thewToolHidden_ = 50;
        onChanged();
        return this;
      }
      
      // optional int32 thew_tool_allhidden = 19 [default = 150];
      private int thewToolAllhidden_ = 150;
      public boolean hasThewToolAllhidden() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      public int getThewToolAllhidden() {
        return thewToolAllhidden_;
      }
      public Builder setThewToolAllhidden(int value) {
        bitField0_ |= 0x00008000;
        thewToolAllhidden_ = value;
        onChanged();
        return this;
      }
      public Builder clearThewToolAllhidden() {
        bitField0_ = (bitField0_ & ~0x00008000);
        thewToolAllhidden_ = 150;
        onChanged();
        return this;
      }
      
      // optional int32 thew_tool_wind = 20 [default = 50];
      private int thewToolWind_ = 50;
      public boolean hasThewToolWind() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      public int getThewToolWind() {
        return thewToolWind_;
      }
      public Builder setThewToolWind(int value) {
        bitField0_ |= 0x00010000;
        thewToolWind_ = value;
        onChanged();
        return this;
      }
      public Builder clearThewToolWind() {
        bitField0_ = (bitField0_ & ~0x00010000);
        thewToolWind_ = 50;
        onChanged();
        return this;
      }
      
      // optional int32 thew_tool_ice = 21 [default = 150];
      private int thewToolIce_ = 150;
      public boolean hasThewToolIce() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      public int getThewToolIce() {
        return thewToolIce_;
      }
      public Builder setThewToolIce(int value) {
        bitField0_ |= 0x00020000;
        thewToolIce_ = value;
        onChanged();
        return this;
      }
      public Builder clearThewToolIce() {
        bitField0_ = (bitField0_ & ~0x00020000);
        thewToolIce_ = 150;
        onChanged();
        return this;
      }
      
      // optional int32 thew_tool_fly = 22 [default = 150];
      private int thewToolFly_ = 150;
      public boolean hasThewToolFly() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      public int getThewToolFly() {
        return thewToolFly_;
      }
      public Builder setThewToolFly(int value) {
        bitField0_ |= 0x00040000;
        thewToolFly_ = value;
        onChanged();
        return this;
      }
      public Builder clearThewToolFly() {
        bitField0_ = (bitField0_ & ~0x00040000);
        thewToolFly_ = 150;
        onChanged();
        return this;
      }
      
      // optional int32 thew_tool_guide = 23 [default = 120];
      private int thewToolGuide_ = 120;
      public boolean hasThewToolGuide() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      public int getThewToolGuide() {
        return thewToolGuide_;
      }
      public Builder setThewToolGuide(int value) {
        bitField0_ |= 0x00080000;
        thewToolGuide_ = value;
        onChanged();
        return this;
      }
      public Builder clearThewToolGuide() {
        bitField0_ = (bitField0_ & ~0x00080000);
        thewToolGuide_ = 120;
        onChanged();
        return this;
      }
      
      // optional int32 thew_tool_energy = 24 [default = 120];
      private int thewToolEnergy_ = 120;
      public boolean hasThewToolEnergy() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      public int getThewToolEnergy() {
        return thewToolEnergy_;
      }
      public Builder setThewToolEnergy(int value) {
        bitField0_ |= 0x00100000;
        thewToolEnergy_ = value;
        onChanged();
        return this;
      }
      public Builder clearThewToolEnergy() {
        bitField0_ = (bitField0_ & ~0x00100000);
        thewToolEnergy_ = 120;
        onChanged();
        return this;
      }
      
      // optional int32 thew_tool_atom = 25 [default = 110];
      private int thewToolAtom_ = 110;
      public boolean hasThewToolAtom() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      public int getThewToolAtom() {
        return thewToolAtom_;
      }
      public Builder setThewToolAtom(int value) {
        bitField0_ |= 0x00200000;
        thewToolAtom_ = value;
        onChanged();
        return this;
      }
      public Builder clearThewToolAtom() {
        bitField0_ = (bitField0_ & ~0x00200000);
        thewToolAtom_ = 110;
        onChanged();
        return this;
      }
      
      // optional int32 thew_tool_nohole = 26 [default = 50];
      private int thewToolNohole_ = 50;
      public boolean hasThewToolNohole() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      public int getThewToolNohole() {
        return thewToolNohole_;
      }
      public Builder setThewToolNohole(int value) {
        bitField0_ |= 0x00400000;
        thewToolNohole_ = value;
        onChanged();
        return this;
      }
      public Builder clearThewToolNohole() {
        bitField0_ = (bitField0_ & ~0x00400000);
        thewToolNohole_ = 50;
        onChanged();
        return this;
      }
      
      // optional int32 craft_stone_luck = 27 [default = 20001];
      private int craftStoneLuck_ = 20001;
      public boolean hasCraftStoneLuck() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      public int getCraftStoneLuck() {
        return craftStoneLuck_;
      }
      public Builder setCraftStoneLuck(int value) {
        bitField0_ |= 0x00800000;
        craftStoneLuck_ = value;
        onChanged();
        return this;
      }
      public Builder clearCraftStoneLuck() {
        bitField0_ = (bitField0_ & ~0x00800000);
        craftStoneLuck_ = 20001;
        onChanged();
        return this;
      }
      
      // optional int32 craft_stone_defend = 28 [default = 20002];
      private int craftStoneDefend_ = 20002;
      public boolean hasCraftStoneDefend() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      public int getCraftStoneDefend() {
        return craftStoneDefend_;
      }
      public Builder setCraftStoneDefend(int value) {
        bitField0_ |= 0x01000000;
        craftStoneDefend_ = value;
        onChanged();
        return this;
      }
      public Builder clearCraftStoneDefend() {
        bitField0_ = (bitField0_ & ~0x01000000);
        craftStoneDefend_ = 20002;
        onChanged();
        return this;
      }
      
      // optional int32 craft_stone_agility = 29 [default = 20003];
      private int craftStoneAgility_ = 20003;
      public boolean hasCraftStoneAgility() {
        return ((bitField0_ & 0x02000000) == 0x02000000);
      }
      public int getCraftStoneAgility() {
        return craftStoneAgility_;
      }
      public Builder setCraftStoneAgility(int value) {
        bitField0_ |= 0x02000000;
        craftStoneAgility_ = value;
        onChanged();
        return this;
      }
      public Builder clearCraftStoneAgility() {
        bitField0_ = (bitField0_ & ~0x02000000);
        craftStoneAgility_ = 20003;
        onChanged();
        return this;
      }
      
      // optional int32 craft_stone_attack = 30 [default = 20004];
      private int craftStoneAttack_ = 20004;
      public boolean hasCraftStoneAttack() {
        return ((bitField0_ & 0x04000000) == 0x04000000);
      }
      public int getCraftStoneAttack() {
        return craftStoneAttack_;
      }
      public Builder setCraftStoneAttack(int value) {
        bitField0_ |= 0x04000000;
        craftStoneAttack_ = value;
        onChanged();
        return this;
      }
      public Builder clearCraftStoneAttack() {
        bitField0_ = (bitField0_ & ~0x04000000);
        craftStoneAttack_ = 20004;
        onChanged();
        return this;
      }
      
      // optional int32 craft_stone_strength = 31 [default = 20005];
      private int craftStoneStrength_ = 20005;
      public boolean hasCraftStoneStrength() {
        return ((bitField0_ & 0x08000000) == 0x08000000);
      }
      public int getCraftStoneStrength() {
        return craftStoneStrength_;
      }
      public Builder setCraftStoneStrength(int value) {
        bitField0_ |= 0x08000000;
        craftStoneStrength_ = value;
        onChanged();
        return this;
      }
      public Builder clearCraftStoneStrength() {
        bitField0_ = (bitField0_ & ~0x08000000);
        craftStoneStrength_ = 20005;
        onChanged();
        return this;
      }
      
      // optional int32 craft_stone_lucky1 = 32 [default = 24002];
      private int craftStoneLucky1_ = 24002;
      public boolean hasCraftStoneLucky1() {
        return ((bitField0_ & 0x10000000) == 0x10000000);
      }
      public int getCraftStoneLucky1() {
        return craftStoneLucky1_;
      }
      public Builder setCraftStoneLucky1(int value) {
        bitField0_ |= 0x10000000;
        craftStoneLucky1_ = value;
        onChanged();
        return this;
      }
      public Builder clearCraftStoneLucky1() {
        bitField0_ = (bitField0_ & ~0x10000000);
        craftStoneLucky1_ = 24002;
        onChanged();
        return this;
      }
      
      // optional int32 craft_stone_lucky2 = 33 [default = 24004];
      private int craftStoneLucky2_ = 24004;
      public boolean hasCraftStoneLucky2() {
        return ((bitField0_ & 0x20000000) == 0x20000000);
      }
      public int getCraftStoneLucky2() {
        return craftStoneLucky2_;
      }
      public Builder setCraftStoneLucky2(int value) {
        bitField0_ |= 0x20000000;
        craftStoneLucky2_ = value;
        onChanged();
        return this;
      }
      public Builder clearCraftStoneLucky2() {
        bitField0_ = (bitField0_ & ~0x20000000);
        craftStoneLucky2_ = 24004;
        onChanged();
        return this;
      }
      
      // optional int32 craft_stone_god = 34 [default = 24001];
      private int craftStoneGod_ = 24001;
      public boolean hasCraftStoneGod() {
        return ((bitField0_ & 0x40000000) == 0x40000000);
      }
      public int getCraftStoneGod() {
        return craftStoneGod_;
      }
      public Builder setCraftStoneGod(int value) {
        bitField0_ |= 0x40000000;
        craftStoneGod_ = value;
        onChanged();
        return this;
      }
      public Builder clearCraftStoneGod() {
        bitField0_ = (bitField0_ & ~0x40000000);
        craftStoneGod_ = 24001;
        onChanged();
        return this;
      }
      
      // optional int32 price_tool_AttackTwoMoreTimes = 35 [default = 1200];
      private int priceToolAttackTwoMoreTimes_ = 1200;
      public boolean hasPriceToolAttackTwoMoreTimes() {
        return ((bitField0_ & 0x80000000) == 0x80000000);
      }
      public int getPriceToolAttackTwoMoreTimes() {
        return priceToolAttackTwoMoreTimes_;
      }
      public Builder setPriceToolAttackTwoMoreTimes(int value) {
        bitField0_ |= 0x80000000;
        priceToolAttackTwoMoreTimes_ = value;
        onChanged();
        return this;
      }
      public Builder clearPriceToolAttackTwoMoreTimes() {
        bitField0_ = (bitField0_ & ~0x80000000);
        priceToolAttackTwoMoreTimes_ = 1200;
        onChanged();
        return this;
      }
      
      // optional int32 price_tool_AttackThreeBranch = 36 [default = 1200];
      private int priceToolAttackThreeBranch_ = 1200;
      public boolean hasPriceToolAttackThreeBranch() {
        return ((bitField1_ & 0x00000001) == 0x00000001);
      }
      public int getPriceToolAttackThreeBranch() {
        return priceToolAttackThreeBranch_;
      }
      public Builder setPriceToolAttackThreeBranch(int value) {
        bitField1_ |= 0x00000001;
        priceToolAttackThreeBranch_ = value;
        onChanged();
        return this;
      }
      public Builder clearPriceToolAttackThreeBranch() {
        bitField1_ = (bitField1_ & ~0x00000001);
        priceToolAttackThreeBranch_ = 1200;
        onChanged();
        return this;
      }
      
      // optional int32 price_tool_AttackOneMoreTimes = 37 [default = 1200];
      private int priceToolAttackOneMoreTimes_ = 1200;
      public boolean hasPriceToolAttackOneMoreTimes() {
        return ((bitField1_ & 0x00000002) == 0x00000002);
      }
      public int getPriceToolAttackOneMoreTimes() {
        return priceToolAttackOneMoreTimes_;
      }
      public Builder setPriceToolAttackOneMoreTimes(int value) {
        bitField1_ |= 0x00000002;
        priceToolAttackOneMoreTimes_ = value;
        onChanged();
        return this;
      }
      public Builder clearPriceToolAttackOneMoreTimes() {
        bitField1_ = (bitField1_ & ~0x00000002);
        priceToolAttackOneMoreTimes_ = 1200;
        onChanged();
        return this;
      }
      
      // optional int32 price_tool_HurtAdd50 = 38 [default = 1200];
      private int priceToolHurtAdd50_ = 1200;
      public boolean hasPriceToolHurtAdd50() {
        return ((bitField1_ & 0x00000004) == 0x00000004);
      }
      public int getPriceToolHurtAdd50() {
        return priceToolHurtAdd50_;
      }
      public Builder setPriceToolHurtAdd50(int value) {
        bitField1_ |= 0x00000004;
        priceToolHurtAdd50_ = value;
        onChanged();
        return this;
      }
      public Builder clearPriceToolHurtAdd50() {
        bitField1_ = (bitField1_ & ~0x00000004);
        priceToolHurtAdd50_ = 1200;
        onChanged();
        return this;
      }
      
      // optional int32 price_tool_HurtAdd40 = 39 [default = 1200];
      private int priceToolHurtAdd40_ = 1200;
      public boolean hasPriceToolHurtAdd40() {
        return ((bitField1_ & 0x00000008) == 0x00000008);
      }
      public int getPriceToolHurtAdd40() {
        return priceToolHurtAdd40_;
      }
      public Builder setPriceToolHurtAdd40(int value) {
        bitField1_ |= 0x00000008;
        priceToolHurtAdd40_ = value;
        onChanged();
        return this;
      }
      public Builder clearPriceToolHurtAdd40() {
        bitField1_ = (bitField1_ & ~0x00000008);
        priceToolHurtAdd40_ = 1200;
        onChanged();
        return this;
      }
      
      // optional int32 price_tool_HurtAdd30 = 40 [default = 1200];
      private int priceToolHurtAdd30_ = 1200;
      public boolean hasPriceToolHurtAdd30() {
        return ((bitField1_ & 0x00000010) == 0x00000010);
      }
      public int getPriceToolHurtAdd30() {
        return priceToolHurtAdd30_;
      }
      public Builder setPriceToolHurtAdd30(int value) {
        bitField1_ |= 0x00000010;
        priceToolHurtAdd30_ = value;
        onChanged();
        return this;
      }
      public Builder clearPriceToolHurtAdd30() {
        bitField1_ = (bitField1_ & ~0x00000010);
        priceToolHurtAdd30_ = 1200;
        onChanged();
        return this;
      }
      
      // optional int32 price_tool_HurtAdd20 = 41 [default = 1200];
      private int priceToolHurtAdd20_ = 1200;
      public boolean hasPriceToolHurtAdd20() {
        return ((bitField1_ & 0x00000020) == 0x00000020);
      }
      public int getPriceToolHurtAdd20() {
        return priceToolHurtAdd20_;
      }
      public Builder setPriceToolHurtAdd20(int value) {
        bitField1_ |= 0x00000020;
        priceToolHurtAdd20_ = value;
        onChanged();
        return this;
      }
      public Builder clearPriceToolHurtAdd20() {
        bitField1_ = (bitField1_ & ~0x00000020);
        priceToolHurtAdd20_ = 1200;
        onChanged();
        return this;
      }
      
      // optional int32 price_tool_HurtAdd10 = 42 [default = 1200];
      private int priceToolHurtAdd10_ = 1200;
      public boolean hasPriceToolHurtAdd10() {
        return ((bitField1_ & 0x00000040) == 0x00000040);
      }
      public int getPriceToolHurtAdd10() {
        return priceToolHurtAdd10_;
      }
      public Builder setPriceToolHurtAdd10(int value) {
        bitField1_ |= 0x00000040;
        priceToolHurtAdd10_ = value;
        onChanged();
        return this;
      }
      public Builder clearPriceToolHurtAdd10() {
        bitField1_ = (bitField1_ & ~0x00000040);
        priceToolHurtAdd10_ = 1200;
        onChanged();
        return this;
      }
      
      // optional int32 price_tool_Recover = 43 [default = 1200];
      private int priceToolRecover_ = 1200;
      public boolean hasPriceToolRecover() {
        return ((bitField1_ & 0x00000080) == 0x00000080);
      }
      public int getPriceToolRecover() {
        return priceToolRecover_;
      }
      public Builder setPriceToolRecover(int value) {
        bitField1_ |= 0x00000080;
        priceToolRecover_ = value;
        onChanged();
        return this;
      }
      public Builder clearPriceToolRecover() {
        bitField1_ = (bitField1_ & ~0x00000080);
        priceToolRecover_ = 1200;
        onChanged();
        return this;
      }
      
      // optional int32 price_tool_AllRecover = 44 [default = 120];
      private int priceToolAllRecover_ = 120;
      public boolean hasPriceToolAllRecover() {
        return ((bitField1_ & 0x00000100) == 0x00000100);
      }
      public int getPriceToolAllRecover() {
        return priceToolAllRecover_;
      }
      public Builder setPriceToolAllRecover(int value) {
        bitField1_ |= 0x00000100;
        priceToolAllRecover_ = value;
        onChanged();
        return this;
      }
      public Builder clearPriceToolAllRecover() {
        bitField1_ = (bitField1_ & ~0x00000100);
        priceToolAllRecover_ = 120;
        onChanged();
        return this;
      }
      
      // optional int32 price_tool_Hidden = 45 [default = 1200];
      private int priceToolHidden_ = 1200;
      public boolean hasPriceToolHidden() {
        return ((bitField1_ & 0x00000200) == 0x00000200);
      }
      public int getPriceToolHidden() {
        return priceToolHidden_;
      }
      public Builder setPriceToolHidden(int value) {
        bitField1_ |= 0x00000200;
        priceToolHidden_ = value;
        onChanged();
        return this;
      }
      public Builder clearPriceToolHidden() {
        bitField1_ = (bitField1_ & ~0x00000200);
        priceToolHidden_ = 1200;
        onChanged();
        return this;
      }
      
      // optional int32 price_tool_AllHidden = 46 [default = 1200];
      private int priceToolAllHidden_ = 1200;
      public boolean hasPriceToolAllHidden() {
        return ((bitField1_ & 0x00000400) == 0x00000400);
      }
      public int getPriceToolAllHidden() {
        return priceToolAllHidden_;
      }
      public Builder setPriceToolAllHidden(int value) {
        bitField1_ |= 0x00000400;
        priceToolAllHidden_ = value;
        onChanged();
        return this;
      }
      public Builder clearPriceToolAllHidden() {
        bitField1_ = (bitField1_ & ~0x00000400);
        priceToolAllHidden_ = 1200;
        onChanged();
        return this;
      }
      
      // optional int32 price_tool_Wind = 47 [default = 1200];
      private int priceToolWind_ = 1200;
      public boolean hasPriceToolWind() {
        return ((bitField1_ & 0x00000800) == 0x00000800);
      }
      public int getPriceToolWind() {
        return priceToolWind_;
      }
      public Builder setPriceToolWind(int value) {
        bitField1_ |= 0x00000800;
        priceToolWind_ = value;
        onChanged();
        return this;
      }
      public Builder clearPriceToolWind() {
        bitField1_ = (bitField1_ & ~0x00000800);
        priceToolWind_ = 1200;
        onChanged();
        return this;
      }
      
      // optional int32 price_tool_Ice = 48 [default = 1200];
      private int priceToolIce_ = 1200;
      public boolean hasPriceToolIce() {
        return ((bitField1_ & 0x00001000) == 0x00001000);
      }
      public int getPriceToolIce() {
        return priceToolIce_;
      }
      public Builder setPriceToolIce(int value) {
        bitField1_ |= 0x00001000;
        priceToolIce_ = value;
        onChanged();
        return this;
      }
      public Builder clearPriceToolIce() {
        bitField1_ = (bitField1_ & ~0x00001000);
        priceToolIce_ = 1200;
        onChanged();
        return this;
      }
      
      // optional int32 price_tool_Fly = 49 [default = 1200];
      private int priceToolFly_ = 1200;
      public boolean hasPriceToolFly() {
        return ((bitField1_ & 0x00002000) == 0x00002000);
      }
      public int getPriceToolFly() {
        return priceToolFly_;
      }
      public Builder setPriceToolFly(int value) {
        bitField1_ |= 0x00002000;
        priceToolFly_ = value;
        onChanged();
        return this;
      }
      public Builder clearPriceToolFly() {
        bitField1_ = (bitField1_ & ~0x00002000);
        priceToolFly_ = 1200;
        onChanged();
        return this;
      }
      
      // optional int32 price_tool_Guide = 50 [default = 1200];
      private int priceToolGuide_ = 1200;
      public boolean hasPriceToolGuide() {
        return ((bitField1_ & 0x00004000) == 0x00004000);
      }
      public int getPriceToolGuide() {
        return priceToolGuide_;
      }
      public Builder setPriceToolGuide(int value) {
        bitField1_ |= 0x00004000;
        priceToolGuide_ = value;
        onChanged();
        return this;
      }
      public Builder clearPriceToolGuide() {
        bitField1_ = (bitField1_ & ~0x00004000);
        priceToolGuide_ = 1200;
        onChanged();
        return this;
      }
      
      // optional int32 price_tool_Energy = 51 [default = 1200];
      private int priceToolEnergy_ = 1200;
      public boolean hasPriceToolEnergy() {
        return ((bitField1_ & 0x00008000) == 0x00008000);
      }
      public int getPriceToolEnergy() {
        return priceToolEnergy_;
      }
      public Builder setPriceToolEnergy(int value) {
        bitField1_ |= 0x00008000;
        priceToolEnergy_ = value;
        onChanged();
        return this;
      }
      public Builder clearPriceToolEnergy() {
        bitField1_ = (bitField1_ & ~0x00008000);
        priceToolEnergy_ = 1200;
        onChanged();
        return this;
      }
      
      // optional int32 price_tool_Atom = 52 [default = 1200];
      private int priceToolAtom_ = 1200;
      public boolean hasPriceToolAtom() {
        return ((bitField1_ & 0x00010000) == 0x00010000);
      }
      public int getPriceToolAtom() {
        return priceToolAtom_;
      }
      public Builder setPriceToolAtom(int value) {
        bitField1_ |= 0x00010000;
        priceToolAtom_ = value;
        onChanged();
        return this;
      }
      public Builder clearPriceToolAtom() {
        bitField1_ = (bitField1_ & ~0x00010000);
        priceToolAtom_ = 1200;
        onChanged();
        return this;
      }
      
      // optional int32 price_tool_NoHole = 53 [default = 1200];
      private int priceToolNoHole_ = 1200;
      public boolean hasPriceToolNoHole() {
        return ((bitField1_ & 0x00020000) == 0x00020000);
      }
      public int getPriceToolNoHole() {
        return priceToolNoHole_;
      }
      public Builder setPriceToolNoHole(int value) {
        bitField1_ |= 0x00020000;
        priceToolNoHole_ = value;
        onChanged();
        return this;
      }
      public Builder clearPriceToolNoHole() {
        bitField1_ = (bitField1_ & ~0x00020000);
        priceToolNoHole_ = 1200;
        onChanged();
        return this;
      }
      
      // optional int32 sell_tool_ = 54 [default = 85];
      private int sellTool_ = 85;
      public boolean hasSellTool() {
        return ((bitField1_ & 0x00040000) == 0x00040000);
      }
      public int getSellTool() {
        return sellTool_;
      }
      public Builder setSellTool(int value) {
        bitField1_ |= 0x00040000;
        sellTool_ = value;
        onChanged();
        return this;
      }
      public Builder clearSellTool() {
        bitField1_ = (bitField1_ & ~0x00040000);
        sellTool_ = 85;
        onChanged();
        return this;
      }
      
      // optional int32 price_craft_compose = 55 [default = 2000];
      private int priceCraftCompose_ = 2000;
      public boolean hasPriceCraftCompose() {
        return ((bitField1_ & 0x00080000) == 0x00080000);
      }
      public int getPriceCraftCompose() {
        return priceCraftCompose_;
      }
      public Builder setPriceCraftCompose(int value) {
        bitField1_ |= 0x00080000;
        priceCraftCompose_ = value;
        onChanged();
        return this;
      }
      public Builder clearPriceCraftCompose() {
        bitField1_ = (bitField1_ & ~0x00080000);
        priceCraftCompose_ = 2000;
        onChanged();
        return this;
      }
      
      // optional int32 price_craft_forge = 56 [default = 2000];
      private int priceCraftForge_ = 2000;
      public boolean hasPriceCraftForge() {
        return ((bitField1_ & 0x00100000) == 0x00100000);
      }
      public int getPriceCraftForge() {
        return priceCraftForge_;
      }
      public Builder setPriceCraftForge(int value) {
        bitField1_ |= 0x00100000;
        priceCraftForge_ = value;
        onChanged();
        return this;
      }
      public Builder clearPriceCraftForge() {
        bitField1_ = (bitField1_ & ~0x00100000);
        priceCraftForge_ = 2000;
        onChanged();
        return this;
      }
      
      // optional int32 price_craft_transfer = 57 [default = 5000];
      private int priceCraftTransfer_ = 5000;
      public boolean hasPriceCraftTransfer() {
        return ((bitField1_ & 0x00200000) == 0x00200000);
      }
      public int getPriceCraftTransfer() {
        return priceCraftTransfer_;
      }
      public Builder setPriceCraftTransfer(int value) {
        bitField1_ |= 0x00200000;
        priceCraftTransfer_ = value;
        onChanged();
        return this;
      }
      public Builder clearPriceCraftTransfer() {
        bitField1_ = (bitField1_ & ~0x00200000);
        priceCraftTransfer_ = 5000;
        onChanged();
        return this;
      }
      
      // optional int32 stone_water_typeid = 58 [default = 20001];
      private int stoneWaterTypeid_ = 20001;
      public boolean hasStoneWaterTypeid() {
        return ((bitField1_ & 0x00400000) == 0x00400000);
      }
      public int getStoneWaterTypeid() {
        return stoneWaterTypeid_;
      }
      public Builder setStoneWaterTypeid(int value) {
        bitField1_ |= 0x00400000;
        stoneWaterTypeid_ = value;
        onChanged();
        return this;
      }
      public Builder clearStoneWaterTypeid() {
        bitField1_ = (bitField1_ & ~0x00400000);
        stoneWaterTypeid_ = 20001;
        onChanged();
        return this;
      }
      
      // optional int32 stone_earth_typeid = 59 [default = 20002];
      private int stoneEarthTypeid_ = 20002;
      public boolean hasStoneEarthTypeid() {
        return ((bitField1_ & 0x00800000) == 0x00800000);
      }
      public int getStoneEarthTypeid() {
        return stoneEarthTypeid_;
      }
      public Builder setStoneEarthTypeid(int value) {
        bitField1_ |= 0x00800000;
        stoneEarthTypeid_ = value;
        onChanged();
        return this;
      }
      public Builder clearStoneEarthTypeid() {
        bitField1_ = (bitField1_ & ~0x00800000);
        stoneEarthTypeid_ = 20002;
        onChanged();
        return this;
      }
      
      // optional int32 stone_wing_typeid = 60 [default = 20003];
      private int stoneWingTypeid_ = 20003;
      public boolean hasStoneWingTypeid() {
        return ((bitField1_ & 0x01000000) == 0x01000000);
      }
      public int getStoneWingTypeid() {
        return stoneWingTypeid_;
      }
      public Builder setStoneWingTypeid(int value) {
        bitField1_ |= 0x01000000;
        stoneWingTypeid_ = value;
        onChanged();
        return this;
      }
      public Builder clearStoneWingTypeid() {
        bitField1_ = (bitField1_ & ~0x01000000);
        stoneWingTypeid_ = 20003;
        onChanged();
        return this;
      }
      
      // optional int32 stone_fire_typeid = 61 [default = 20004];
      private int stoneFireTypeid_ = 20004;
      public boolean hasStoneFireTypeid() {
        return ((bitField1_ & 0x02000000) == 0x02000000);
      }
      public int getStoneFireTypeid() {
        return stoneFireTypeid_;
      }
      public Builder setStoneFireTypeid(int value) {
        bitField1_ |= 0x02000000;
        stoneFireTypeid_ = value;
        onChanged();
        return this;
      }
      public Builder clearStoneFireTypeid() {
        bitField1_ = (bitField1_ & ~0x02000000);
        stoneFireTypeid_ = 20004;
        onChanged();
        return this;
      }
      
      // optional int32 stone_strength_typeid = 62 [default = 20005];
      private int stoneStrengthTypeid_ = 20005;
      public boolean hasStoneStrengthTypeid() {
        return ((bitField1_ & 0x04000000) == 0x04000000);
      }
      public int getStoneStrengthTypeid() {
        return stoneStrengthTypeid_;
      }
      public Builder setStoneStrengthTypeid(int value) {
        bitField1_ |= 0x04000000;
        stoneStrengthTypeid_ = value;
        onChanged();
        return this;
      }
      public Builder clearStoneStrengthTypeid() {
        bitField1_ = (bitField1_ & ~0x04000000);
        stoneStrengthTypeid_ = 20005;
        onChanged();
        return this;
      }
      
      // optional int32 stone_lucky_typeid = 63 [default = 24002];
      private int stoneLuckyTypeid_ = 24002;
      public boolean hasStoneLuckyTypeid() {
        return ((bitField1_ & 0x08000000) == 0x08000000);
      }
      public int getStoneLuckyTypeid() {
        return stoneLuckyTypeid_;
      }
      public Builder setStoneLuckyTypeid(int value) {
        bitField1_ |= 0x08000000;
        stoneLuckyTypeid_ = value;
        onChanged();
        return this;
      }
      public Builder clearStoneLuckyTypeid() {
        bitField1_ = (bitField1_ & ~0x08000000);
        stoneLuckyTypeid_ = 24002;
        onChanged();
        return this;
      }
      
      // optional int32 stone_god_typeid = 64 [default = 24001];
      private int stoneGodTypeid_ = 24001;
      public boolean hasStoneGodTypeid() {
        return ((bitField1_ & 0x10000000) == 0x10000000);
      }
      public int getStoneGodTypeid() {
        return stoneGodTypeid_;
      }
      public Builder setStoneGodTypeid(int value) {
        bitField1_ |= 0x10000000;
        stoneGodTypeid_ = value;
        onChanged();
        return this;
      }
      public Builder clearStoneGodTypeid() {
        bitField1_ = (bitField1_ & ~0x10000000);
        stoneGodTypeid_ = 24001;
        onChanged();
        return this;
      }
      
      // optional int32 stone_func_typeid = 65 [default = 21001];
      private int stoneFuncTypeid_ = 21001;
      public boolean hasStoneFuncTypeid() {
        return ((bitField1_ & 0x20000000) == 0x20000000);
      }
      public int getStoneFuncTypeid() {
        return stoneFuncTypeid_;
      }
      public Builder setStoneFuncTypeid(int value) {
        bitField1_ |= 0x20000000;
        stoneFuncTypeid_ = value;
        onChanged();
        return this;
      }
      public Builder clearStoneFuncTypeid() {
        bitField1_ = (bitField1_ & ~0x20000000);
        stoneFuncTypeid_ = 21001;
        onChanged();
        return this;
      }
      
      // optional int32 stone_ring_typeid = 66 [default = 21006];
      private int stoneRingTypeid_ = 21006;
      public boolean hasStoneRingTypeid() {
        return ((bitField1_ & 0x40000000) == 0x40000000);
      }
      public int getStoneRingTypeid() {
        return stoneRingTypeid_;
      }
      public Builder setStoneRingTypeid(int value) {
        bitField1_ |= 0x40000000;
        stoneRingTypeid_ = value;
        onChanged();
        return this;
      }
      public Builder clearStoneRingTypeid() {
        bitField1_ = (bitField1_ & ~0x40000000);
        stoneRingTypeid_ = 21006;
        onChanged();
        return this;
      }
      
      // optional int32 tool_recover_value = 67 [default = 500];
      private int toolRecoverValue_ = 500;
      public boolean hasToolRecoverValue() {
        return ((bitField1_ & 0x80000000) == 0x80000000);
      }
      public int getToolRecoverValue() {
        return toolRecoverValue_;
      }
      public Builder setToolRecoverValue(int value) {
        bitField1_ |= 0x80000000;
        toolRecoverValue_ = value;
        onChanged();
        return this;
      }
      public Builder clearToolRecoverValue() {
        bitField1_ = (bitField1_ & ~0x80000000);
        toolRecoverValue_ = 500;
        onChanged();
        return this;
      }
      
      // optional int32 tool_all_recover_value = 68 [default = 300];
      private int toolAllRecoverValue_ = 300;
      public boolean hasToolAllRecoverValue() {
        return ((bitField2_ & 0x00000001) == 0x00000001);
      }
      public int getToolAllRecoverValue() {
        return toolAllRecoverValue_;
      }
      public Builder setToolAllRecoverValue(int value) {
        bitField2_ |= 0x00000001;
        toolAllRecoverValue_ = value;
        onChanged();
        return this;
      }
      public Builder clearToolAllRecoverValue() {
        bitField2_ = (bitField2_ & ~0x00000001);
        toolAllRecoverValue_ = 300;
        onChanged();
        return this;
      }
      
      // optional int32 tool_energy_value = 69 [default = 100];
      private int toolEnergyValue_ = 100;
      public boolean hasToolEnergyValue() {
        return ((bitField2_ & 0x00000002) == 0x00000002);
      }
      public int getToolEnergyValue() {
        return toolEnergyValue_;
      }
      public Builder setToolEnergyValue(int value) {
        bitField2_ |= 0x00000002;
        toolEnergyValue_ = value;
        onChanged();
        return this;
      }
      public Builder clearToolEnergyValue() {
        bitField2_ = (bitField2_ & ~0x00000002);
        toolEnergyValue_ = 100;
        onChanged();
        return this;
      }
      
      // optional int32 tool_iced_value = 70 [default = 3];
      private int toolIcedValue_ = 3;
      public boolean hasToolIcedValue() {
        return ((bitField2_ & 0x00000004) == 0x00000004);
      }
      public int getToolIcedValue() {
        return toolIcedValue_;
      }
      public Builder setToolIcedValue(int value) {
        bitField2_ |= 0x00000004;
        toolIcedValue_ = value;
        onChanged();
        return this;
      }
      public Builder clearToolIcedValue() {
        bitField2_ = (bitField2_ & ~0x00000004);
        toolIcedValue_ = 3;
        onChanged();
        return this;
      }
      
      // optional int32 tool_hidden_value = 71 [default = 3];
      private int toolHiddenValue_ = 3;
      public boolean hasToolHiddenValue() {
        return ((bitField2_ & 0x00000008) == 0x00000008);
      }
      public int getToolHiddenValue() {
        return toolHiddenValue_;
      }
      public Builder setToolHiddenValue(int value) {
        bitField2_ |= 0x00000008;
        toolHiddenValue_ = value;
        onChanged();
        return this;
      }
      public Builder clearToolHiddenValue() {
        bitField2_ = (bitField2_ & ~0x00000008);
        toolHiddenValue_ = 3;
        onChanged();
        return this;
      }
      
      // optional int32 normal_shop_discount = 72 [default = 100];
      private int normalShopDiscount_ = 100;
      public boolean hasNormalShopDiscount() {
        return ((bitField2_ & 0x00000010) == 0x00000010);
      }
      public int getNormalShopDiscount() {
        return normalShopDiscount_;
      }
      public Builder setNormalShopDiscount(int value) {
        bitField2_ |= 0x00000010;
        normalShopDiscount_ = value;
        onChanged();
        return this;
      }
      public Builder clearNormalShopDiscount() {
        bitField2_ = (bitField2_ & ~0x00000010);
        normalShopDiscount_ = 100;
        onChanged();
        return this;
      }
      
      // optional int32 vip_shop_discount = 73 [default = 80];
      private int vipShopDiscount_ = 80;
      public boolean hasVipShopDiscount() {
        return ((bitField2_ & 0x00000020) == 0x00000020);
      }
      public int getVipShopDiscount() {
        return vipShopDiscount_;
      }
      public Builder setVipShopDiscount(int value) {
        bitField2_ |= 0x00000020;
        vipShopDiscount_ = value;
        onChanged();
        return this;
      }
      public Builder clearVipShopDiscount() {
        bitField2_ = (bitField2_ & ~0x00000020);
        vipShopDiscount_ = 80;
        onChanged();
        return this;
      }
      
      // optional int32 craft_stone_win = 74 [default = 24005];
      private int craftStoneWin_ = 24005;
      public boolean hasCraftStoneWin() {
        return ((bitField2_ & 0x00000040) == 0x00000040);
      }
      public int getCraftStoneWin() {
        return craftStoneWin_;
      }
      public Builder setCraftStoneWin(int value) {
        bitField2_ |= 0x00000040;
        craftStoneWin_ = value;
        onChanged();
        return this;
      }
      public Builder clearCraftStoneWin() {
        bitField2_ = (bitField2_ & ~0x00000040);
        craftStoneWin_ = 24005;
        onChanged();
        return this;
      }
      
      // optional int32 newbie_battle_guide = 75 [default = 5];
      private int newbieBattleGuide_ = 5;
      public boolean hasNewbieBattleGuide() {
        return ((bitField2_ & 0x00000080) == 0x00000080);
      }
      public int getNewbieBattleGuide() {
        return newbieBattleGuide_;
      }
      public Builder setNewbieBattleGuide(int value) {
        bitField2_ |= 0x00000080;
        newbieBattleGuide_ = value;
        onChanged();
        return this;
      }
      public Builder clearNewbieBattleGuide() {
        bitField2_ = (bitField2_ & ~0x00000080);
        newbieBattleGuide_ = 5;
        onChanged();
        return this;
      }
      
      // optional int32 craft_stone_diamond = 76 [default = 20031];
      private int craftStoneDiamond_ = 20031;
      public boolean hasCraftStoneDiamond() {
        return ((bitField2_ & 0x00000100) == 0x00000100);
      }
      public int getCraftStoneDiamond() {
        return craftStoneDiamond_;
      }
      public Builder setCraftStoneDiamond(int value) {
        bitField2_ |= 0x00000100;
        craftStoneDiamond_ = value;
        onChanged();
        return this;
      }
      public Builder clearCraftStoneDiamond() {
        bitField2_ = (bitField2_ & ~0x00000100);
        craftStoneDiamond_ = 20031;
        onChanged();
        return this;
      }
      
      // optional int32 craft_stone_crystal = 77 [default = 20041];
      private int craftStoneCrystal_ = 20041;
      public boolean hasCraftStoneCrystal() {
        return ((bitField2_ & 0x00000200) == 0x00000200);
      }
      public int getCraftStoneCrystal() {
        return craftStoneCrystal_;
      }
      public Builder setCraftStoneCrystal(int value) {
        bitField2_ |= 0x00000200;
        craftStoneCrystal_ = value;
        onChanged();
        return this;
      }
      public Builder clearCraftStoneCrystal() {
        bitField2_ = (bitField2_ & ~0x00000200);
        craftStoneCrystal_ = 20041;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.xinqihd.sns.gameserver.proto.BseGameDataKey)
    }
    
    static {
      defaultInstance = new BseGameDataKey(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.xinqihd.sns.gameserver.proto.BseGameDataKey)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_xinqihd_sns_gameserver_proto_BseGameDataKey_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_xinqihd_sns_gameserver_proto_BseGameDataKey_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024BseGameDataKey.proto\022 com.xinqihd.sns." +
      "gameserver.proto\"\252\023\n\016BseGameDataKey\022\034\n\017b" +
      "attle_attack_k\030\001 \001(\005:\003591\022\034\n\017battle_atta" +
      "ck_F\030\002 \001(\005:\003750\022\034\n\017battle_attack_G\030\003 \001(\005" +
      ":\003760\022\031\n\016thew_role_move\030\007 \001(\005:\0015\022$\n\027thew" +
      "_attacktwomoretimes\030\010 \001(\005:\003110\022#\n\026thew_a" +
      "ttackthreebranch\030\t \001(\005:\003110\022$\n\027thew_atta" +
      "ckonemoretimes\030\n \001(\005:\003110\022\032\n\016thew_hurtad" +
      "d50\030\013 \001(\005:\00285\022\032\n\016thew_hurtadd40\030\014 \001(\005:\0028" +
      "0\022\032\n\016thew_hurtadd30\030\r \001(\005:\00270\022\032\n\016thew_hu",
      "rtadd20\030\016 \001(\005:\00255\022\032\n\016thew_hurtadd10\030\017 \001(" +
      "\005:\00250\022\036\n\021thew_tool_recover\030\020 \001(\005:\003150\022!\n" +
      "\024thew_tool_allrecover\030\021 \001(\005:\003170\022\034\n\020thew" +
      "_tool_hidden\030\022 \001(\005:\00250\022 \n\023thew_tool_allh" +
      "idden\030\023 \001(\005:\003150\022\032\n\016thew_tool_wind\030\024 \001(\005" +
      ":\00250\022\032\n\rthew_tool_ice\030\025 \001(\005:\003150\022\032\n\rthew" +
      "_tool_fly\030\026 \001(\005:\003150\022\034\n\017thew_tool_guide\030" +
      "\027 \001(\005:\003120\022\035\n\020thew_tool_energy\030\030 \001(\005:\00312" +
      "0\022\033\n\016thew_tool_atom\030\031 \001(\005:\003110\022\034\n\020thew_t" +
      "ool_nohole\030\032 \001(\005:\00250\022\037\n\020craft_stone_luck",
      "\030\033 \001(\005:\00520001\022!\n\022craft_stone_defend\030\034 \001(" +
      "\005:\00520002\022\"\n\023craft_stone_agility\030\035 \001(\005:\0052" +
      "0003\022!\n\022craft_stone_attack\030\036 \001(\005:\00520004\022" +
      "#\n\024craft_stone_strength\030\037 \001(\005:\00520005\022!\n\022" +
      "craft_stone_lucky1\030  \001(\005:\00524002\022!\n\022craft" +
      "_stone_lucky2\030! \001(\005:\00524004\022\036\n\017craft_ston" +
      "e_god\030\" \001(\005:\00524001\022+\n\035price_tool_AttackT" +
      "woMoreTimes\030# \001(\005:\0041200\022*\n\034price_tool_At" +
      "tackThreeBranch\030$ \001(\005:\0041200\022+\n\035price_too" +
      "l_AttackOneMoreTimes\030% \001(\005:\0041200\022\"\n\024pric",
      "e_tool_HurtAdd50\030& \001(\005:\0041200\022\"\n\024price_to" +
      "ol_HurtAdd40\030\' \001(\005:\0041200\022\"\n\024price_tool_H" +
      "urtAdd30\030( \001(\005:\0041200\022\"\n\024price_tool_HurtA" +
      "dd20\030) \001(\005:\0041200\022\"\n\024price_tool_HurtAdd10" +
      "\030* \001(\005:\0041200\022 \n\022price_tool_Recover\030+ \001(\005" +
      ":\0041200\022\"\n\025price_tool_AllRecover\030, \001(\005:\0031" +
      "20\022\037\n\021price_tool_Hidden\030- \001(\005:\0041200\022\"\n\024p" +
      "rice_tool_AllHidden\030. \001(\005:\0041200\022\035\n\017price" +
      "_tool_Wind\030/ \001(\005:\0041200\022\034\n\016price_tool_Ice" +
      "\0300 \001(\005:\0041200\022\034\n\016price_tool_Fly\0301 \001(\005:\00412",
      "00\022\036\n\020price_tool_Guide\0302 \001(\005:\0041200\022\037\n\021pr" +
      "ice_tool_Energy\0303 \001(\005:\0041200\022\035\n\017price_too" +
      "l_Atom\0304 \001(\005:\0041200\022\037\n\021price_tool_NoHole\030" +
      "5 \001(\005:\0041200\022\026\n\nsell_tool_\0306 \001(\005:\00285\022!\n\023p" +
      "rice_craft_compose\0307 \001(\005:\0042000\022\037\n\021price_" +
      "craft_forge\0308 \001(\005:\0042000\022\"\n\024price_craft_t" +
      "ransfer\0309 \001(\005:\0045000\022!\n\022stone_water_typei" +
      "d\030: \001(\005:\00520001\022!\n\022stone_earth_typeid\030; \001" +
      "(\005:\00520002\022 \n\021stone_wing_typeid\030< \001(\005:\00520" +
      "003\022 \n\021stone_fire_typeid\030= \001(\005:\00520004\022$\n",
      "\025stone_strength_typeid\030> \001(\005:\00520005\022!\n\022s" +
      "tone_lucky_typeid\030? \001(\005:\00524002\022\037\n\020stone_" +
      "god_typeid\030@ \001(\005:\00524001\022 \n\021stone_func_ty" +
      "peid\030A \001(\005:\00521001\022 \n\021stone_ring_typeid\030B" +
      " \001(\005:\00521006\022\037\n\022tool_recover_value\030C \001(\005:" +
      "\003500\022#\n\026tool_all_recover_value\030D \001(\005:\00330" +
      "0\022\036\n\021tool_energy_value\030E \001(\005:\003100\022\032\n\017too" +
      "l_iced_value\030F \001(\005:\0013\022\034\n\021tool_hidden_val" +
      "ue\030G \001(\005:\0013\022!\n\024normal_shop_discount\030H \001(" +
      "\005:\003100\022\035\n\021vip_shop_discount\030I \001(\005:\00280\022\036\n",
      "\017craft_stone_win\030J \001(\005:\00524005\022\036\n\023newbie_" +
      "battle_guide\030K \001(\005:\0015\022\"\n\023craft_stone_dia" +
      "mond\030L \001(\005:\00520031\022\"\n\023craft_stone_crystal" +
      "\030M \001(\005:\00520041B\025B\023XinqiBseGameDataKey"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_xinqihd_sns_gameserver_proto_BseGameDataKey_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_xinqihd_sns_gameserver_proto_BseGameDataKey_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_xinqihd_sns_gameserver_proto_BseGameDataKey_descriptor,
              new java.lang.String[] { "BattleAttackK", "BattleAttackF", "BattleAttackG", "ThewRoleMove", "ThewAttacktwomoretimes", "ThewAttackthreebranch", "ThewAttackonemoretimes", "ThewHurtadd50", "ThewHurtadd40", "ThewHurtadd30", "ThewHurtadd20", "ThewHurtadd10", "ThewToolRecover", "ThewToolAllrecover", "ThewToolHidden", "ThewToolAllhidden", "ThewToolWind", "ThewToolIce", "ThewToolFly", "ThewToolGuide", "ThewToolEnergy", "ThewToolAtom", "ThewToolNohole", "CraftStoneLuck", "CraftStoneDefend", "CraftStoneAgility", "CraftStoneAttack", "CraftStoneStrength", "CraftStoneLucky1", "CraftStoneLucky2", "CraftStoneGod", "PriceToolAttackTwoMoreTimes", "PriceToolAttackThreeBranch", "PriceToolAttackOneMoreTimes", "PriceToolHurtAdd50", "PriceToolHurtAdd40", "PriceToolHurtAdd30", "PriceToolHurtAdd20", "PriceToolHurtAdd10", "PriceToolRecover", "PriceToolAllRecover", "PriceToolHidden", "PriceToolAllHidden", "PriceToolWind", "PriceToolIce", "PriceToolFly", "PriceToolGuide", "PriceToolEnergy", "PriceToolAtom", "PriceToolNoHole", "SellTool", "PriceCraftCompose", "PriceCraftForge", "PriceCraftTransfer", "StoneWaterTypeid", "StoneEarthTypeid", "StoneWingTypeid", "StoneFireTypeid", "StoneStrengthTypeid", "StoneLuckyTypeid", "StoneGodTypeid", "StoneFuncTypeid", "StoneRingTypeid", "ToolRecoverValue", "ToolAllRecoverValue", "ToolEnergyValue", "ToolIcedValue", "ToolHiddenValue", "NormalShopDiscount", "VipShopDiscount", "CraftStoneWin", "NewbieBattleGuide", "CraftStoneDiamond", "CraftStoneCrystal", },
              com.xinqihd.sns.gameserver.proto.XinqiBseGameDataKey.BseGameDataKey.class,
              com.xinqihd.sns.gameserver.proto.XinqiBseGameDataKey.BseGameDataKey.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
