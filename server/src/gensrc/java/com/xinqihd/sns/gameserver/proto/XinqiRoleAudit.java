// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RoleAudit.proto

package com.xinqihd.sns.gameserver.proto;

public final class XinqiRoleAudit {
  private XinqiRoleAudit() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface RoleAuditOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required string sessionId = 1;
    boolean hasSessionId();
    String getSessionId();
    
    // required int32 level = 2;
    boolean hasLevel();
    int getLevel();
    
    // required int32 exp = 3;
    boolean hasExp();
    int getExp();
    
    // required int32 expDeta = 4;
    boolean hasExpDeta();
    int getExpDeta();
    
    // required int32 maxExp = 5;
    boolean hasMaxExp();
    int getMaxExp();
    
    // required int32 kill = 6;
    boolean hasKill();
    int getKill();
    
    // required int32 hit = 7;
    boolean hasHit();
    int getHit();
    
    // optional int32 battleMode = 8;
    boolean hasBattleMode();
    int getBattleMode();
    
    // optional int32 roomType = 9;
    boolean hasRoomType();
    int getRoomType();
    
    // optional int32 damage = 10;
    boolean hasDamage();
    int getDamage();
    
    // optional int32 creditDeta = 11;
    boolean hasCreditDeta();
    int getCreditDeta();
    
    // optional int32 hurtBlood = 12;
    boolean hasHurtBlood();
    int getHurtBlood();
    
    // optional int32 winGame = 13;
    boolean hasWinGame();
    int getWinGame();
    
    // optional int32 totalUser = 14;
    boolean hasTotalUser();
    int getTotalUser();
    
    // optional int32 powerDiff = 15;
    boolean hasPowerDiff();
    int getPowerDiff();
    
    // optional int32 hitRatio = 16;
    boolean hasHitRatio();
    int getHitRatio();
    
    // optional int32 killNum = 17;
    boolean hasKillNum();
    int getKillNum();
    
    // optional int32 dropNum = 18;
    boolean hasDropNum();
    int getDropNum();
    
    // optional int32 perfect = 19;
    boolean hasPerfect();
    int getPerfect();
    
    // optional int32 spy = 20;
    boolean hasSpy();
    int getSpy();
    
    // optional int32 secondKill = 21;
    boolean hasSecondKill();
    int getSecondKill();
    
    // optional int32 roundNum = 22;
    boolean hasRoundNum();
    int getRoundNum();
    
    // optional int32 accurateNum = 23;
    boolean hasAccurateNum();
    int getAccurateNum();
    
    // optional string remark = 24;
    boolean hasRemark();
    String getRemark();
    
    // optional int32 actexp = 25;
    boolean hasActexp();
    int getActexp();
  }
  public static final class RoleAudit extends
      com.google.protobuf.GeneratedMessage
      implements RoleAuditOrBuilder {
    // Use RoleAudit.newBuilder() to construct.
    private RoleAudit(Builder builder) {
      super(builder);
    }
    private RoleAudit(boolean noInit) {}
    
    private static final RoleAudit defaultInstance;
    public static RoleAudit getDefaultInstance() {
      return defaultInstance;
    }
    
    public RoleAudit getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.xinqihd.sns.gameserver.proto.XinqiRoleAudit.internal_static_com_xinqihd_sns_gameserver_proto_RoleAudit_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.xinqihd.sns.gameserver.proto.XinqiRoleAudit.internal_static_com_xinqihd_sns_gameserver_proto_RoleAudit_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required string sessionId = 1;
    public static final int SESSIONID_FIELD_NUMBER = 1;
    private java.lang.Object sessionId_;
    public boolean hasSessionId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getSessionId() {
      java.lang.Object ref = sessionId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          sessionId_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getSessionIdBytes() {
      java.lang.Object ref = sessionId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        sessionId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required int32 level = 2;
    public static final int LEVEL_FIELD_NUMBER = 2;
    private int level_;
    public boolean hasLevel() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getLevel() {
      return level_;
    }
    
    // required int32 exp = 3;
    public static final int EXP_FIELD_NUMBER = 3;
    private int exp_;
    public boolean hasExp() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getExp() {
      return exp_;
    }
    
    // required int32 expDeta = 4;
    public static final int EXPDETA_FIELD_NUMBER = 4;
    private int expDeta_;
    public boolean hasExpDeta() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getExpDeta() {
      return expDeta_;
    }
    
    // required int32 maxExp = 5;
    public static final int MAXEXP_FIELD_NUMBER = 5;
    private int maxExp_;
    public boolean hasMaxExp() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getMaxExp() {
      return maxExp_;
    }
    
    // required int32 kill = 6;
    public static final int KILL_FIELD_NUMBER = 6;
    private int kill_;
    public boolean hasKill() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getKill() {
      return kill_;
    }
    
    // required int32 hit = 7;
    public static final int HIT_FIELD_NUMBER = 7;
    private int hit_;
    public boolean hasHit() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public int getHit() {
      return hit_;
    }
    
    // optional int32 battleMode = 8;
    public static final int BATTLEMODE_FIELD_NUMBER = 8;
    private int battleMode_;
    public boolean hasBattleMode() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public int getBattleMode() {
      return battleMode_;
    }
    
    // optional int32 roomType = 9;
    public static final int ROOMTYPE_FIELD_NUMBER = 9;
    private int roomType_;
    public boolean hasRoomType() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public int getRoomType() {
      return roomType_;
    }
    
    // optional int32 damage = 10;
    public static final int DAMAGE_FIELD_NUMBER = 10;
    private int damage_;
    public boolean hasDamage() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public int getDamage() {
      return damage_;
    }
    
    // optional int32 creditDeta = 11;
    public static final int CREDITDETA_FIELD_NUMBER = 11;
    private int creditDeta_;
    public boolean hasCreditDeta() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    public int getCreditDeta() {
      return creditDeta_;
    }
    
    // optional int32 hurtBlood = 12;
    public static final int HURTBLOOD_FIELD_NUMBER = 12;
    private int hurtBlood_;
    public boolean hasHurtBlood() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    public int getHurtBlood() {
      return hurtBlood_;
    }
    
    // optional int32 winGame = 13;
    public static final int WINGAME_FIELD_NUMBER = 13;
    private int winGame_;
    public boolean hasWinGame() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    public int getWinGame() {
      return winGame_;
    }
    
    // optional int32 totalUser = 14;
    public static final int TOTALUSER_FIELD_NUMBER = 14;
    private int totalUser_;
    public boolean hasTotalUser() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    public int getTotalUser() {
      return totalUser_;
    }
    
    // optional int32 powerDiff = 15;
    public static final int POWERDIFF_FIELD_NUMBER = 15;
    private int powerDiff_;
    public boolean hasPowerDiff() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    public int getPowerDiff() {
      return powerDiff_;
    }
    
    // optional int32 hitRatio = 16;
    public static final int HITRATIO_FIELD_NUMBER = 16;
    private int hitRatio_;
    public boolean hasHitRatio() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    public int getHitRatio() {
      return hitRatio_;
    }
    
    // optional int32 killNum = 17;
    public static final int KILLNUM_FIELD_NUMBER = 17;
    private int killNum_;
    public boolean hasKillNum() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    public int getKillNum() {
      return killNum_;
    }
    
    // optional int32 dropNum = 18;
    public static final int DROPNUM_FIELD_NUMBER = 18;
    private int dropNum_;
    public boolean hasDropNum() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    public int getDropNum() {
      return dropNum_;
    }
    
    // optional int32 perfect = 19;
    public static final int PERFECT_FIELD_NUMBER = 19;
    private int perfect_;
    public boolean hasPerfect() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    public int getPerfect() {
      return perfect_;
    }
    
    // optional int32 spy = 20;
    public static final int SPY_FIELD_NUMBER = 20;
    private int spy_;
    public boolean hasSpy() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    public int getSpy() {
      return spy_;
    }
    
    // optional int32 secondKill = 21;
    public static final int SECONDKILL_FIELD_NUMBER = 21;
    private int secondKill_;
    public boolean hasSecondKill() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    public int getSecondKill() {
      return secondKill_;
    }
    
    // optional int32 roundNum = 22;
    public static final int ROUNDNUM_FIELD_NUMBER = 22;
    private int roundNum_;
    public boolean hasRoundNum() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    public int getRoundNum() {
      return roundNum_;
    }
    
    // optional int32 accurateNum = 23;
    public static final int ACCURATENUM_FIELD_NUMBER = 23;
    private int accurateNum_;
    public boolean hasAccurateNum() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    public int getAccurateNum() {
      return accurateNum_;
    }
    
    // optional string remark = 24;
    public static final int REMARK_FIELD_NUMBER = 24;
    private java.lang.Object remark_;
    public boolean hasRemark() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    public String getRemark() {
      java.lang.Object ref = remark_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          remark_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getRemarkBytes() {
      java.lang.Object ref = remark_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        remark_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional int32 actexp = 25;
    public static final int ACTEXP_FIELD_NUMBER = 25;
    private int actexp_;
    public boolean hasActexp() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    public int getActexp() {
      return actexp_;
    }
    
    private void initFields() {
      sessionId_ = "";
      level_ = 0;
      exp_ = 0;
      expDeta_ = 0;
      maxExp_ = 0;
      kill_ = 0;
      hit_ = 0;
      battleMode_ = 0;
      roomType_ = 0;
      damage_ = 0;
      creditDeta_ = 0;
      hurtBlood_ = 0;
      winGame_ = 0;
      totalUser_ = 0;
      powerDiff_ = 0;
      hitRatio_ = 0;
      killNum_ = 0;
      dropNum_ = 0;
      perfect_ = 0;
      spy_ = 0;
      secondKill_ = 0;
      roundNum_ = 0;
      accurateNum_ = 0;
      remark_ = "";
      actexp_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasSessionId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLevel()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasExp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasExpDeta()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMaxExp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasKill()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHit()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getSessionIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, level_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, exp_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, expDeta_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, maxExp_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, kill_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, hit_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, battleMode_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, roomType_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, damage_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, creditDeta_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(12, hurtBlood_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(13, winGame_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(14, totalUser_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(15, powerDiff_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(16, hitRatio_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeInt32(17, killNum_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeInt32(18, dropNum_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeInt32(19, perfect_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeInt32(20, spy_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeInt32(21, secondKill_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeInt32(22, roundNum_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeInt32(23, accurateNum_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeBytes(24, getRemarkBytes());
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        output.writeInt32(25, actexp_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getSessionIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, level_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, exp_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, expDeta_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, maxExp_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, kill_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, hit_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, battleMode_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, roomType_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, damage_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, creditDeta_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, hurtBlood_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, winGame_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, totalUser_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, powerDiff_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, hitRatio_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, killNum_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, dropNum_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, perfect_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(20, spy_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(21, secondKill_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(22, roundNum_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(23, accurateNum_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(24, getRemarkBytes());
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(25, actexp_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.xinqihd.sns.gameserver.proto.XinqiRoleAudit.RoleAudit parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiRoleAudit.RoleAudit parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiRoleAudit.RoleAudit parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiRoleAudit.RoleAudit parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiRoleAudit.RoleAudit parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiRoleAudit.RoleAudit parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiRoleAudit.RoleAudit parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiRoleAudit.RoleAudit parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiRoleAudit.RoleAudit parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiRoleAudit.RoleAudit parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.xinqihd.sns.gameserver.proto.XinqiRoleAudit.RoleAudit prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.xinqihd.sns.gameserver.proto.XinqiRoleAudit.RoleAuditOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.xinqihd.sns.gameserver.proto.XinqiRoleAudit.internal_static_com_xinqihd_sns_gameserver_proto_RoleAudit_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.xinqihd.sns.gameserver.proto.XinqiRoleAudit.internal_static_com_xinqihd_sns_gameserver_proto_RoleAudit_fieldAccessorTable;
      }
      
      // Construct using com.xinqihd.sns.gameserver.proto.XinqiRoleAudit.RoleAudit.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        sessionId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        level_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        exp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        expDeta_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        maxExp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        kill_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        hit_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        battleMode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        roomType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        damage_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        creditDeta_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        hurtBlood_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        winGame_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        totalUser_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        powerDiff_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        hitRatio_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        killNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        dropNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        perfect_ = 0;
        bitField0_ = (bitField0_ & ~0x00040000);
        spy_ = 0;
        bitField0_ = (bitField0_ & ~0x00080000);
        secondKill_ = 0;
        bitField0_ = (bitField0_ & ~0x00100000);
        roundNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00200000);
        accurateNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00400000);
        remark_ = "";
        bitField0_ = (bitField0_ & ~0x00800000);
        actexp_ = 0;
        bitField0_ = (bitField0_ & ~0x01000000);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.xinqihd.sns.gameserver.proto.XinqiRoleAudit.RoleAudit.getDescriptor();
      }
      
      public com.xinqihd.sns.gameserver.proto.XinqiRoleAudit.RoleAudit getDefaultInstanceForType() {
        return com.xinqihd.sns.gameserver.proto.XinqiRoleAudit.RoleAudit.getDefaultInstance();
      }
      
      public com.xinqihd.sns.gameserver.proto.XinqiRoleAudit.RoleAudit build() {
        com.xinqihd.sns.gameserver.proto.XinqiRoleAudit.RoleAudit result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.xinqihd.sns.gameserver.proto.XinqiRoleAudit.RoleAudit buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.xinqihd.sns.gameserver.proto.XinqiRoleAudit.RoleAudit result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.xinqihd.sns.gameserver.proto.XinqiRoleAudit.RoleAudit buildPartial() {
        com.xinqihd.sns.gameserver.proto.XinqiRoleAudit.RoleAudit result = new com.xinqihd.sns.gameserver.proto.XinqiRoleAudit.RoleAudit(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.sessionId_ = sessionId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.level_ = level_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.exp_ = exp_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.expDeta_ = expDeta_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.maxExp_ = maxExp_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.kill_ = kill_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.hit_ = hit_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.battleMode_ = battleMode_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.roomType_ = roomType_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.damage_ = damage_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.creditDeta_ = creditDeta_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.hurtBlood_ = hurtBlood_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.winGame_ = winGame_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.totalUser_ = totalUser_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.powerDiff_ = powerDiff_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.hitRatio_ = hitRatio_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.killNum_ = killNum_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.dropNum_ = dropNum_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.perfect_ = perfect_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.spy_ = spy_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.secondKill_ = secondKill_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.roundNum_ = roundNum_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00400000;
        }
        result.accurateNum_ = accurateNum_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00800000;
        }
        result.remark_ = remark_;
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x01000000;
        }
        result.actexp_ = actexp_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.xinqihd.sns.gameserver.proto.XinqiRoleAudit.RoleAudit) {
          return mergeFrom((com.xinqihd.sns.gameserver.proto.XinqiRoleAudit.RoleAudit)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.xinqihd.sns.gameserver.proto.XinqiRoleAudit.RoleAudit other) {
        if (other == com.xinqihd.sns.gameserver.proto.XinqiRoleAudit.RoleAudit.getDefaultInstance()) return this;
        if (other.hasSessionId()) {
          setSessionId(other.getSessionId());
        }
        if (other.hasLevel()) {
          setLevel(other.getLevel());
        }
        if (other.hasExp()) {
          setExp(other.getExp());
        }
        if (other.hasExpDeta()) {
          setExpDeta(other.getExpDeta());
        }
        if (other.hasMaxExp()) {
          setMaxExp(other.getMaxExp());
        }
        if (other.hasKill()) {
          setKill(other.getKill());
        }
        if (other.hasHit()) {
          setHit(other.getHit());
        }
        if (other.hasBattleMode()) {
          setBattleMode(other.getBattleMode());
        }
        if (other.hasRoomType()) {
          setRoomType(other.getRoomType());
        }
        if (other.hasDamage()) {
          setDamage(other.getDamage());
        }
        if (other.hasCreditDeta()) {
          setCreditDeta(other.getCreditDeta());
        }
        if (other.hasHurtBlood()) {
          setHurtBlood(other.getHurtBlood());
        }
        if (other.hasWinGame()) {
          setWinGame(other.getWinGame());
        }
        if (other.hasTotalUser()) {
          setTotalUser(other.getTotalUser());
        }
        if (other.hasPowerDiff()) {
          setPowerDiff(other.getPowerDiff());
        }
        if (other.hasHitRatio()) {
          setHitRatio(other.getHitRatio());
        }
        if (other.hasKillNum()) {
          setKillNum(other.getKillNum());
        }
        if (other.hasDropNum()) {
          setDropNum(other.getDropNum());
        }
        if (other.hasPerfect()) {
          setPerfect(other.getPerfect());
        }
        if (other.hasSpy()) {
          setSpy(other.getSpy());
        }
        if (other.hasSecondKill()) {
          setSecondKill(other.getSecondKill());
        }
        if (other.hasRoundNum()) {
          setRoundNum(other.getRoundNum());
        }
        if (other.hasAccurateNum()) {
          setAccurateNum(other.getAccurateNum());
        }
        if (other.hasRemark()) {
          setRemark(other.getRemark());
        }
        if (other.hasActexp()) {
          setActexp(other.getActexp());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasSessionId()) {
          
          return false;
        }
        if (!hasLevel()) {
          
          return false;
        }
        if (!hasExp()) {
          
          return false;
        }
        if (!hasExpDeta()) {
          
          return false;
        }
        if (!hasMaxExp()) {
          
          return false;
        }
        if (!hasKill()) {
          
          return false;
        }
        if (!hasHit()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              sessionId_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              level_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              exp_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              expDeta_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              maxExp_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              kill_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              hit_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              battleMode_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              roomType_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              damage_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              creditDeta_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              hurtBlood_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              winGame_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              totalUser_ = input.readInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              powerDiff_ = input.readInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00008000;
              hitRatio_ = input.readInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00010000;
              killNum_ = input.readInt32();
              break;
            }
            case 144: {
              bitField0_ |= 0x00020000;
              dropNum_ = input.readInt32();
              break;
            }
            case 152: {
              bitField0_ |= 0x00040000;
              perfect_ = input.readInt32();
              break;
            }
            case 160: {
              bitField0_ |= 0x00080000;
              spy_ = input.readInt32();
              break;
            }
            case 168: {
              bitField0_ |= 0x00100000;
              secondKill_ = input.readInt32();
              break;
            }
            case 176: {
              bitField0_ |= 0x00200000;
              roundNum_ = input.readInt32();
              break;
            }
            case 184: {
              bitField0_ |= 0x00400000;
              accurateNum_ = input.readInt32();
              break;
            }
            case 194: {
              bitField0_ |= 0x00800000;
              remark_ = input.readBytes();
              break;
            }
            case 200: {
              bitField0_ |= 0x01000000;
              actexp_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string sessionId = 1;
      private java.lang.Object sessionId_ = "";
      public boolean hasSessionId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getSessionId() {
        java.lang.Object ref = sessionId_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          sessionId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setSessionId(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        sessionId_ = value;
        onChanged();
        return this;
      }
      public Builder clearSessionId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        sessionId_ = getDefaultInstance().getSessionId();
        onChanged();
        return this;
      }
      void setSessionId(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        sessionId_ = value;
        onChanged();
      }
      
      // required int32 level = 2;
      private int level_ ;
      public boolean hasLevel() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getLevel() {
        return level_;
      }
      public Builder setLevel(int value) {
        bitField0_ |= 0x00000002;
        level_ = value;
        onChanged();
        return this;
      }
      public Builder clearLevel() {
        bitField0_ = (bitField0_ & ~0x00000002);
        level_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 exp = 3;
      private int exp_ ;
      public boolean hasExp() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getExp() {
        return exp_;
      }
      public Builder setExp(int value) {
        bitField0_ |= 0x00000004;
        exp_ = value;
        onChanged();
        return this;
      }
      public Builder clearExp() {
        bitField0_ = (bitField0_ & ~0x00000004);
        exp_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 expDeta = 4;
      private int expDeta_ ;
      public boolean hasExpDeta() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getExpDeta() {
        return expDeta_;
      }
      public Builder setExpDeta(int value) {
        bitField0_ |= 0x00000008;
        expDeta_ = value;
        onChanged();
        return this;
      }
      public Builder clearExpDeta() {
        bitField0_ = (bitField0_ & ~0x00000008);
        expDeta_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 maxExp = 5;
      private int maxExp_ ;
      public boolean hasMaxExp() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getMaxExp() {
        return maxExp_;
      }
      public Builder setMaxExp(int value) {
        bitField0_ |= 0x00000010;
        maxExp_ = value;
        onChanged();
        return this;
      }
      public Builder clearMaxExp() {
        bitField0_ = (bitField0_ & ~0x00000010);
        maxExp_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 kill = 6;
      private int kill_ ;
      public boolean hasKill() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getKill() {
        return kill_;
      }
      public Builder setKill(int value) {
        bitField0_ |= 0x00000020;
        kill_ = value;
        onChanged();
        return this;
      }
      public Builder clearKill() {
        bitField0_ = (bitField0_ & ~0x00000020);
        kill_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 hit = 7;
      private int hit_ ;
      public boolean hasHit() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public int getHit() {
        return hit_;
      }
      public Builder setHit(int value) {
        bitField0_ |= 0x00000040;
        hit_ = value;
        onChanged();
        return this;
      }
      public Builder clearHit() {
        bitField0_ = (bitField0_ & ~0x00000040);
        hit_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 battleMode = 8;
      private int battleMode_ ;
      public boolean hasBattleMode() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public int getBattleMode() {
        return battleMode_;
      }
      public Builder setBattleMode(int value) {
        bitField0_ |= 0x00000080;
        battleMode_ = value;
        onChanged();
        return this;
      }
      public Builder clearBattleMode() {
        bitField0_ = (bitField0_ & ~0x00000080);
        battleMode_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 roomType = 9;
      private int roomType_ ;
      public boolean hasRoomType() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public int getRoomType() {
        return roomType_;
      }
      public Builder setRoomType(int value) {
        bitField0_ |= 0x00000100;
        roomType_ = value;
        onChanged();
        return this;
      }
      public Builder clearRoomType() {
        bitField0_ = (bitField0_ & ~0x00000100);
        roomType_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 damage = 10;
      private int damage_ ;
      public boolean hasDamage() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public int getDamage() {
        return damage_;
      }
      public Builder setDamage(int value) {
        bitField0_ |= 0x00000200;
        damage_ = value;
        onChanged();
        return this;
      }
      public Builder clearDamage() {
        bitField0_ = (bitField0_ & ~0x00000200);
        damage_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 creditDeta = 11;
      private int creditDeta_ ;
      public boolean hasCreditDeta() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public int getCreditDeta() {
        return creditDeta_;
      }
      public Builder setCreditDeta(int value) {
        bitField0_ |= 0x00000400;
        creditDeta_ = value;
        onChanged();
        return this;
      }
      public Builder clearCreditDeta() {
        bitField0_ = (bitField0_ & ~0x00000400);
        creditDeta_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 hurtBlood = 12;
      private int hurtBlood_ ;
      public boolean hasHurtBlood() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      public int getHurtBlood() {
        return hurtBlood_;
      }
      public Builder setHurtBlood(int value) {
        bitField0_ |= 0x00000800;
        hurtBlood_ = value;
        onChanged();
        return this;
      }
      public Builder clearHurtBlood() {
        bitField0_ = (bitField0_ & ~0x00000800);
        hurtBlood_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 winGame = 13;
      private int winGame_ ;
      public boolean hasWinGame() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      public int getWinGame() {
        return winGame_;
      }
      public Builder setWinGame(int value) {
        bitField0_ |= 0x00001000;
        winGame_ = value;
        onChanged();
        return this;
      }
      public Builder clearWinGame() {
        bitField0_ = (bitField0_ & ~0x00001000);
        winGame_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 totalUser = 14;
      private int totalUser_ ;
      public boolean hasTotalUser() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      public int getTotalUser() {
        return totalUser_;
      }
      public Builder setTotalUser(int value) {
        bitField0_ |= 0x00002000;
        totalUser_ = value;
        onChanged();
        return this;
      }
      public Builder clearTotalUser() {
        bitField0_ = (bitField0_ & ~0x00002000);
        totalUser_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 powerDiff = 15;
      private int powerDiff_ ;
      public boolean hasPowerDiff() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      public int getPowerDiff() {
        return powerDiff_;
      }
      public Builder setPowerDiff(int value) {
        bitField0_ |= 0x00004000;
        powerDiff_ = value;
        onChanged();
        return this;
      }
      public Builder clearPowerDiff() {
        bitField0_ = (bitField0_ & ~0x00004000);
        powerDiff_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 hitRatio = 16;
      private int hitRatio_ ;
      public boolean hasHitRatio() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      public int getHitRatio() {
        return hitRatio_;
      }
      public Builder setHitRatio(int value) {
        bitField0_ |= 0x00008000;
        hitRatio_ = value;
        onChanged();
        return this;
      }
      public Builder clearHitRatio() {
        bitField0_ = (bitField0_ & ~0x00008000);
        hitRatio_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 killNum = 17;
      private int killNum_ ;
      public boolean hasKillNum() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      public int getKillNum() {
        return killNum_;
      }
      public Builder setKillNum(int value) {
        bitField0_ |= 0x00010000;
        killNum_ = value;
        onChanged();
        return this;
      }
      public Builder clearKillNum() {
        bitField0_ = (bitField0_ & ~0x00010000);
        killNum_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 dropNum = 18;
      private int dropNum_ ;
      public boolean hasDropNum() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      public int getDropNum() {
        return dropNum_;
      }
      public Builder setDropNum(int value) {
        bitField0_ |= 0x00020000;
        dropNum_ = value;
        onChanged();
        return this;
      }
      public Builder clearDropNum() {
        bitField0_ = (bitField0_ & ~0x00020000);
        dropNum_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 perfect = 19;
      private int perfect_ ;
      public boolean hasPerfect() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      public int getPerfect() {
        return perfect_;
      }
      public Builder setPerfect(int value) {
        bitField0_ |= 0x00040000;
        perfect_ = value;
        onChanged();
        return this;
      }
      public Builder clearPerfect() {
        bitField0_ = (bitField0_ & ~0x00040000);
        perfect_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 spy = 20;
      private int spy_ ;
      public boolean hasSpy() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      public int getSpy() {
        return spy_;
      }
      public Builder setSpy(int value) {
        bitField0_ |= 0x00080000;
        spy_ = value;
        onChanged();
        return this;
      }
      public Builder clearSpy() {
        bitField0_ = (bitField0_ & ~0x00080000);
        spy_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 secondKill = 21;
      private int secondKill_ ;
      public boolean hasSecondKill() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      public int getSecondKill() {
        return secondKill_;
      }
      public Builder setSecondKill(int value) {
        bitField0_ |= 0x00100000;
        secondKill_ = value;
        onChanged();
        return this;
      }
      public Builder clearSecondKill() {
        bitField0_ = (bitField0_ & ~0x00100000);
        secondKill_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 roundNum = 22;
      private int roundNum_ ;
      public boolean hasRoundNum() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      public int getRoundNum() {
        return roundNum_;
      }
      public Builder setRoundNum(int value) {
        bitField0_ |= 0x00200000;
        roundNum_ = value;
        onChanged();
        return this;
      }
      public Builder clearRoundNum() {
        bitField0_ = (bitField0_ & ~0x00200000);
        roundNum_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 accurateNum = 23;
      private int accurateNum_ ;
      public boolean hasAccurateNum() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      public int getAccurateNum() {
        return accurateNum_;
      }
      public Builder setAccurateNum(int value) {
        bitField0_ |= 0x00400000;
        accurateNum_ = value;
        onChanged();
        return this;
      }
      public Builder clearAccurateNum() {
        bitField0_ = (bitField0_ & ~0x00400000);
        accurateNum_ = 0;
        onChanged();
        return this;
      }
      
      // optional string remark = 24;
      private java.lang.Object remark_ = "";
      public boolean hasRemark() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      public String getRemark() {
        java.lang.Object ref = remark_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          remark_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setRemark(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00800000;
        remark_ = value;
        onChanged();
        return this;
      }
      public Builder clearRemark() {
        bitField0_ = (bitField0_ & ~0x00800000);
        remark_ = getDefaultInstance().getRemark();
        onChanged();
        return this;
      }
      void setRemark(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00800000;
        remark_ = value;
        onChanged();
      }
      
      // optional int32 actexp = 25;
      private int actexp_ ;
      public boolean hasActexp() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      public int getActexp() {
        return actexp_;
      }
      public Builder setActexp(int value) {
        bitField0_ |= 0x01000000;
        actexp_ = value;
        onChanged();
        return this;
      }
      public Builder clearActexp() {
        bitField0_ = (bitField0_ & ~0x01000000);
        actexp_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.xinqihd.sns.gameserver.proto.RoleAudit)
    }
    
    static {
      defaultInstance = new RoleAudit(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.xinqihd.sns.gameserver.proto.RoleAudit)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_xinqihd_sns_gameserver_proto_RoleAudit_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_xinqihd_sns_gameserver_proto_RoleAudit_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\017RoleAudit.proto\022 com.xinqihd.sns.games" +
      "erver.proto\"\267\003\n\tRoleAudit\022\021\n\tsessionId\030\001" +
      " \002(\t\022\r\n\005level\030\002 \002(\005\022\013\n\003exp\030\003 \002(\005\022\017\n\007expD" +
      "eta\030\004 \002(\005\022\016\n\006maxExp\030\005 \002(\005\022\014\n\004kill\030\006 \002(\005\022" +
      "\013\n\003hit\030\007 \002(\005\022\022\n\nbattleMode\030\010 \001(\005\022\020\n\010room" +
      "Type\030\t \001(\005\022\016\n\006damage\030\n \001(\005\022\022\n\ncreditDeta" +
      "\030\013 \001(\005\022\021\n\thurtBlood\030\014 \001(\005\022\017\n\007winGame\030\r \001" +
      "(\005\022\021\n\ttotalUser\030\016 \001(\005\022\021\n\tpowerDiff\030\017 \001(\005" +
      "\022\020\n\010hitRatio\030\020 \001(\005\022\017\n\007killNum\030\021 \001(\005\022\017\n\007d" +
      "ropNum\030\022 \001(\005\022\017\n\007perfect\030\023 \001(\005\022\013\n\003spy\030\024 \001",
      "(\005\022\022\n\nsecondKill\030\025 \001(\005\022\020\n\010roundNum\030\026 \001(\005" +
      "\022\023\n\013accurateNum\030\027 \001(\005\022\016\n\006remark\030\030 \001(\t\022\016\n" +
      "\006actexp\030\031 \001(\005B\020B\016XinqiRoleAudit"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_xinqihd_sns_gameserver_proto_RoleAudit_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_xinqihd_sns_gameserver_proto_RoleAudit_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_xinqihd_sns_gameserver_proto_RoleAudit_descriptor,
              new java.lang.String[] { "SessionId", "Level", "Exp", "ExpDeta", "MaxExp", "Kill", "Hit", "BattleMode", "RoomType", "Damage", "CreditDeta", "HurtBlood", "WinGame", "TotalUser", "PowerDiff", "HitRatio", "KillNum", "DropNum", "Perfect", "Spy", "SecondKill", "RoundNum", "AccurateNum", "Remark", "Actexp", },
              com.xinqihd.sns.gameserver.proto.XinqiRoleAudit.RoleAudit.class,
              com.xinqihd.sns.gameserver.proto.XinqiRoleAudit.RoleAudit.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
