// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BseHallUserList.proto

package com.xinqihd.sns.gameserver.proto;

public final class XinqiBseHallUserList {
  private XinqiBseHallUserList() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface BseHallUserListOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // repeated string userId = 1;
    java.util.List<String> getUserIdList();
    int getUserIdCount();
    String getUserId(int index);
    
    // repeated string name = 2;
    java.util.List<String> getNameList();
    int getNameCount();
    String getName(int index);
    
    // repeated string url = 3;
    java.util.List<String> getUrlList();
    int getUrlCount();
    String getUrl(int index);
    
    // repeated int32 level = 4;
    java.util.List<java.lang.Integer> getLevelList();
    int getLevelCount();
    int getLevel(int index);
    
    // repeated int32 gender = 5;
    java.util.List<java.lang.Integer> getGenderList();
    int getGenderCount();
    int getGender(int index);
    
    // repeated int32 win = 6;
    java.util.List<java.lang.Integer> getWinList();
    int getWinCount();
    int getWin(int index);
    
    // repeated int32 total = 7;
    java.util.List<java.lang.Integer> getTotalList();
    int getTotalCount();
    int getTotal(int index);
    
    // repeated int32 attack = 8;
    java.util.List<java.lang.Integer> getAttackList();
    int getAttackCount();
    int getAttack(int index);
    
    // repeated bool yellowDmd = 9;
    java.util.List<java.lang.Boolean> getYellowDmdList();
    int getYellowDmdCount();
    boolean getYellowDmd(int index);
    
    // repeated bool yellowDmdYear = 10;
    java.util.List<java.lang.Boolean> getYellowDmdYearList();
    int getYellowDmdYearCount();
    boolean getYellowDmdYear(int index);
    
    // repeated int32 yellowDmdLv = 11;
    java.util.List<java.lang.Integer> getYellowDmdLvList();
    int getYellowDmdLvCount();
    int getYellowDmdLv(int index);
    
    // repeated int32 power = 12;
    java.util.List<java.lang.Integer> getPowerList();
    int getPowerCount();
    int getPower(int index);
    
    // required int32 userCount = 13;
    boolean hasUserCount();
    int getUserCount();
    
    // optional int32 page = 14 [default = 0];
    boolean hasPage();
    int getPage();
  }
  public static final class BseHallUserList extends
      com.google.protobuf.GeneratedMessage
      implements BseHallUserListOrBuilder {
    // Use BseHallUserList.newBuilder() to construct.
    private BseHallUserList(Builder builder) {
      super(builder);
    }
    private BseHallUserList(boolean noInit) {}
    
    private static final BseHallUserList defaultInstance;
    public static BseHallUserList getDefaultInstance() {
      return defaultInstance;
    }
    
    public BseHallUserList getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.xinqihd.sns.gameserver.proto.XinqiBseHallUserList.internal_static_com_xinqihd_sns_gameserver_proto_BseHallUserList_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.xinqihd.sns.gameserver.proto.XinqiBseHallUserList.internal_static_com_xinqihd_sns_gameserver_proto_BseHallUserList_fieldAccessorTable;
    }
    
    private int bitField0_;
    // repeated string userId = 1;
    public static final int USERID_FIELD_NUMBER = 1;
    private com.google.protobuf.LazyStringList userId_;
    public java.util.List<String>
        getUserIdList() {
      return userId_;
    }
    public int getUserIdCount() {
      return userId_.size();
    }
    public String getUserId(int index) {
      return userId_.get(index);
    }
    
    // repeated string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private com.google.protobuf.LazyStringList name_;
    public java.util.List<String>
        getNameList() {
      return name_;
    }
    public int getNameCount() {
      return name_.size();
    }
    public String getName(int index) {
      return name_.get(index);
    }
    
    // repeated string url = 3;
    public static final int URL_FIELD_NUMBER = 3;
    private com.google.protobuf.LazyStringList url_;
    public java.util.List<String>
        getUrlList() {
      return url_;
    }
    public int getUrlCount() {
      return url_.size();
    }
    public String getUrl(int index) {
      return url_.get(index);
    }
    
    // repeated int32 level = 4;
    public static final int LEVEL_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> level_;
    public java.util.List<java.lang.Integer>
        getLevelList() {
      return level_;
    }
    public int getLevelCount() {
      return level_.size();
    }
    public int getLevel(int index) {
      return level_.get(index);
    }
    
    // repeated int32 gender = 5;
    public static final int GENDER_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> gender_;
    public java.util.List<java.lang.Integer>
        getGenderList() {
      return gender_;
    }
    public int getGenderCount() {
      return gender_.size();
    }
    public int getGender(int index) {
      return gender_.get(index);
    }
    
    // repeated int32 win = 6;
    public static final int WIN_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> win_;
    public java.util.List<java.lang.Integer>
        getWinList() {
      return win_;
    }
    public int getWinCount() {
      return win_.size();
    }
    public int getWin(int index) {
      return win_.get(index);
    }
    
    // repeated int32 total = 7;
    public static final int TOTAL_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> total_;
    public java.util.List<java.lang.Integer>
        getTotalList() {
      return total_;
    }
    public int getTotalCount() {
      return total_.size();
    }
    public int getTotal(int index) {
      return total_.get(index);
    }
    
    // repeated int32 attack = 8;
    public static final int ATTACK_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Integer> attack_;
    public java.util.List<java.lang.Integer>
        getAttackList() {
      return attack_;
    }
    public int getAttackCount() {
      return attack_.size();
    }
    public int getAttack(int index) {
      return attack_.get(index);
    }
    
    // repeated bool yellowDmd = 9;
    public static final int YELLOWDMD_FIELD_NUMBER = 9;
    private java.util.List<java.lang.Boolean> yellowDmd_;
    public java.util.List<java.lang.Boolean>
        getYellowDmdList() {
      return yellowDmd_;
    }
    public int getYellowDmdCount() {
      return yellowDmd_.size();
    }
    public boolean getYellowDmd(int index) {
      return yellowDmd_.get(index);
    }
    
    // repeated bool yellowDmdYear = 10;
    public static final int YELLOWDMDYEAR_FIELD_NUMBER = 10;
    private java.util.List<java.lang.Boolean> yellowDmdYear_;
    public java.util.List<java.lang.Boolean>
        getYellowDmdYearList() {
      return yellowDmdYear_;
    }
    public int getYellowDmdYearCount() {
      return yellowDmdYear_.size();
    }
    public boolean getYellowDmdYear(int index) {
      return yellowDmdYear_.get(index);
    }
    
    // repeated int32 yellowDmdLv = 11;
    public static final int YELLOWDMDLV_FIELD_NUMBER = 11;
    private java.util.List<java.lang.Integer> yellowDmdLv_;
    public java.util.List<java.lang.Integer>
        getYellowDmdLvList() {
      return yellowDmdLv_;
    }
    public int getYellowDmdLvCount() {
      return yellowDmdLv_.size();
    }
    public int getYellowDmdLv(int index) {
      return yellowDmdLv_.get(index);
    }
    
    // repeated int32 power = 12;
    public static final int POWER_FIELD_NUMBER = 12;
    private java.util.List<java.lang.Integer> power_;
    public java.util.List<java.lang.Integer>
        getPowerList() {
      return power_;
    }
    public int getPowerCount() {
      return power_.size();
    }
    public int getPower(int index) {
      return power_.get(index);
    }
    
    // required int32 userCount = 13;
    public static final int USERCOUNT_FIELD_NUMBER = 13;
    private int userCount_;
    public boolean hasUserCount() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getUserCount() {
      return userCount_;
    }
    
    // optional int32 page = 14 [default = 0];
    public static final int PAGE_FIELD_NUMBER = 14;
    private int page_;
    public boolean hasPage() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getPage() {
      return page_;
    }
    
    private void initFields() {
      userId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      name_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      url_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      level_ = java.util.Collections.emptyList();;
      gender_ = java.util.Collections.emptyList();;
      win_ = java.util.Collections.emptyList();;
      total_ = java.util.Collections.emptyList();;
      attack_ = java.util.Collections.emptyList();;
      yellowDmd_ = java.util.Collections.emptyList();;
      yellowDmdYear_ = java.util.Collections.emptyList();;
      yellowDmdLv_ = java.util.Collections.emptyList();;
      power_ = java.util.Collections.emptyList();;
      userCount_ = 0;
      page_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasUserCount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < userId_.size(); i++) {
        output.writeBytes(1, userId_.getByteString(i));
      }
      for (int i = 0; i < name_.size(); i++) {
        output.writeBytes(2, name_.getByteString(i));
      }
      for (int i = 0; i < url_.size(); i++) {
        output.writeBytes(3, url_.getByteString(i));
      }
      for (int i = 0; i < level_.size(); i++) {
        output.writeInt32(4, level_.get(i));
      }
      for (int i = 0; i < gender_.size(); i++) {
        output.writeInt32(5, gender_.get(i));
      }
      for (int i = 0; i < win_.size(); i++) {
        output.writeInt32(6, win_.get(i));
      }
      for (int i = 0; i < total_.size(); i++) {
        output.writeInt32(7, total_.get(i));
      }
      for (int i = 0; i < attack_.size(); i++) {
        output.writeInt32(8, attack_.get(i));
      }
      for (int i = 0; i < yellowDmd_.size(); i++) {
        output.writeBool(9, yellowDmd_.get(i));
      }
      for (int i = 0; i < yellowDmdYear_.size(); i++) {
        output.writeBool(10, yellowDmdYear_.get(i));
      }
      for (int i = 0; i < yellowDmdLv_.size(); i++) {
        output.writeInt32(11, yellowDmdLv_.get(i));
      }
      for (int i = 0; i < power_.size(); i++) {
        output.writeInt32(12, power_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(13, userCount_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(14, page_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < userId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(userId_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getUserIdList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < name_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(name_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getNameList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < url_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(url_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getUrlList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < level_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(level_.get(i));
        }
        size += dataSize;
        size += 1 * getLevelList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < gender_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(gender_.get(i));
        }
        size += dataSize;
        size += 1 * getGenderList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < win_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(win_.get(i));
        }
        size += dataSize;
        size += 1 * getWinList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < total_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(total_.get(i));
        }
        size += dataSize;
        size += 1 * getTotalList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < attack_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(attack_.get(i));
        }
        size += dataSize;
        size += 1 * getAttackList().size();
      }
      {
        int dataSize = 0;
        dataSize = 1 * getYellowDmdList().size();
        size += dataSize;
        size += 1 * getYellowDmdList().size();
      }
      {
        int dataSize = 0;
        dataSize = 1 * getYellowDmdYearList().size();
        size += dataSize;
        size += 1 * getYellowDmdYearList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < yellowDmdLv_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(yellowDmdLv_.get(i));
        }
        size += dataSize;
        size += 1 * getYellowDmdLvList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < power_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(power_.get(i));
        }
        size += dataSize;
        size += 1 * getPowerList().size();
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, userCount_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, page_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.xinqihd.sns.gameserver.proto.XinqiBseHallUserList.BseHallUserList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiBseHallUserList.BseHallUserList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiBseHallUserList.BseHallUserList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiBseHallUserList.BseHallUserList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiBseHallUserList.BseHallUserList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiBseHallUserList.BseHallUserList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiBseHallUserList.BseHallUserList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiBseHallUserList.BseHallUserList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiBseHallUserList.BseHallUserList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiBseHallUserList.BseHallUserList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.xinqihd.sns.gameserver.proto.XinqiBseHallUserList.BseHallUserList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.xinqihd.sns.gameserver.proto.XinqiBseHallUserList.BseHallUserListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.xinqihd.sns.gameserver.proto.XinqiBseHallUserList.internal_static_com_xinqihd_sns_gameserver_proto_BseHallUserList_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.xinqihd.sns.gameserver.proto.XinqiBseHallUserList.internal_static_com_xinqihd_sns_gameserver_proto_BseHallUserList_fieldAccessorTable;
      }
      
      // Construct using com.xinqihd.sns.gameserver.proto.XinqiBseHallUserList.BseHallUserList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        userId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        url_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        level_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000008);
        gender_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000010);
        win_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000020);
        total_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000040);
        attack_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000080);
        yellowDmd_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000100);
        yellowDmdYear_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000200);
        yellowDmdLv_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000400);
        power_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000800);
        userCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        page_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.xinqihd.sns.gameserver.proto.XinqiBseHallUserList.BseHallUserList.getDescriptor();
      }
      
      public com.xinqihd.sns.gameserver.proto.XinqiBseHallUserList.BseHallUserList getDefaultInstanceForType() {
        return com.xinqihd.sns.gameserver.proto.XinqiBseHallUserList.BseHallUserList.getDefaultInstance();
      }
      
      public com.xinqihd.sns.gameserver.proto.XinqiBseHallUserList.BseHallUserList build() {
        com.xinqihd.sns.gameserver.proto.XinqiBseHallUserList.BseHallUserList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.xinqihd.sns.gameserver.proto.XinqiBseHallUserList.BseHallUserList buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.xinqihd.sns.gameserver.proto.XinqiBseHallUserList.BseHallUserList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.xinqihd.sns.gameserver.proto.XinqiBseHallUserList.BseHallUserList buildPartial() {
        com.xinqihd.sns.gameserver.proto.XinqiBseHallUserList.BseHallUserList result = new com.xinqihd.sns.gameserver.proto.XinqiBseHallUserList.BseHallUserList(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          userId_ = new com.google.protobuf.UnmodifiableLazyStringList(
              userId_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.userId_ = userId_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          name_ = new com.google.protobuf.UnmodifiableLazyStringList(
              name_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.name_ = name_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          url_ = new com.google.protobuf.UnmodifiableLazyStringList(
              url_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.url_ = url_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          level_ = java.util.Collections.unmodifiableList(level_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.level_ = level_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          gender_ = java.util.Collections.unmodifiableList(gender_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.gender_ = gender_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          win_ = java.util.Collections.unmodifiableList(win_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.win_ = win_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          total_ = java.util.Collections.unmodifiableList(total_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.total_ = total_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          attack_ = java.util.Collections.unmodifiableList(attack_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.attack_ = attack_;
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          yellowDmd_ = java.util.Collections.unmodifiableList(yellowDmd_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.yellowDmd_ = yellowDmd_;
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          yellowDmdYear_ = java.util.Collections.unmodifiableList(yellowDmdYear_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.yellowDmdYear_ = yellowDmdYear_;
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          yellowDmdLv_ = java.util.Collections.unmodifiableList(yellowDmdLv_);
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.yellowDmdLv_ = yellowDmdLv_;
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          power_ = java.util.Collections.unmodifiableList(power_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.power_ = power_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000001;
        }
        result.userCount_ = userCount_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00000002;
        }
        result.page_ = page_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.xinqihd.sns.gameserver.proto.XinqiBseHallUserList.BseHallUserList) {
          return mergeFrom((com.xinqihd.sns.gameserver.proto.XinqiBseHallUserList.BseHallUserList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.xinqihd.sns.gameserver.proto.XinqiBseHallUserList.BseHallUserList other) {
        if (other == com.xinqihd.sns.gameserver.proto.XinqiBseHallUserList.BseHallUserList.getDefaultInstance()) return this;
        if (!other.userId_.isEmpty()) {
          if (userId_.isEmpty()) {
            userId_ = other.userId_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureUserIdIsMutable();
            userId_.addAll(other.userId_);
          }
          onChanged();
        }
        if (!other.name_.isEmpty()) {
          if (name_.isEmpty()) {
            name_ = other.name_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureNameIsMutable();
            name_.addAll(other.name_);
          }
          onChanged();
        }
        if (!other.url_.isEmpty()) {
          if (url_.isEmpty()) {
            url_ = other.url_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureUrlIsMutable();
            url_.addAll(other.url_);
          }
          onChanged();
        }
        if (!other.level_.isEmpty()) {
          if (level_.isEmpty()) {
            level_ = other.level_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureLevelIsMutable();
            level_.addAll(other.level_);
          }
          onChanged();
        }
        if (!other.gender_.isEmpty()) {
          if (gender_.isEmpty()) {
            gender_ = other.gender_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureGenderIsMutable();
            gender_.addAll(other.gender_);
          }
          onChanged();
        }
        if (!other.win_.isEmpty()) {
          if (win_.isEmpty()) {
            win_ = other.win_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureWinIsMutable();
            win_.addAll(other.win_);
          }
          onChanged();
        }
        if (!other.total_.isEmpty()) {
          if (total_.isEmpty()) {
            total_ = other.total_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureTotalIsMutable();
            total_.addAll(other.total_);
          }
          onChanged();
        }
        if (!other.attack_.isEmpty()) {
          if (attack_.isEmpty()) {
            attack_ = other.attack_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureAttackIsMutable();
            attack_.addAll(other.attack_);
          }
          onChanged();
        }
        if (!other.yellowDmd_.isEmpty()) {
          if (yellowDmd_.isEmpty()) {
            yellowDmd_ = other.yellowDmd_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureYellowDmdIsMutable();
            yellowDmd_.addAll(other.yellowDmd_);
          }
          onChanged();
        }
        if (!other.yellowDmdYear_.isEmpty()) {
          if (yellowDmdYear_.isEmpty()) {
            yellowDmdYear_ = other.yellowDmdYear_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureYellowDmdYearIsMutable();
            yellowDmdYear_.addAll(other.yellowDmdYear_);
          }
          onChanged();
        }
        if (!other.yellowDmdLv_.isEmpty()) {
          if (yellowDmdLv_.isEmpty()) {
            yellowDmdLv_ = other.yellowDmdLv_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensureYellowDmdLvIsMutable();
            yellowDmdLv_.addAll(other.yellowDmdLv_);
          }
          onChanged();
        }
        if (!other.power_.isEmpty()) {
          if (power_.isEmpty()) {
            power_ = other.power_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensurePowerIsMutable();
            power_.addAll(other.power_);
          }
          onChanged();
        }
        if (other.hasUserCount()) {
          setUserCount(other.getUserCount());
        }
        if (other.hasPage()) {
          setPage(other.getPage());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasUserCount()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              ensureUserIdIsMutable();
              userId_.add(input.readBytes());
              break;
            }
            case 18: {
              ensureNameIsMutable();
              name_.add(input.readBytes());
              break;
            }
            case 26: {
              ensureUrlIsMutable();
              url_.add(input.readBytes());
              break;
            }
            case 32: {
              ensureLevelIsMutable();
              level_.add(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addLevel(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              ensureGenderIsMutable();
              gender_.add(input.readInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addGender(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 48: {
              ensureWinIsMutable();
              win_.add(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addWin(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              ensureTotalIsMutable();
              total_.add(input.readInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addTotal(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              ensureAttackIsMutable();
              attack_.add(input.readInt32());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addAttack(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 72: {
              ensureYellowDmdIsMutable();
              yellowDmd_.add(input.readBool());
              break;
            }
            case 74: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addYellowDmd(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
            case 80: {
              ensureYellowDmdYearIsMutable();
              yellowDmdYear_.add(input.readBool());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addYellowDmdYear(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
            case 88: {
              ensureYellowDmdLvIsMutable();
              yellowDmdLv_.add(input.readInt32());
              break;
            }
            case 90: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addYellowDmdLv(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 96: {
              ensurePowerIsMutable();
              power_.add(input.readInt32());
              break;
            }
            case 98: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addPower(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              userCount_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              page_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated string userId = 1;
      private com.google.protobuf.LazyStringList userId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureUserIdIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          userId_ = new com.google.protobuf.LazyStringArrayList(userId_);
          bitField0_ |= 0x00000001;
         }
      }
      public java.util.List<String>
          getUserIdList() {
        return java.util.Collections.unmodifiableList(userId_);
      }
      public int getUserIdCount() {
        return userId_.size();
      }
      public String getUserId(int index) {
        return userId_.get(index);
      }
      public Builder setUserId(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureUserIdIsMutable();
        userId_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addUserId(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureUserIdIsMutable();
        userId_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllUserId(
          java.lang.Iterable<String> values) {
        ensureUserIdIsMutable();
        super.addAll(values, userId_);
        onChanged();
        return this;
      }
      public Builder clearUserId() {
        userId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      void addUserId(com.google.protobuf.ByteString value) {
        ensureUserIdIsMutable();
        userId_.add(value);
        onChanged();
      }
      
      // repeated string name = 2;
      private com.google.protobuf.LazyStringList name_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureNameIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          name_ = new com.google.protobuf.LazyStringArrayList(name_);
          bitField0_ |= 0x00000002;
         }
      }
      public java.util.List<String>
          getNameList() {
        return java.util.Collections.unmodifiableList(name_);
      }
      public int getNameCount() {
        return name_.size();
      }
      public String getName(int index) {
        return name_.get(index);
      }
      public Builder setName(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureNameIsMutable();
        name_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureNameIsMutable();
        name_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllName(
          java.lang.Iterable<String> values) {
        ensureNameIsMutable();
        super.addAll(values, name_);
        onChanged();
        return this;
      }
      public Builder clearName() {
        name_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      void addName(com.google.protobuf.ByteString value) {
        ensureNameIsMutable();
        name_.add(value);
        onChanged();
      }
      
      // repeated string url = 3;
      private com.google.protobuf.LazyStringList url_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureUrlIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          url_ = new com.google.protobuf.LazyStringArrayList(url_);
          bitField0_ |= 0x00000004;
         }
      }
      public java.util.List<String>
          getUrlList() {
        return java.util.Collections.unmodifiableList(url_);
      }
      public int getUrlCount() {
        return url_.size();
      }
      public String getUrl(int index) {
        return url_.get(index);
      }
      public Builder setUrl(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureUrlIsMutable();
        url_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addUrl(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureUrlIsMutable();
        url_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllUrl(
          java.lang.Iterable<String> values) {
        ensureUrlIsMutable();
        super.addAll(values, url_);
        onChanged();
        return this;
      }
      public Builder clearUrl() {
        url_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      void addUrl(com.google.protobuf.ByteString value) {
        ensureUrlIsMutable();
        url_.add(value);
        onChanged();
      }
      
      // repeated int32 level = 4;
      private java.util.List<java.lang.Integer> level_ = java.util.Collections.emptyList();;
      private void ensureLevelIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          level_ = new java.util.ArrayList<java.lang.Integer>(level_);
          bitField0_ |= 0x00000008;
         }
      }
      public java.util.List<java.lang.Integer>
          getLevelList() {
        return java.util.Collections.unmodifiableList(level_);
      }
      public int getLevelCount() {
        return level_.size();
      }
      public int getLevel(int index) {
        return level_.get(index);
      }
      public Builder setLevel(
          int index, int value) {
        ensureLevelIsMutable();
        level_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addLevel(int value) {
        ensureLevelIsMutable();
        level_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllLevel(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureLevelIsMutable();
        super.addAll(values, level_);
        onChanged();
        return this;
      }
      public Builder clearLevel() {
        level_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      
      // repeated int32 gender = 5;
      private java.util.List<java.lang.Integer> gender_ = java.util.Collections.emptyList();;
      private void ensureGenderIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          gender_ = new java.util.ArrayList<java.lang.Integer>(gender_);
          bitField0_ |= 0x00000010;
         }
      }
      public java.util.List<java.lang.Integer>
          getGenderList() {
        return java.util.Collections.unmodifiableList(gender_);
      }
      public int getGenderCount() {
        return gender_.size();
      }
      public int getGender(int index) {
        return gender_.get(index);
      }
      public Builder setGender(
          int index, int value) {
        ensureGenderIsMutable();
        gender_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addGender(int value) {
        ensureGenderIsMutable();
        gender_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllGender(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureGenderIsMutable();
        super.addAll(values, gender_);
        onChanged();
        return this;
      }
      public Builder clearGender() {
        gender_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      
      // repeated int32 win = 6;
      private java.util.List<java.lang.Integer> win_ = java.util.Collections.emptyList();;
      private void ensureWinIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          win_ = new java.util.ArrayList<java.lang.Integer>(win_);
          bitField0_ |= 0x00000020;
         }
      }
      public java.util.List<java.lang.Integer>
          getWinList() {
        return java.util.Collections.unmodifiableList(win_);
      }
      public int getWinCount() {
        return win_.size();
      }
      public int getWin(int index) {
        return win_.get(index);
      }
      public Builder setWin(
          int index, int value) {
        ensureWinIsMutable();
        win_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addWin(int value) {
        ensureWinIsMutable();
        win_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllWin(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureWinIsMutable();
        super.addAll(values, win_);
        onChanged();
        return this;
      }
      public Builder clearWin() {
        win_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }
      
      // repeated int32 total = 7;
      private java.util.List<java.lang.Integer> total_ = java.util.Collections.emptyList();;
      private void ensureTotalIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          total_ = new java.util.ArrayList<java.lang.Integer>(total_);
          bitField0_ |= 0x00000040;
         }
      }
      public java.util.List<java.lang.Integer>
          getTotalList() {
        return java.util.Collections.unmodifiableList(total_);
      }
      public int getTotalCount() {
        return total_.size();
      }
      public int getTotal(int index) {
        return total_.get(index);
      }
      public Builder setTotal(
          int index, int value) {
        ensureTotalIsMutable();
        total_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addTotal(int value) {
        ensureTotalIsMutable();
        total_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllTotal(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureTotalIsMutable();
        super.addAll(values, total_);
        onChanged();
        return this;
      }
      public Builder clearTotal() {
        total_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }
      
      // repeated int32 attack = 8;
      private java.util.List<java.lang.Integer> attack_ = java.util.Collections.emptyList();;
      private void ensureAttackIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          attack_ = new java.util.ArrayList<java.lang.Integer>(attack_);
          bitField0_ |= 0x00000080;
         }
      }
      public java.util.List<java.lang.Integer>
          getAttackList() {
        return java.util.Collections.unmodifiableList(attack_);
      }
      public int getAttackCount() {
        return attack_.size();
      }
      public int getAttack(int index) {
        return attack_.get(index);
      }
      public Builder setAttack(
          int index, int value) {
        ensureAttackIsMutable();
        attack_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addAttack(int value) {
        ensureAttackIsMutable();
        attack_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllAttack(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureAttackIsMutable();
        super.addAll(values, attack_);
        onChanged();
        return this;
      }
      public Builder clearAttack() {
        attack_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }
      
      // repeated bool yellowDmd = 9;
      private java.util.List<java.lang.Boolean> yellowDmd_ = java.util.Collections.emptyList();;
      private void ensureYellowDmdIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          yellowDmd_ = new java.util.ArrayList<java.lang.Boolean>(yellowDmd_);
          bitField0_ |= 0x00000100;
         }
      }
      public java.util.List<java.lang.Boolean>
          getYellowDmdList() {
        return java.util.Collections.unmodifiableList(yellowDmd_);
      }
      public int getYellowDmdCount() {
        return yellowDmd_.size();
      }
      public boolean getYellowDmd(int index) {
        return yellowDmd_.get(index);
      }
      public Builder setYellowDmd(
          int index, boolean value) {
        ensureYellowDmdIsMutable();
        yellowDmd_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addYellowDmd(boolean value) {
        ensureYellowDmdIsMutable();
        yellowDmd_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllYellowDmd(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureYellowDmdIsMutable();
        super.addAll(values, yellowDmd_);
        onChanged();
        return this;
      }
      public Builder clearYellowDmd() {
        yellowDmd_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }
      
      // repeated bool yellowDmdYear = 10;
      private java.util.List<java.lang.Boolean> yellowDmdYear_ = java.util.Collections.emptyList();;
      private void ensureYellowDmdYearIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          yellowDmdYear_ = new java.util.ArrayList<java.lang.Boolean>(yellowDmdYear_);
          bitField0_ |= 0x00000200;
         }
      }
      public java.util.List<java.lang.Boolean>
          getYellowDmdYearList() {
        return java.util.Collections.unmodifiableList(yellowDmdYear_);
      }
      public int getYellowDmdYearCount() {
        return yellowDmdYear_.size();
      }
      public boolean getYellowDmdYear(int index) {
        return yellowDmdYear_.get(index);
      }
      public Builder setYellowDmdYear(
          int index, boolean value) {
        ensureYellowDmdYearIsMutable();
        yellowDmdYear_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addYellowDmdYear(boolean value) {
        ensureYellowDmdYearIsMutable();
        yellowDmdYear_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllYellowDmdYear(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureYellowDmdYearIsMutable();
        super.addAll(values, yellowDmdYear_);
        onChanged();
        return this;
      }
      public Builder clearYellowDmdYear() {
        yellowDmdYear_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
        return this;
      }
      
      // repeated int32 yellowDmdLv = 11;
      private java.util.List<java.lang.Integer> yellowDmdLv_ = java.util.Collections.emptyList();;
      private void ensureYellowDmdLvIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          yellowDmdLv_ = new java.util.ArrayList<java.lang.Integer>(yellowDmdLv_);
          bitField0_ |= 0x00000400;
         }
      }
      public java.util.List<java.lang.Integer>
          getYellowDmdLvList() {
        return java.util.Collections.unmodifiableList(yellowDmdLv_);
      }
      public int getYellowDmdLvCount() {
        return yellowDmdLv_.size();
      }
      public int getYellowDmdLv(int index) {
        return yellowDmdLv_.get(index);
      }
      public Builder setYellowDmdLv(
          int index, int value) {
        ensureYellowDmdLvIsMutable();
        yellowDmdLv_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addYellowDmdLv(int value) {
        ensureYellowDmdLvIsMutable();
        yellowDmdLv_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllYellowDmdLv(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureYellowDmdLvIsMutable();
        super.addAll(values, yellowDmdLv_);
        onChanged();
        return this;
      }
      public Builder clearYellowDmdLv() {
        yellowDmdLv_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
        return this;
      }
      
      // repeated int32 power = 12;
      private java.util.List<java.lang.Integer> power_ = java.util.Collections.emptyList();;
      private void ensurePowerIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          power_ = new java.util.ArrayList<java.lang.Integer>(power_);
          bitField0_ |= 0x00000800;
         }
      }
      public java.util.List<java.lang.Integer>
          getPowerList() {
        return java.util.Collections.unmodifiableList(power_);
      }
      public int getPowerCount() {
        return power_.size();
      }
      public int getPower(int index) {
        return power_.get(index);
      }
      public Builder setPower(
          int index, int value) {
        ensurePowerIsMutable();
        power_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addPower(int value) {
        ensurePowerIsMutable();
        power_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllPower(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePowerIsMutable();
        super.addAll(values, power_);
        onChanged();
        return this;
      }
      public Builder clearPower() {
        power_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
        return this;
      }
      
      // required int32 userCount = 13;
      private int userCount_ ;
      public boolean hasUserCount() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      public int getUserCount() {
        return userCount_;
      }
      public Builder setUserCount(int value) {
        bitField0_ |= 0x00001000;
        userCount_ = value;
        onChanged();
        return this;
      }
      public Builder clearUserCount() {
        bitField0_ = (bitField0_ & ~0x00001000);
        userCount_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 page = 14 [default = 0];
      private int page_ ;
      public boolean hasPage() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      public int getPage() {
        return page_;
      }
      public Builder setPage(int value) {
        bitField0_ |= 0x00002000;
        page_ = value;
        onChanged();
        return this;
      }
      public Builder clearPage() {
        bitField0_ = (bitField0_ & ~0x00002000);
        page_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.xinqihd.sns.gameserver.proto.BseHallUserList)
    }
    
    static {
      defaultInstance = new BseHallUserList(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.xinqihd.sns.gameserver.proto.BseHallUserList)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_xinqihd_sns_gameserver_proto_BseHallUserList_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_xinqihd_sns_gameserver_proto_BseHallUserList_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\025BseHallUserList.proto\022 com.xinqihd.sns" +
      ".gameserver.proto\"\371\001\n\017BseHallUserList\022\016\n" +
      "\006userId\030\001 \003(\t\022\014\n\004name\030\002 \003(\t\022\013\n\003url\030\003 \003(\t" +
      "\022\r\n\005level\030\004 \003(\005\022\016\n\006gender\030\005 \003(\005\022\013\n\003win\030\006" +
      " \003(\005\022\r\n\005total\030\007 \003(\005\022\016\n\006attack\030\010 \003(\005\022\021\n\ty" +
      "ellowDmd\030\t \003(\010\022\025\n\ryellowDmdYear\030\n \003(\010\022\023\n" +
      "\013yellowDmdLv\030\013 \003(\005\022\r\n\005power\030\014 \003(\005\022\021\n\tuse" +
      "rCount\030\r \002(\005\022\017\n\004page\030\016 \001(\005:\0010B\026B\024XinqiBs" +
      "eHallUserList"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_xinqihd_sns_gameserver_proto_BseHallUserList_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_xinqihd_sns_gameserver_proto_BseHallUserList_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_xinqihd_sns_gameserver_proto_BseHallUserList_descriptor,
              new java.lang.String[] { "UserId", "Name", "Url", "Level", "Gender", "Win", "Total", "Attack", "YellowDmd", "YellowDmdYear", "YellowDmdLv", "Power", "UserCount", "Page", },
              com.xinqihd.sns.gameserver.proto.XinqiBseHallUserList.BseHallUserList.class,
              com.xinqihd.sns.gameserver.proto.XinqiBseHallUserList.BseHallUserList.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
