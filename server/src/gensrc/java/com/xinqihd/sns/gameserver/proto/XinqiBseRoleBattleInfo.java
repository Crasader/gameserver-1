// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BseRoleBattleInfo.proto

package com.xinqihd.sns.gameserver.proto;

public final class XinqiBseRoleBattleInfo {
  private XinqiBseRoleBattleInfo() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface BseRoleBattleInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int32 roleAttack = 1;
    boolean hasRoleAttack();
    int getRoleAttack();
    
    // required int32 roleDefend = 2;
    boolean hasRoleDefend();
    int getRoleDefend();
    
    // required int32 roleAgility = 3;
    boolean hasRoleAgility();
    int getRoleAgility();
    
    // required int32 roleLuck = 4;
    boolean hasRoleLuck();
    int getRoleLuck();
    
    // required int32 roleBlood = 5;
    boolean hasRoleBlood();
    int getRoleBlood();
    
    // required int32 roleThew = 6;
    boolean hasRoleThew();
    int getRoleThew();
    
    // required int32 roleDamage = 7;
    boolean hasRoleDamage();
    int getRoleDamage();
    
    // required int32 roleSkin = 8;
    boolean hasRoleSkin();
    int getRoleSkin();
    
    // required int32 rolePower = 9;
    boolean hasRolePower();
    int getRolePower();
    
    // repeated int32 tools = 10;
    java.util.List<java.lang.Integer> getToolsList();
    int getToolsCount();
    int getTools(int index);
    
    // repeated .com.xinqihd.sns.gameserver.proto.PropData roleBagInfo = 11;
    java.util.List<com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData> 
        getRoleBagInfoList();
    com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData getRoleBagInfo(int index);
    int getRoleBagInfoCount();
    java.util.List<? extends com.xinqihd.sns.gameserver.proto.XinqiPropData.PropDataOrBuilder> 
        getRoleBagInfoOrBuilderList();
    com.xinqihd.sns.gameserver.proto.XinqiPropData.PropDataOrBuilder getRoleBagInfoOrBuilder(
        int index);
    
    // optional uint32 guildAttack = 60;
    boolean hasGuildAttack();
    int getGuildAttack();
    
    // optional uint32 guildDefend = 61;
    boolean hasGuildDefend();
    int getGuildDefend();
    
    // optional uint32 guildAgility = 62;
    boolean hasGuildAgility();
    int getGuildAgility();
    
    // optional uint32 guildLuck = 63;
    boolean hasGuildLuck();
    int getGuildLuck();
    
    // optional uint32 guildBlood = 64;
    boolean hasGuildBlood();
    int getGuildBlood();
    
    // optional uint32 guildThew = 65;
    boolean hasGuildThew();
    int getGuildThew();
    
    // optional uint32 guildPower = 66;
    boolean hasGuildPower();
    int getGuildPower();
  }
  public static final class BseRoleBattleInfo extends
      com.google.protobuf.GeneratedMessage
      implements BseRoleBattleInfoOrBuilder {
    // Use BseRoleBattleInfo.newBuilder() to construct.
    private BseRoleBattleInfo(Builder builder) {
      super(builder);
    }
    private BseRoleBattleInfo(boolean noInit) {}
    
    private static final BseRoleBattleInfo defaultInstance;
    public static BseRoleBattleInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public BseRoleBattleInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.xinqihd.sns.gameserver.proto.XinqiBseRoleBattleInfo.internal_static_com_xinqihd_sns_gameserver_proto_BseRoleBattleInfo_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.xinqihd.sns.gameserver.proto.XinqiBseRoleBattleInfo.internal_static_com_xinqihd_sns_gameserver_proto_BseRoleBattleInfo_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int32 roleAttack = 1;
    public static final int ROLEATTACK_FIELD_NUMBER = 1;
    private int roleAttack_;
    public boolean hasRoleAttack() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getRoleAttack() {
      return roleAttack_;
    }
    
    // required int32 roleDefend = 2;
    public static final int ROLEDEFEND_FIELD_NUMBER = 2;
    private int roleDefend_;
    public boolean hasRoleDefend() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getRoleDefend() {
      return roleDefend_;
    }
    
    // required int32 roleAgility = 3;
    public static final int ROLEAGILITY_FIELD_NUMBER = 3;
    private int roleAgility_;
    public boolean hasRoleAgility() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getRoleAgility() {
      return roleAgility_;
    }
    
    // required int32 roleLuck = 4;
    public static final int ROLELUCK_FIELD_NUMBER = 4;
    private int roleLuck_;
    public boolean hasRoleLuck() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getRoleLuck() {
      return roleLuck_;
    }
    
    // required int32 roleBlood = 5;
    public static final int ROLEBLOOD_FIELD_NUMBER = 5;
    private int roleBlood_;
    public boolean hasRoleBlood() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getRoleBlood() {
      return roleBlood_;
    }
    
    // required int32 roleThew = 6;
    public static final int ROLETHEW_FIELD_NUMBER = 6;
    private int roleThew_;
    public boolean hasRoleThew() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getRoleThew() {
      return roleThew_;
    }
    
    // required int32 roleDamage = 7;
    public static final int ROLEDAMAGE_FIELD_NUMBER = 7;
    private int roleDamage_;
    public boolean hasRoleDamage() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public int getRoleDamage() {
      return roleDamage_;
    }
    
    // required int32 roleSkin = 8;
    public static final int ROLESKIN_FIELD_NUMBER = 8;
    private int roleSkin_;
    public boolean hasRoleSkin() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public int getRoleSkin() {
      return roleSkin_;
    }
    
    // required int32 rolePower = 9;
    public static final int ROLEPOWER_FIELD_NUMBER = 9;
    private int rolePower_;
    public boolean hasRolePower() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public int getRolePower() {
      return rolePower_;
    }
    
    // repeated int32 tools = 10;
    public static final int TOOLS_FIELD_NUMBER = 10;
    private java.util.List<java.lang.Integer> tools_;
    public java.util.List<java.lang.Integer>
        getToolsList() {
      return tools_;
    }
    public int getToolsCount() {
      return tools_.size();
    }
    public int getTools(int index) {
      return tools_.get(index);
    }
    
    // repeated .com.xinqihd.sns.gameserver.proto.PropData roleBagInfo = 11;
    public static final int ROLEBAGINFO_FIELD_NUMBER = 11;
    private java.util.List<com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData> roleBagInfo_;
    public java.util.List<com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData> getRoleBagInfoList() {
      return roleBagInfo_;
    }
    public java.util.List<? extends com.xinqihd.sns.gameserver.proto.XinqiPropData.PropDataOrBuilder> 
        getRoleBagInfoOrBuilderList() {
      return roleBagInfo_;
    }
    public int getRoleBagInfoCount() {
      return roleBagInfo_.size();
    }
    public com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData getRoleBagInfo(int index) {
      return roleBagInfo_.get(index);
    }
    public com.xinqihd.sns.gameserver.proto.XinqiPropData.PropDataOrBuilder getRoleBagInfoOrBuilder(
        int index) {
      return roleBagInfo_.get(index);
    }
    
    // optional uint32 guildAttack = 60;
    public static final int GUILDATTACK_FIELD_NUMBER = 60;
    private int guildAttack_;
    public boolean hasGuildAttack() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public int getGuildAttack() {
      return guildAttack_;
    }
    
    // optional uint32 guildDefend = 61;
    public static final int GUILDDEFEND_FIELD_NUMBER = 61;
    private int guildDefend_;
    public boolean hasGuildDefend() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    public int getGuildDefend() {
      return guildDefend_;
    }
    
    // optional uint32 guildAgility = 62;
    public static final int GUILDAGILITY_FIELD_NUMBER = 62;
    private int guildAgility_;
    public boolean hasGuildAgility() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    public int getGuildAgility() {
      return guildAgility_;
    }
    
    // optional uint32 guildLuck = 63;
    public static final int GUILDLUCK_FIELD_NUMBER = 63;
    private int guildLuck_;
    public boolean hasGuildLuck() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    public int getGuildLuck() {
      return guildLuck_;
    }
    
    // optional uint32 guildBlood = 64;
    public static final int GUILDBLOOD_FIELD_NUMBER = 64;
    private int guildBlood_;
    public boolean hasGuildBlood() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    public int getGuildBlood() {
      return guildBlood_;
    }
    
    // optional uint32 guildThew = 65;
    public static final int GUILDTHEW_FIELD_NUMBER = 65;
    private int guildThew_;
    public boolean hasGuildThew() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    public int getGuildThew() {
      return guildThew_;
    }
    
    // optional uint32 guildPower = 66;
    public static final int GUILDPOWER_FIELD_NUMBER = 66;
    private int guildPower_;
    public boolean hasGuildPower() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    public int getGuildPower() {
      return guildPower_;
    }
    
    private void initFields() {
      roleAttack_ = 0;
      roleDefend_ = 0;
      roleAgility_ = 0;
      roleLuck_ = 0;
      roleBlood_ = 0;
      roleThew_ = 0;
      roleDamage_ = 0;
      roleSkin_ = 0;
      rolePower_ = 0;
      tools_ = java.util.Collections.emptyList();;
      roleBagInfo_ = java.util.Collections.emptyList();
      guildAttack_ = 0;
      guildDefend_ = 0;
      guildAgility_ = 0;
      guildLuck_ = 0;
      guildBlood_ = 0;
      guildThew_ = 0;
      guildPower_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasRoleAttack()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRoleDefend()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRoleAgility()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRoleLuck()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRoleBlood()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRoleThew()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRoleDamage()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRoleSkin()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRolePower()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getRoleBagInfoCount(); i++) {
        if (!getRoleBagInfo(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, roleAttack_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, roleDefend_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, roleAgility_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, roleLuck_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, roleBlood_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, roleThew_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, roleDamage_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, roleSkin_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, rolePower_);
      }
      for (int i = 0; i < tools_.size(); i++) {
        output.writeInt32(10, tools_.get(i));
      }
      for (int i = 0; i < roleBagInfo_.size(); i++) {
        output.writeMessage(11, roleBagInfo_.get(i));
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeUInt32(60, guildAttack_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeUInt32(61, guildDefend_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeUInt32(62, guildAgility_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeUInt32(63, guildLuck_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeUInt32(64, guildBlood_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeUInt32(65, guildThew_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeUInt32(66, guildPower_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, roleAttack_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, roleDefend_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, roleAgility_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, roleLuck_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, roleBlood_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, roleThew_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, roleDamage_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, roleSkin_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, rolePower_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < tools_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(tools_.get(i));
        }
        size += dataSize;
        size += 1 * getToolsList().size();
      }
      for (int i = 0; i < roleBagInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, roleBagInfo_.get(i));
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(60, guildAttack_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(61, guildDefend_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(62, guildAgility_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(63, guildLuck_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(64, guildBlood_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(65, guildThew_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(66, guildPower_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.xinqihd.sns.gameserver.proto.XinqiBseRoleBattleInfo.BseRoleBattleInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiBseRoleBattleInfo.BseRoleBattleInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiBseRoleBattleInfo.BseRoleBattleInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiBseRoleBattleInfo.BseRoleBattleInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiBseRoleBattleInfo.BseRoleBattleInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiBseRoleBattleInfo.BseRoleBattleInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiBseRoleBattleInfo.BseRoleBattleInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiBseRoleBattleInfo.BseRoleBattleInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiBseRoleBattleInfo.BseRoleBattleInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.xinqihd.sns.gameserver.proto.XinqiBseRoleBattleInfo.BseRoleBattleInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.xinqihd.sns.gameserver.proto.XinqiBseRoleBattleInfo.BseRoleBattleInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.xinqihd.sns.gameserver.proto.XinqiBseRoleBattleInfo.BseRoleBattleInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.xinqihd.sns.gameserver.proto.XinqiBseRoleBattleInfo.internal_static_com_xinqihd_sns_gameserver_proto_BseRoleBattleInfo_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.xinqihd.sns.gameserver.proto.XinqiBseRoleBattleInfo.internal_static_com_xinqihd_sns_gameserver_proto_BseRoleBattleInfo_fieldAccessorTable;
      }
      
      // Construct using com.xinqihd.sns.gameserver.proto.XinqiBseRoleBattleInfo.BseRoleBattleInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRoleBagInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        roleAttack_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        roleDefend_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        roleAgility_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        roleLuck_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        roleBlood_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        roleThew_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        roleDamage_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        roleSkin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        rolePower_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        tools_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000200);
        if (roleBagInfoBuilder_ == null) {
          roleBagInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
        } else {
          roleBagInfoBuilder_.clear();
        }
        guildAttack_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        guildDefend_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        guildAgility_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        guildLuck_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        guildBlood_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        guildThew_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        guildPower_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.xinqihd.sns.gameserver.proto.XinqiBseRoleBattleInfo.BseRoleBattleInfo.getDescriptor();
      }
      
      public com.xinqihd.sns.gameserver.proto.XinqiBseRoleBattleInfo.BseRoleBattleInfo getDefaultInstanceForType() {
        return com.xinqihd.sns.gameserver.proto.XinqiBseRoleBattleInfo.BseRoleBattleInfo.getDefaultInstance();
      }
      
      public com.xinqihd.sns.gameserver.proto.XinqiBseRoleBattleInfo.BseRoleBattleInfo build() {
        com.xinqihd.sns.gameserver.proto.XinqiBseRoleBattleInfo.BseRoleBattleInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.xinqihd.sns.gameserver.proto.XinqiBseRoleBattleInfo.BseRoleBattleInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.xinqihd.sns.gameserver.proto.XinqiBseRoleBattleInfo.BseRoleBattleInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.xinqihd.sns.gameserver.proto.XinqiBseRoleBattleInfo.BseRoleBattleInfo buildPartial() {
        com.xinqihd.sns.gameserver.proto.XinqiBseRoleBattleInfo.BseRoleBattleInfo result = new com.xinqihd.sns.gameserver.proto.XinqiBseRoleBattleInfo.BseRoleBattleInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.roleAttack_ = roleAttack_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.roleDefend_ = roleDefend_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.roleAgility_ = roleAgility_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.roleLuck_ = roleLuck_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.roleBlood_ = roleBlood_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.roleThew_ = roleThew_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.roleDamage_ = roleDamage_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.roleSkin_ = roleSkin_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.rolePower_ = rolePower_;
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          tools_ = java.util.Collections.unmodifiableList(tools_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.tools_ = tools_;
        if (roleBagInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400)) {
            roleBagInfo_ = java.util.Collections.unmodifiableList(roleBagInfo_);
            bitField0_ = (bitField0_ & ~0x00000400);
          }
          result.roleBagInfo_ = roleBagInfo_;
        } else {
          result.roleBagInfo_ = roleBagInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000200;
        }
        result.guildAttack_ = guildAttack_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000400;
        }
        result.guildDefend_ = guildDefend_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.guildAgility_ = guildAgility_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.guildLuck_ = guildLuck_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.guildBlood_ = guildBlood_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.guildThew_ = guildThew_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.guildPower_ = guildPower_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.xinqihd.sns.gameserver.proto.XinqiBseRoleBattleInfo.BseRoleBattleInfo) {
          return mergeFrom((com.xinqihd.sns.gameserver.proto.XinqiBseRoleBattleInfo.BseRoleBattleInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.xinqihd.sns.gameserver.proto.XinqiBseRoleBattleInfo.BseRoleBattleInfo other) {
        if (other == com.xinqihd.sns.gameserver.proto.XinqiBseRoleBattleInfo.BseRoleBattleInfo.getDefaultInstance()) return this;
        if (other.hasRoleAttack()) {
          setRoleAttack(other.getRoleAttack());
        }
        if (other.hasRoleDefend()) {
          setRoleDefend(other.getRoleDefend());
        }
        if (other.hasRoleAgility()) {
          setRoleAgility(other.getRoleAgility());
        }
        if (other.hasRoleLuck()) {
          setRoleLuck(other.getRoleLuck());
        }
        if (other.hasRoleBlood()) {
          setRoleBlood(other.getRoleBlood());
        }
        if (other.hasRoleThew()) {
          setRoleThew(other.getRoleThew());
        }
        if (other.hasRoleDamage()) {
          setRoleDamage(other.getRoleDamage());
        }
        if (other.hasRoleSkin()) {
          setRoleSkin(other.getRoleSkin());
        }
        if (other.hasRolePower()) {
          setRolePower(other.getRolePower());
        }
        if (!other.tools_.isEmpty()) {
          if (tools_.isEmpty()) {
            tools_ = other.tools_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureToolsIsMutable();
            tools_.addAll(other.tools_);
          }
          onChanged();
        }
        if (roleBagInfoBuilder_ == null) {
          if (!other.roleBagInfo_.isEmpty()) {
            if (roleBagInfo_.isEmpty()) {
              roleBagInfo_ = other.roleBagInfo_;
              bitField0_ = (bitField0_ & ~0x00000400);
            } else {
              ensureRoleBagInfoIsMutable();
              roleBagInfo_.addAll(other.roleBagInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.roleBagInfo_.isEmpty()) {
            if (roleBagInfoBuilder_.isEmpty()) {
              roleBagInfoBuilder_.dispose();
              roleBagInfoBuilder_ = null;
              roleBagInfo_ = other.roleBagInfo_;
              bitField0_ = (bitField0_ & ~0x00000400);
              roleBagInfoBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRoleBagInfoFieldBuilder() : null;
            } else {
              roleBagInfoBuilder_.addAllMessages(other.roleBagInfo_);
            }
          }
        }
        if (other.hasGuildAttack()) {
          setGuildAttack(other.getGuildAttack());
        }
        if (other.hasGuildDefend()) {
          setGuildDefend(other.getGuildDefend());
        }
        if (other.hasGuildAgility()) {
          setGuildAgility(other.getGuildAgility());
        }
        if (other.hasGuildLuck()) {
          setGuildLuck(other.getGuildLuck());
        }
        if (other.hasGuildBlood()) {
          setGuildBlood(other.getGuildBlood());
        }
        if (other.hasGuildThew()) {
          setGuildThew(other.getGuildThew());
        }
        if (other.hasGuildPower()) {
          setGuildPower(other.getGuildPower());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasRoleAttack()) {
          
          return false;
        }
        if (!hasRoleDefend()) {
          
          return false;
        }
        if (!hasRoleAgility()) {
          
          return false;
        }
        if (!hasRoleLuck()) {
          
          return false;
        }
        if (!hasRoleBlood()) {
          
          return false;
        }
        if (!hasRoleThew()) {
          
          return false;
        }
        if (!hasRoleDamage()) {
          
          return false;
        }
        if (!hasRoleSkin()) {
          
          return false;
        }
        if (!hasRolePower()) {
          
          return false;
        }
        for (int i = 0; i < getRoleBagInfoCount(); i++) {
          if (!getRoleBagInfo(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              roleAttack_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              roleDefend_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              roleAgility_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              roleLuck_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              roleBlood_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              roleThew_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              roleDamage_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              roleSkin_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              rolePower_ = input.readInt32();
              break;
            }
            case 80: {
              ensureToolsIsMutable();
              tools_.add(input.readInt32());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addTools(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 90: {
              com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData.Builder subBuilder = com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addRoleBagInfo(subBuilder.buildPartial());
              break;
            }
            case 480: {
              bitField0_ |= 0x00000800;
              guildAttack_ = input.readUInt32();
              break;
            }
            case 488: {
              bitField0_ |= 0x00001000;
              guildDefend_ = input.readUInt32();
              break;
            }
            case 496: {
              bitField0_ |= 0x00002000;
              guildAgility_ = input.readUInt32();
              break;
            }
            case 504: {
              bitField0_ |= 0x00004000;
              guildLuck_ = input.readUInt32();
              break;
            }
            case 512: {
              bitField0_ |= 0x00008000;
              guildBlood_ = input.readUInt32();
              break;
            }
            case 520: {
              bitField0_ |= 0x00010000;
              guildThew_ = input.readUInt32();
              break;
            }
            case 528: {
              bitField0_ |= 0x00020000;
              guildPower_ = input.readUInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 roleAttack = 1;
      private int roleAttack_ ;
      public boolean hasRoleAttack() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getRoleAttack() {
        return roleAttack_;
      }
      public Builder setRoleAttack(int value) {
        bitField0_ |= 0x00000001;
        roleAttack_ = value;
        onChanged();
        return this;
      }
      public Builder clearRoleAttack() {
        bitField0_ = (bitField0_ & ~0x00000001);
        roleAttack_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 roleDefend = 2;
      private int roleDefend_ ;
      public boolean hasRoleDefend() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getRoleDefend() {
        return roleDefend_;
      }
      public Builder setRoleDefend(int value) {
        bitField0_ |= 0x00000002;
        roleDefend_ = value;
        onChanged();
        return this;
      }
      public Builder clearRoleDefend() {
        bitField0_ = (bitField0_ & ~0x00000002);
        roleDefend_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 roleAgility = 3;
      private int roleAgility_ ;
      public boolean hasRoleAgility() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getRoleAgility() {
        return roleAgility_;
      }
      public Builder setRoleAgility(int value) {
        bitField0_ |= 0x00000004;
        roleAgility_ = value;
        onChanged();
        return this;
      }
      public Builder clearRoleAgility() {
        bitField0_ = (bitField0_ & ~0x00000004);
        roleAgility_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 roleLuck = 4;
      private int roleLuck_ ;
      public boolean hasRoleLuck() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getRoleLuck() {
        return roleLuck_;
      }
      public Builder setRoleLuck(int value) {
        bitField0_ |= 0x00000008;
        roleLuck_ = value;
        onChanged();
        return this;
      }
      public Builder clearRoleLuck() {
        bitField0_ = (bitField0_ & ~0x00000008);
        roleLuck_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 roleBlood = 5;
      private int roleBlood_ ;
      public boolean hasRoleBlood() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getRoleBlood() {
        return roleBlood_;
      }
      public Builder setRoleBlood(int value) {
        bitField0_ |= 0x00000010;
        roleBlood_ = value;
        onChanged();
        return this;
      }
      public Builder clearRoleBlood() {
        bitField0_ = (bitField0_ & ~0x00000010);
        roleBlood_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 roleThew = 6;
      private int roleThew_ ;
      public boolean hasRoleThew() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getRoleThew() {
        return roleThew_;
      }
      public Builder setRoleThew(int value) {
        bitField0_ |= 0x00000020;
        roleThew_ = value;
        onChanged();
        return this;
      }
      public Builder clearRoleThew() {
        bitField0_ = (bitField0_ & ~0x00000020);
        roleThew_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 roleDamage = 7;
      private int roleDamage_ ;
      public boolean hasRoleDamage() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public int getRoleDamage() {
        return roleDamage_;
      }
      public Builder setRoleDamage(int value) {
        bitField0_ |= 0x00000040;
        roleDamage_ = value;
        onChanged();
        return this;
      }
      public Builder clearRoleDamage() {
        bitField0_ = (bitField0_ & ~0x00000040);
        roleDamage_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 roleSkin = 8;
      private int roleSkin_ ;
      public boolean hasRoleSkin() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public int getRoleSkin() {
        return roleSkin_;
      }
      public Builder setRoleSkin(int value) {
        bitField0_ |= 0x00000080;
        roleSkin_ = value;
        onChanged();
        return this;
      }
      public Builder clearRoleSkin() {
        bitField0_ = (bitField0_ & ~0x00000080);
        roleSkin_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 rolePower = 9;
      private int rolePower_ ;
      public boolean hasRolePower() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public int getRolePower() {
        return rolePower_;
      }
      public Builder setRolePower(int value) {
        bitField0_ |= 0x00000100;
        rolePower_ = value;
        onChanged();
        return this;
      }
      public Builder clearRolePower() {
        bitField0_ = (bitField0_ & ~0x00000100);
        rolePower_ = 0;
        onChanged();
        return this;
      }
      
      // repeated int32 tools = 10;
      private java.util.List<java.lang.Integer> tools_ = java.util.Collections.emptyList();;
      private void ensureToolsIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          tools_ = new java.util.ArrayList<java.lang.Integer>(tools_);
          bitField0_ |= 0x00000200;
         }
      }
      public java.util.List<java.lang.Integer>
          getToolsList() {
        return java.util.Collections.unmodifiableList(tools_);
      }
      public int getToolsCount() {
        return tools_.size();
      }
      public int getTools(int index) {
        return tools_.get(index);
      }
      public Builder setTools(
          int index, int value) {
        ensureToolsIsMutable();
        tools_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addTools(int value) {
        ensureToolsIsMutable();
        tools_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllTools(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureToolsIsMutable();
        super.addAll(values, tools_);
        onChanged();
        return this;
      }
      public Builder clearTools() {
        tools_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
        return this;
      }
      
      // repeated .com.xinqihd.sns.gameserver.proto.PropData roleBagInfo = 11;
      private java.util.List<com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData> roleBagInfo_ =
        java.util.Collections.emptyList();
      private void ensureRoleBagInfoIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          roleBagInfo_ = new java.util.ArrayList<com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData>(roleBagInfo_);
          bitField0_ |= 0x00000400;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData, com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData.Builder, com.xinqihd.sns.gameserver.proto.XinqiPropData.PropDataOrBuilder> roleBagInfoBuilder_;
      
      public java.util.List<com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData> getRoleBagInfoList() {
        if (roleBagInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(roleBagInfo_);
        } else {
          return roleBagInfoBuilder_.getMessageList();
        }
      }
      public int getRoleBagInfoCount() {
        if (roleBagInfoBuilder_ == null) {
          return roleBagInfo_.size();
        } else {
          return roleBagInfoBuilder_.getCount();
        }
      }
      public com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData getRoleBagInfo(int index) {
        if (roleBagInfoBuilder_ == null) {
          return roleBagInfo_.get(index);
        } else {
          return roleBagInfoBuilder_.getMessage(index);
        }
      }
      public Builder setRoleBagInfo(
          int index, com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData value) {
        if (roleBagInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoleBagInfoIsMutable();
          roleBagInfo_.set(index, value);
          onChanged();
        } else {
          roleBagInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setRoleBagInfo(
          int index, com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData.Builder builderForValue) {
        if (roleBagInfoBuilder_ == null) {
          ensureRoleBagInfoIsMutable();
          roleBagInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          roleBagInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addRoleBagInfo(com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData value) {
        if (roleBagInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoleBagInfoIsMutable();
          roleBagInfo_.add(value);
          onChanged();
        } else {
          roleBagInfoBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addRoleBagInfo(
          int index, com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData value) {
        if (roleBagInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoleBagInfoIsMutable();
          roleBagInfo_.add(index, value);
          onChanged();
        } else {
          roleBagInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addRoleBagInfo(
          com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData.Builder builderForValue) {
        if (roleBagInfoBuilder_ == null) {
          ensureRoleBagInfoIsMutable();
          roleBagInfo_.add(builderForValue.build());
          onChanged();
        } else {
          roleBagInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addRoleBagInfo(
          int index, com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData.Builder builderForValue) {
        if (roleBagInfoBuilder_ == null) {
          ensureRoleBagInfoIsMutable();
          roleBagInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          roleBagInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllRoleBagInfo(
          java.lang.Iterable<? extends com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData> values) {
        if (roleBagInfoBuilder_ == null) {
          ensureRoleBagInfoIsMutable();
          super.addAll(values, roleBagInfo_);
          onChanged();
        } else {
          roleBagInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearRoleBagInfo() {
        if (roleBagInfoBuilder_ == null) {
          roleBagInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
          onChanged();
        } else {
          roleBagInfoBuilder_.clear();
        }
        return this;
      }
      public Builder removeRoleBagInfo(int index) {
        if (roleBagInfoBuilder_ == null) {
          ensureRoleBagInfoIsMutable();
          roleBagInfo_.remove(index);
          onChanged();
        } else {
          roleBagInfoBuilder_.remove(index);
        }
        return this;
      }
      public com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData.Builder getRoleBagInfoBuilder(
          int index) {
        return getRoleBagInfoFieldBuilder().getBuilder(index);
      }
      public com.xinqihd.sns.gameserver.proto.XinqiPropData.PropDataOrBuilder getRoleBagInfoOrBuilder(
          int index) {
        if (roleBagInfoBuilder_ == null) {
          return roleBagInfo_.get(index);  } else {
          return roleBagInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends com.xinqihd.sns.gameserver.proto.XinqiPropData.PropDataOrBuilder> 
           getRoleBagInfoOrBuilderList() {
        if (roleBagInfoBuilder_ != null) {
          return roleBagInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(roleBagInfo_);
        }
      }
      public com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData.Builder addRoleBagInfoBuilder() {
        return getRoleBagInfoFieldBuilder().addBuilder(
            com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData.getDefaultInstance());
      }
      public com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData.Builder addRoleBagInfoBuilder(
          int index) {
        return getRoleBagInfoFieldBuilder().addBuilder(
            index, com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData.getDefaultInstance());
      }
      public java.util.List<com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData.Builder> 
           getRoleBagInfoBuilderList() {
        return getRoleBagInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData, com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData.Builder, com.xinqihd.sns.gameserver.proto.XinqiPropData.PropDataOrBuilder> 
          getRoleBagInfoFieldBuilder() {
        if (roleBagInfoBuilder_ == null) {
          roleBagInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData, com.xinqihd.sns.gameserver.proto.XinqiPropData.PropData.Builder, com.xinqihd.sns.gameserver.proto.XinqiPropData.PropDataOrBuilder>(
                  roleBagInfo_,
                  ((bitField0_ & 0x00000400) == 0x00000400),
                  getParentForChildren(),
                  isClean());
          roleBagInfo_ = null;
        }
        return roleBagInfoBuilder_;
      }
      
      // optional uint32 guildAttack = 60;
      private int guildAttack_ ;
      public boolean hasGuildAttack() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      public int getGuildAttack() {
        return guildAttack_;
      }
      public Builder setGuildAttack(int value) {
        bitField0_ |= 0x00000800;
        guildAttack_ = value;
        onChanged();
        return this;
      }
      public Builder clearGuildAttack() {
        bitField0_ = (bitField0_ & ~0x00000800);
        guildAttack_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 guildDefend = 61;
      private int guildDefend_ ;
      public boolean hasGuildDefend() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      public int getGuildDefend() {
        return guildDefend_;
      }
      public Builder setGuildDefend(int value) {
        bitField0_ |= 0x00001000;
        guildDefend_ = value;
        onChanged();
        return this;
      }
      public Builder clearGuildDefend() {
        bitField0_ = (bitField0_ & ~0x00001000);
        guildDefend_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 guildAgility = 62;
      private int guildAgility_ ;
      public boolean hasGuildAgility() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      public int getGuildAgility() {
        return guildAgility_;
      }
      public Builder setGuildAgility(int value) {
        bitField0_ |= 0x00002000;
        guildAgility_ = value;
        onChanged();
        return this;
      }
      public Builder clearGuildAgility() {
        bitField0_ = (bitField0_ & ~0x00002000);
        guildAgility_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 guildLuck = 63;
      private int guildLuck_ ;
      public boolean hasGuildLuck() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      public int getGuildLuck() {
        return guildLuck_;
      }
      public Builder setGuildLuck(int value) {
        bitField0_ |= 0x00004000;
        guildLuck_ = value;
        onChanged();
        return this;
      }
      public Builder clearGuildLuck() {
        bitField0_ = (bitField0_ & ~0x00004000);
        guildLuck_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 guildBlood = 64;
      private int guildBlood_ ;
      public boolean hasGuildBlood() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      public int getGuildBlood() {
        return guildBlood_;
      }
      public Builder setGuildBlood(int value) {
        bitField0_ |= 0x00008000;
        guildBlood_ = value;
        onChanged();
        return this;
      }
      public Builder clearGuildBlood() {
        bitField0_ = (bitField0_ & ~0x00008000);
        guildBlood_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 guildThew = 65;
      private int guildThew_ ;
      public boolean hasGuildThew() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      public int getGuildThew() {
        return guildThew_;
      }
      public Builder setGuildThew(int value) {
        bitField0_ |= 0x00010000;
        guildThew_ = value;
        onChanged();
        return this;
      }
      public Builder clearGuildThew() {
        bitField0_ = (bitField0_ & ~0x00010000);
        guildThew_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 guildPower = 66;
      private int guildPower_ ;
      public boolean hasGuildPower() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      public int getGuildPower() {
        return guildPower_;
      }
      public Builder setGuildPower(int value) {
        bitField0_ |= 0x00020000;
        guildPower_ = value;
        onChanged();
        return this;
      }
      public Builder clearGuildPower() {
        bitField0_ = (bitField0_ & ~0x00020000);
        guildPower_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.xinqihd.sns.gameserver.proto.BseRoleBattleInfo)
    }
    
    static {
      defaultInstance = new BseRoleBattleInfo(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.xinqihd.sns.gameserver.proto.BseRoleBattleInfo)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_xinqihd_sns_gameserver_proto_BseRoleBattleInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_xinqihd_sns_gameserver_proto_BseRoleBattleInfo_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\027BseRoleBattleInfo.proto\022 com.xinqihd.s" +
      "ns.gameserver.proto\032\016PropData.proto\"\236\003\n\021" +
      "BseRoleBattleInfo\022\022\n\nroleAttack\030\001 \002(\005\022\022\n" +
      "\nroleDefend\030\002 \002(\005\022\023\n\013roleAgility\030\003 \002(\005\022\020" +
      "\n\010roleLuck\030\004 \002(\005\022\021\n\troleBlood\030\005 \002(\005\022\020\n\010r" +
      "oleThew\030\006 \002(\005\022\022\n\nroleDamage\030\007 \002(\005\022\020\n\010rol" +
      "eSkin\030\010 \002(\005\022\021\n\trolePower\030\t \002(\005\022\r\n\005tools\030" +
      "\n \003(\005\022?\n\013roleBagInfo\030\013 \003(\0132*.com.xinqihd" +
      ".sns.gameserver.proto.PropData\022\023\n\013guildA" +
      "ttack\030< \001(\r\022\023\n\013guildDefend\030= \001(\r\022\024\n\014guil",
      "dAgility\030> \001(\r\022\021\n\tguildLuck\030? \001(\r\022\022\n\ngui" +
      "ldBlood\030@ \001(\r\022\021\n\tguildThew\030A \001(\r\022\022\n\nguil" +
      "dPower\030B \001(\rB\030B\026XinqiBseRoleBattleInfo"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_xinqihd_sns_gameserver_proto_BseRoleBattleInfo_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_xinqihd_sns_gameserver_proto_BseRoleBattleInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_xinqihd_sns_gameserver_proto_BseRoleBattleInfo_descriptor,
              new java.lang.String[] { "RoleAttack", "RoleDefend", "RoleAgility", "RoleLuck", "RoleBlood", "RoleThew", "RoleDamage", "RoleSkin", "RolePower", "Tools", "RoleBagInfo", "GuildAttack", "GuildDefend", "GuildAgility", "GuildLuck", "GuildBlood", "GuildThew", "GuildPower", },
              com.xinqihd.sns.gameserver.proto.XinqiBseRoleBattleInfo.BseRoleBattleInfo.class,
              com.xinqihd.sns.gameserver.proto.XinqiBseRoleBattleInfo.BseRoleBattleInfo.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.xinqihd.sns.gameserver.proto.XinqiPropData.getDescriptor(),
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
